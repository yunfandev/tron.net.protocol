// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tronprotocol/core/contract/balance_contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tron.Net.Protocol {

  /// <summary>Holder for reflection information generated from tronprotocol/core/contract/balance_contract.proto</summary>
  public static partial class BalanceContractReflection {

    #region Descriptor
    /// <summary>File descriptor for tronprotocol/core/contract/balance_contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BalanceContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjF0cm9ucHJvdG9jb2wvY29yZS9jb250cmFjdC9iYWxhbmNlX2NvbnRyYWN0",
            "LnByb3RvEghwcm90b2NvbBoaY29yZS9jb250cmFjdC9jb21tb24ucHJvdG8i",
            "owEKFUZyZWV6ZUJhbGFuY2VDb250cmFjdBIVCg1vd25lcl9hZGRyZXNzGAEg",
            "ASgMEhYKDmZyb3plbl9iYWxhbmNlGAIgASgDEhcKD2Zyb3plbl9kdXJhdGlv",
            "bhgDIAEoAxIoCghyZXNvdXJjZRgKIAEoDjIWLnByb3RvY29sLlJlc291cmNl",
            "Q29kZRIYChByZWNlaXZlcl9hZGRyZXNzGA8gASgMInQKF1VuZnJlZXplQmFs",
            "YW5jZUNvbnRyYWN0EhUKDW93bmVyX2FkZHJlc3MYASABKAwSKAoIcmVzb3Vy",
            "Y2UYCiABKA4yFi5wcm90b2NvbC5SZXNvdXJjZUNvZGUSGAoQcmVjZWl2ZXJf",
            "YWRkcmVzcxgPIAEoDCIwChdXaXRoZHJhd0JhbGFuY2VDb250cmFjdBIVCg1v",
            "d25lcl9hZGRyZXNzGAEgASgMIk0KEFRyYW5zZmVyQ29udHJhY3QSFQoNb3du",
            "ZXJfYWRkcmVzcxgBIAEoDBISCgp0b19hZGRyZXNzGAIgASgMEg4KBmFtb3Vu",
            "dBgDIAEoAyLjAQoXVHJhbnNhY3Rpb25CYWxhbmNlVHJhY2USHgoWdHJhbnNh",
            "Y3Rpb25faWRlbnRpZmllchgBIAEoDBI+CglvcGVyYXRpb24YAiADKAsyKy5w",
            "cm90b2NvbC5UcmFuc2FjdGlvbkJhbGFuY2VUcmFjZS5PcGVyYXRpb24SDAoE",
            "dHlwZRgDIAEoCRIOCgZzdGF0dXMYBCABKAkaSgoJT3BlcmF0aW9uEhwKFG9w",
            "ZXJhdGlvbl9pZGVudGlmaWVyGAEgASgDEg8KB2FkZHJlc3MYAiABKAwSDgoG",
            "YW1vdW50GAMgASgDIuQBChFCbG9ja0JhbGFuY2VUcmFjZRJFChBibG9ja19p",
            "ZGVudGlmaWVyGAEgASgLMisucHJvdG9jb2wuQmxvY2tCYWxhbmNlVHJhY2Uu",
            "QmxvY2tJZGVudGlmaWVyEhEKCXRpbWVzdGFtcBgCIAEoAxJEChl0cmFuc2Fj",
            "dGlvbl9iYWxhbmNlX3RyYWNlGAMgAygLMiEucHJvdG9jb2wuVHJhbnNhY3Rp",
            "b25CYWxhbmNlVHJhY2UaLwoPQmxvY2tJZGVudGlmaWVyEgwKBGhhc2gYASAB",
            "KAwSDgoGbnVtYmVyGAIgASgDIjQKDEFjY291bnRUcmFjZRIPCgdiYWxhbmNl",
            "GAEgASgDEhMKC3BsYWNlaG9sZGVyGGMgASgDIiQKEUFjY291bnRJZGVudGlm",
            "aWVyEg8KB2FkZHJlc3MYASABKAwilwEKFUFjY291bnRCYWxhbmNlUmVxdWVz",
            "dBI3ChJhY2NvdW50X2lkZW50aWZpZXIYASABKAsyGy5wcm90b2NvbC5BY2Nv",
            "dW50SWRlbnRpZmllchJFChBibG9ja19pZGVudGlmaWVyGAIgASgLMisucHJv",
            "dG9jb2wuQmxvY2tCYWxhbmNlVHJhY2UuQmxvY2tJZGVudGlmaWVyInAKFkFj",
            "Y291bnRCYWxhbmNlUmVzcG9uc2USDwoHYmFsYW5jZRgBIAEoAxJFChBibG9j",
            "a19pZGVudGlmaWVyGAIgASgLMisucHJvdG9jb2wuQmxvY2tCYWxhbmNlVHJh",
            "Y2UuQmxvY2tJZGVudGlmaWVyQlkKGG9yZy50cm9uLnByb3Rvcy5jb250cmFj",
            "dFopZ2l0aHViLmNvbS90cm9ucHJvdG9jb2wvZ3JwYy1nYXRld2F5L2NvcmWq",
            "AhFUcm9uLk5ldC5Qcm90b2NvbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tron.Net.Protocol.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.FreezeBalanceContract), global::Tron.Net.Protocol.FreezeBalanceContract.Parser, new[]{ "OwnerAddress", "FrozenBalance", "FrozenDuration", "Resource", "ReceiverAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.UnfreezeBalanceContract), global::Tron.Net.Protocol.UnfreezeBalanceContract.Parser, new[]{ "OwnerAddress", "Resource", "ReceiverAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.WithdrawBalanceContract), global::Tron.Net.Protocol.WithdrawBalanceContract.Parser, new[]{ "OwnerAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransferContract), global::Tron.Net.Protocol.TransferContract.Parser, new[]{ "OwnerAddress", "ToAddress", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionBalanceTrace), global::Tron.Net.Protocol.TransactionBalanceTrace.Parser, new[]{ "TransactionIdentifier", "Operation", "Type", "Status" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionBalanceTrace.Types.Operation), global::Tron.Net.Protocol.TransactionBalanceTrace.Types.Operation.Parser, new[]{ "OperationIdentifier", "Address", "Amount" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BlockBalanceTrace), global::Tron.Net.Protocol.BlockBalanceTrace.Parser, new[]{ "BlockIdentifier", "Timestamp", "TransactionBalanceTrace" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier), global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier.Parser, new[]{ "Hash", "Number" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountTrace), global::Tron.Net.Protocol.AccountTrace.Parser, new[]{ "Balance", "Placeholder" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountIdentifier), global::Tron.Net.Protocol.AccountIdentifier.Parser, new[]{ "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountBalanceRequest), global::Tron.Net.Protocol.AccountBalanceRequest.Parser, new[]{ "AccountIdentifier", "BlockIdentifier" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountBalanceResponse), global::Tron.Net.Protocol.AccountBalanceResponse.Parser, new[]{ "Balance", "BlockIdentifier" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class FreezeBalanceContract : pb::IMessage<FreezeBalanceContract> {
    private static readonly pb::MessageParser<FreezeBalanceContract> _parser = new pb::MessageParser<FreezeBalanceContract>(() => new FreezeBalanceContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FreezeBalanceContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreezeBalanceContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreezeBalanceContract(FreezeBalanceContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      frozenBalance_ = other.frozenBalance_;
      frozenDuration_ = other.frozenDuration_;
      resource_ = other.resource_;
      receiverAddress_ = other.receiverAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FreezeBalanceContract Clone() {
      return new FreezeBalanceContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "frozen_balance" field.</summary>
    public const int FrozenBalanceFieldNumber = 2;
    private long frozenBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FrozenBalance {
      get { return frozenBalance_; }
      set {
        frozenBalance_ = value;
      }
    }

    /// <summary>Field number for the "frozen_duration" field.</summary>
    public const int FrozenDurationFieldNumber = 3;
    private long frozenDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FrozenDuration {
      get { return frozenDuration_; }
      set {
        frozenDuration_ = value;
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 10;
    private global::Tron.Net.Protocol.ResourceCode resource_ = global::Tron.Net.Protocol.ResourceCode.Bandwidth;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.ResourceCode Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "receiver_address" field.</summary>
    public const int ReceiverAddressFieldNumber = 15;
    private pb::ByteString receiverAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ReceiverAddress {
      get { return receiverAddress_; }
      set {
        receiverAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FreezeBalanceContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FreezeBalanceContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (FrozenBalance != other.FrozenBalance) return false;
      if (FrozenDuration != other.FrozenDuration) return false;
      if (Resource != other.Resource) return false;
      if (ReceiverAddress != other.ReceiverAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (FrozenBalance != 0L) hash ^= FrozenBalance.GetHashCode();
      if (FrozenDuration != 0L) hash ^= FrozenDuration.GetHashCode();
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) hash ^= Resource.GetHashCode();
      if (ReceiverAddress.Length != 0) hash ^= ReceiverAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (FrozenBalance != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FrozenBalance);
      }
      if (FrozenDuration != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(FrozenDuration);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        output.WriteRawTag(122);
        output.WriteBytes(ReceiverAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (FrozenBalance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrozenBalance);
      }
      if (FrozenDuration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrozenDuration);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReceiverAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FreezeBalanceContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.FrozenBalance != 0L) {
        FrozenBalance = other.FrozenBalance;
      }
      if (other.FrozenDuration != 0L) {
        FrozenDuration = other.FrozenDuration;
      }
      if (other.Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        Resource = other.Resource;
      }
      if (other.ReceiverAddress.Length != 0) {
        ReceiverAddress = other.ReceiverAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 16: {
            FrozenBalance = input.ReadInt64();
            break;
          }
          case 24: {
            FrozenDuration = input.ReadInt64();
            break;
          }
          case 80: {
            Resource = (global::Tron.Net.Protocol.ResourceCode) input.ReadEnum();
            break;
          }
          case 122: {
            ReceiverAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnfreezeBalanceContract : pb::IMessage<UnfreezeBalanceContract> {
    private static readonly pb::MessageParser<UnfreezeBalanceContract> _parser = new pb::MessageParser<UnfreezeBalanceContract>(() => new UnfreezeBalanceContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnfreezeBalanceContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeBalanceContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeBalanceContract(UnfreezeBalanceContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      resource_ = other.resource_;
      receiverAddress_ = other.receiverAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnfreezeBalanceContract Clone() {
      return new UnfreezeBalanceContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resource" field.</summary>
    public const int ResourceFieldNumber = 10;
    private global::Tron.Net.Protocol.ResourceCode resource_ = global::Tron.Net.Protocol.ResourceCode.Bandwidth;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.ResourceCode Resource {
      get { return resource_; }
      set {
        resource_ = value;
      }
    }

    /// <summary>Field number for the "receiver_address" field.</summary>
    public const int ReceiverAddressFieldNumber = 15;
    private pb::ByteString receiverAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ReceiverAddress {
      get { return receiverAddress_; }
      set {
        receiverAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnfreezeBalanceContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnfreezeBalanceContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (Resource != other.Resource) return false;
      if (ReceiverAddress != other.ReceiverAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) hash ^= Resource.GetHashCode();
      if (ReceiverAddress.Length != 0) hash ^= ReceiverAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        output.WriteRawTag(122);
        output.WriteBytes(ReceiverAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resource);
      }
      if (ReceiverAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ReceiverAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnfreezeBalanceContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.Resource != global::Tron.Net.Protocol.ResourceCode.Bandwidth) {
        Resource = other.Resource;
      }
      if (other.ReceiverAddress.Length != 0) {
        ReceiverAddress = other.ReceiverAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 80: {
            Resource = (global::Tron.Net.Protocol.ResourceCode) input.ReadEnum();
            break;
          }
          case 122: {
            ReceiverAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WithdrawBalanceContract : pb::IMessage<WithdrawBalanceContract> {
    private static readonly pb::MessageParser<WithdrawBalanceContract> _parser = new pb::MessageParser<WithdrawBalanceContract>(() => new WithdrawBalanceContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WithdrawBalanceContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawBalanceContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawBalanceContract(WithdrawBalanceContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WithdrawBalanceContract Clone() {
      return new WithdrawBalanceContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WithdrawBalanceContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WithdrawBalanceContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WithdrawBalanceContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransferContract : pb::IMessage<TransferContract> {
    private static readonly pb::MessageParser<TransferContract> _parser = new pb::MessageParser<TransferContract>(() => new TransferContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransferContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferContract(TransferContract other) : this() {
      ownerAddress_ = other.ownerAddress_;
      toAddress_ = other.toAddress_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransferContract Clone() {
      return new TransferContract(this);
    }

    /// <summary>Field number for the "owner_address" field.</summary>
    public const int OwnerAddressFieldNumber = 1;
    private pb::ByteString ownerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OwnerAddress {
      get { return ownerAddress_; }
      set {
        ownerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to_address" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransferContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransferContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OwnerAddress != other.OwnerAddress) return false;
      if (ToAddress != other.ToAddress) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OwnerAddress.Length != 0) hash ^= OwnerAddress.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OwnerAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OwnerAddress);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OwnerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OwnerAddress);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransferContract other) {
      if (other == null) {
        return;
      }
      if (other.OwnerAddress.Length != 0) {
        OwnerAddress = other.OwnerAddress;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OwnerAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionBalanceTrace : pb::IMessage<TransactionBalanceTrace> {
    private static readonly pb::MessageParser<TransactionBalanceTrace> _parser = new pb::MessageParser<TransactionBalanceTrace>(() => new TransactionBalanceTrace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionBalanceTrace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionBalanceTrace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionBalanceTrace(TransactionBalanceTrace other) : this() {
      transactionIdentifier_ = other.transactionIdentifier_;
      operation_ = other.operation_.Clone();
      type_ = other.type_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionBalanceTrace Clone() {
      return new TransactionBalanceTrace(this);
    }

    /// <summary>Field number for the "transaction_identifier" field.</summary>
    public const int TransactionIdentifierFieldNumber = 1;
    private pb::ByteString transactionIdentifier_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransactionIdentifier {
      get { return transactionIdentifier_; }
      set {
        transactionIdentifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.TransactionBalanceTrace.Types.Operation> _repeated_operation_codec
        = pb::FieldCodec.ForMessage(18, global::Tron.Net.Protocol.TransactionBalanceTrace.Types.Operation.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.TransactionBalanceTrace.Types.Operation> operation_ = new pbc::RepeatedField<global::Tron.Net.Protocol.TransactionBalanceTrace.Types.Operation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.TransactionBalanceTrace.Types.Operation> Operation {
      get { return operation_; }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionBalanceTrace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionBalanceTrace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionIdentifier != other.TransactionIdentifier) return false;
      if(!operation_.Equals(other.operation_)) return false;
      if (Type != other.Type) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionIdentifier.Length != 0) hash ^= TransactionIdentifier.GetHashCode();
      hash ^= operation_.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionIdentifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TransactionIdentifier);
      }
      operation_.WriteTo(output, _repeated_operation_codec);
      if (Type.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Type);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionIdentifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransactionIdentifier);
      }
      size += operation_.CalculateSize(_repeated_operation_codec);
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionBalanceTrace other) {
      if (other == null) {
        return;
      }
      if (other.TransactionIdentifier.Length != 0) {
        TransactionIdentifier = other.TransactionIdentifier;
      }
      operation_.Add(other.operation_);
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionIdentifier = input.ReadBytes();
            break;
          }
          case 18: {
            operation_.AddEntriesFrom(input, _repeated_operation_codec);
            break;
          }
          case 26: {
            Type = input.ReadString();
            break;
          }
          case 34: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TransactionBalanceTrace message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Operation : pb::IMessage<Operation> {
        private static readonly pb::MessageParser<Operation> _parser = new pb::MessageParser<Operation>(() => new Operation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Operation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tron.Net.Protocol.TransactionBalanceTrace.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Operation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Operation(Operation other) : this() {
          operationIdentifier_ = other.operationIdentifier_;
          address_ = other.address_;
          amount_ = other.amount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Operation Clone() {
          return new Operation(this);
        }

        /// <summary>Field number for the "operation_identifier" field.</summary>
        public const int OperationIdentifierFieldNumber = 1;
        private long operationIdentifier_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long OperationIdentifier {
          get { return operationIdentifier_; }
          set {
            operationIdentifier_ = value;
          }
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 2;
        private pb::ByteString address_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Address {
          get { return address_; }
          set {
            address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "amount" field.</summary>
        public const int AmountFieldNumber = 3;
        private long amount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Amount {
          get { return amount_; }
          set {
            amount_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Operation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Operation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OperationIdentifier != other.OperationIdentifier) return false;
          if (Address != other.Address) return false;
          if (Amount != other.Amount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OperationIdentifier != 0L) hash ^= OperationIdentifier.GetHashCode();
          if (Address.Length != 0) hash ^= Address.GetHashCode();
          if (Amount != 0L) hash ^= Amount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (OperationIdentifier != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(OperationIdentifier);
          }
          if (Address.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Address);
          }
          if (Amount != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(Amount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OperationIdentifier != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(OperationIdentifier);
          }
          if (Address.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
          }
          if (Amount != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Operation other) {
          if (other == null) {
            return;
          }
          if (other.OperationIdentifier != 0L) {
            OperationIdentifier = other.OperationIdentifier;
          }
          if (other.Address.Length != 0) {
            Address = other.Address;
          }
          if (other.Amount != 0L) {
            Amount = other.Amount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OperationIdentifier = input.ReadInt64();
                break;
              }
              case 18: {
                Address = input.ReadBytes();
                break;
              }
              case 24: {
                Amount = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class BlockBalanceTrace : pb::IMessage<BlockBalanceTrace> {
    private static readonly pb::MessageParser<BlockBalanceTrace> _parser = new pb::MessageParser<BlockBalanceTrace>(() => new BlockBalanceTrace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockBalanceTrace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockBalanceTrace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockBalanceTrace(BlockBalanceTrace other) : this() {
      blockIdentifier_ = other.blockIdentifier_ != null ? other.blockIdentifier_.Clone() : null;
      timestamp_ = other.timestamp_;
      transactionBalanceTrace_ = other.transactionBalanceTrace_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockBalanceTrace Clone() {
      return new BlockBalanceTrace(this);
    }

    /// <summary>Field number for the "block_identifier" field.</summary>
    public const int BlockIdentifierFieldNumber = 1;
    private global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier blockIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier BlockIdentifier {
      get { return blockIdentifier_; }
      set {
        blockIdentifier_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "transaction_balance_trace" field.</summary>
    public const int TransactionBalanceTraceFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.TransactionBalanceTrace> _repeated_transactionBalanceTrace_codec
        = pb::FieldCodec.ForMessage(26, global::Tron.Net.Protocol.TransactionBalanceTrace.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.TransactionBalanceTrace> transactionBalanceTrace_ = new pbc::RepeatedField<global::Tron.Net.Protocol.TransactionBalanceTrace>();
    /// <summary>
    ///  BlockIdentifier parent_block_identifier = 4;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.TransactionBalanceTrace> TransactionBalanceTrace {
      get { return transactionBalanceTrace_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockBalanceTrace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockBalanceTrace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BlockIdentifier, other.BlockIdentifier)) return false;
      if (Timestamp != other.Timestamp) return false;
      if(!transactionBalanceTrace_.Equals(other.transactionBalanceTrace_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (blockIdentifier_ != null) hash ^= BlockIdentifier.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      hash ^= transactionBalanceTrace_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (blockIdentifier_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BlockIdentifier);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      transactionBalanceTrace_.WriteTo(output, _repeated_transactionBalanceTrace_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (blockIdentifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockIdentifier);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      size += transactionBalanceTrace_.CalculateSize(_repeated_transactionBalanceTrace_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockBalanceTrace other) {
      if (other == null) {
        return;
      }
      if (other.blockIdentifier_ != null) {
        if (blockIdentifier_ == null) {
          BlockIdentifier = new global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier();
        }
        BlockIdentifier.MergeFrom(other.BlockIdentifier);
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      transactionBalanceTrace_.Add(other.transactionBalanceTrace_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (blockIdentifier_ == null) {
              BlockIdentifier = new global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier();
            }
            input.ReadMessage(BlockIdentifier);
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            transactionBalanceTrace_.AddEntriesFrom(input, _repeated_transactionBalanceTrace_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BlockBalanceTrace message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class BlockIdentifier : pb::IMessage<BlockIdentifier> {
        private static readonly pb::MessageParser<BlockIdentifier> _parser = new pb::MessageParser<BlockIdentifier>(() => new BlockIdentifier());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BlockIdentifier> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tron.Net.Protocol.BlockBalanceTrace.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockIdentifier() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockIdentifier(BlockIdentifier other) : this() {
          hash_ = other.hash_;
          number_ = other.number_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockIdentifier Clone() {
          return new BlockIdentifier(this);
        }

        /// <summary>Field number for the "hash" field.</summary>
        public const int HashFieldNumber = 1;
        private pb::ByteString hash_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Hash {
          get { return hash_; }
          set {
            hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "number" field.</summary>
        public const int NumberFieldNumber = 2;
        private long number_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Number {
          get { return number_; }
          set {
            number_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BlockIdentifier);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BlockIdentifier other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Hash != other.Hash) return false;
          if (Number != other.Number) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Hash.Length != 0) hash ^= Hash.GetHashCode();
          if (Number != 0L) hash ^= Number.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Hash.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Hash);
          }
          if (Number != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Number);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Hash.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
          }
          if (Number != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Number);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BlockIdentifier other) {
          if (other == null) {
            return;
          }
          if (other.Hash.Length != 0) {
            Hash = other.Hash;
          }
          if (other.Number != 0L) {
            Number = other.Number;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Hash = input.ReadBytes();
                break;
              }
              case 16: {
                Number = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class AccountTrace : pb::IMessage<AccountTrace> {
    private static readonly pb::MessageParser<AccountTrace> _parser = new pb::MessageParser<AccountTrace>(() => new AccountTrace());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountTrace> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountTrace() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountTrace(AccountTrace other) : this() {
      balance_ = other.balance_;
      placeholder_ = other.placeholder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountTrace Clone() {
      return new AccountTrace(this);
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 1;
    private long balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "placeholder" field.</summary>
    public const int PlaceholderFieldNumber = 99;
    private long placeholder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Placeholder {
      get { return placeholder_; }
      set {
        placeholder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountTrace);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountTrace other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Balance != other.Balance) return false;
      if (Placeholder != other.Placeholder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Balance != 0L) hash ^= Balance.GetHashCode();
      if (Placeholder != 0L) hash ^= Placeholder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Balance != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Balance);
      }
      if (Placeholder != 0L) {
        output.WriteRawTag(152, 6);
        output.WriteInt64(Placeholder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Balance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Balance);
      }
      if (Placeholder != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Placeholder);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountTrace other) {
      if (other == null) {
        return;
      }
      if (other.Balance != 0L) {
        Balance = other.Balance;
      }
      if (other.Placeholder != 0L) {
        Placeholder = other.Placeholder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Balance = input.ReadInt64();
            break;
          }
          case 792: {
            Placeholder = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountIdentifier : pb::IMessage<AccountIdentifier> {
    private static readonly pb::MessageParser<AccountIdentifier> _parser = new pb::MessageParser<AccountIdentifier>(() => new AccountIdentifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountIdentifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountIdentifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountIdentifier(AccountIdentifier other) : this() {
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountIdentifier Clone() {
      return new AccountIdentifier(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private pb::ByteString address_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountIdentifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountIdentifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountIdentifier other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountBalanceRequest : pb::IMessage<AccountBalanceRequest> {
    private static readonly pb::MessageParser<AccountBalanceRequest> _parser = new pb::MessageParser<AccountBalanceRequest>(() => new AccountBalanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountBalanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountBalanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountBalanceRequest(AccountBalanceRequest other) : this() {
      accountIdentifier_ = other.accountIdentifier_ != null ? other.accountIdentifier_.Clone() : null;
      blockIdentifier_ = other.blockIdentifier_ != null ? other.blockIdentifier_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountBalanceRequest Clone() {
      return new AccountBalanceRequest(this);
    }

    /// <summary>Field number for the "account_identifier" field.</summary>
    public const int AccountIdentifierFieldNumber = 1;
    private global::Tron.Net.Protocol.AccountIdentifier accountIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.AccountIdentifier AccountIdentifier {
      get { return accountIdentifier_; }
      set {
        accountIdentifier_ = value;
      }
    }

    /// <summary>Field number for the "block_identifier" field.</summary>
    public const int BlockIdentifierFieldNumber = 2;
    private global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier blockIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier BlockIdentifier {
      get { return blockIdentifier_; }
      set {
        blockIdentifier_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountBalanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountBalanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccountIdentifier, other.AccountIdentifier)) return false;
      if (!object.Equals(BlockIdentifier, other.BlockIdentifier)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accountIdentifier_ != null) hash ^= AccountIdentifier.GetHashCode();
      if (blockIdentifier_ != null) hash ^= BlockIdentifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accountIdentifier_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccountIdentifier);
      }
      if (blockIdentifier_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BlockIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accountIdentifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountIdentifier);
      }
      if (blockIdentifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountBalanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.accountIdentifier_ != null) {
        if (accountIdentifier_ == null) {
          AccountIdentifier = new global::Tron.Net.Protocol.AccountIdentifier();
        }
        AccountIdentifier.MergeFrom(other.AccountIdentifier);
      }
      if (other.blockIdentifier_ != null) {
        if (blockIdentifier_ == null) {
          BlockIdentifier = new global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier();
        }
        BlockIdentifier.MergeFrom(other.BlockIdentifier);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accountIdentifier_ == null) {
              AccountIdentifier = new global::Tron.Net.Protocol.AccountIdentifier();
            }
            input.ReadMessage(AccountIdentifier);
            break;
          }
          case 18: {
            if (blockIdentifier_ == null) {
              BlockIdentifier = new global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier();
            }
            input.ReadMessage(BlockIdentifier);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountBalanceResponse : pb::IMessage<AccountBalanceResponse> {
    private static readonly pb::MessageParser<AccountBalanceResponse> _parser = new pb::MessageParser<AccountBalanceResponse>(() => new AccountBalanceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountBalanceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.BalanceContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountBalanceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountBalanceResponse(AccountBalanceResponse other) : this() {
      balance_ = other.balance_;
      blockIdentifier_ = other.blockIdentifier_ != null ? other.blockIdentifier_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountBalanceResponse Clone() {
      return new AccountBalanceResponse(this);
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 1;
    private long balance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "block_identifier" field.</summary>
    public const int BlockIdentifierFieldNumber = 2;
    private global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier blockIdentifier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier BlockIdentifier {
      get { return blockIdentifier_; }
      set {
        blockIdentifier_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountBalanceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountBalanceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Balance != other.Balance) return false;
      if (!object.Equals(BlockIdentifier, other.BlockIdentifier)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Balance != 0L) hash ^= Balance.GetHashCode();
      if (blockIdentifier_ != null) hash ^= BlockIdentifier.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Balance != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Balance);
      }
      if (blockIdentifier_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BlockIdentifier);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Balance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Balance);
      }
      if (blockIdentifier_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockIdentifier);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountBalanceResponse other) {
      if (other == null) {
        return;
      }
      if (other.Balance != 0L) {
        Balance = other.Balance;
      }
      if (other.blockIdentifier_ != null) {
        if (blockIdentifier_ == null) {
          BlockIdentifier = new global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier();
        }
        BlockIdentifier.MergeFrom(other.BlockIdentifier);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Balance = input.ReadInt64();
            break;
          }
          case 18: {
            if (blockIdentifier_ == null) {
              BlockIdentifier = new global::Tron.Net.Protocol.BlockBalanceTrace.Types.BlockIdentifier();
            }
            input.ReadMessage(BlockIdentifier);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
