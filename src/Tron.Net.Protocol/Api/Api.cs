// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: tronprotocol/api/api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tron.Net.Protocol {

  /// <summary>Holder for reflection information generated from tronprotocol/api/api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for tronprotocol/api/api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chp0cm9ucHJvdG9jb2wvYXBpL2FwaS5wcm90bxIIcHJvdG9jb2waD2NvcmUv",
            "VHJvbi5wcm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90bxooY29y",
            "ZS9jb250cmFjdC9hc3NldF9pc3N1ZV9jb250cmFjdC5wcm90bxokY29yZS9j",
            "b250cmFjdC9hY2NvdW50X2NvbnRyYWN0LnByb3RvGiRjb3JlL2NvbnRyYWN0",
            "L3dpdG5lc3NfY29udHJhY3QucHJvdG8aJGNvcmUvY29udHJhY3QvYmFsYW5j",
            "ZV9jb250cmFjdC5wcm90bxolY29yZS9jb250cmFjdC9wcm9wb3NhbF9jb250",
            "cmFjdC5wcm90bxokY29yZS9jb250cmFjdC9zdG9yYWdlX2NvbnRyYWN0LnBy",
            "b3RvGiVjb3JlL2NvbnRyYWN0L2V4Y2hhbmdlX2NvbnRyYWN0LnByb3RvGiNj",
            "b3JlL2NvbnRyYWN0L21hcmtldF9jb250cmFjdC5wcm90bxoiY29yZS9jb250",
            "cmFjdC9zbWFydF9jb250cmFjdC5wcm90bxojY29yZS9jb250cmFjdC9zaGll",
            "bGRfY29udHJhY3QucHJvdG8ilAMKBlJldHVybhIOCgZyZXN1bHQYASABKAgS",
            "LAoEY29kZRgCIAEoDjIeLnByb3RvY29sLlJldHVybi5yZXNwb25zZV9jb2Rl",
            "Eg8KB21lc3NhZ2UYAyABKAwiugIKDXJlc3BvbnNlX2NvZGUSCwoHU1VDQ0VT",
            "UxAAEgwKCFNJR0VSUk9SEAESGwoXQ09OVFJBQ1RfVkFMSURBVEVfRVJST1IQ",
            "AhIWChJDT05UUkFDVF9FWEVfRVJST1IQAxISCg5CQU5EV0lUSF9FUlJPUhAE",
            "EhkKFURVUF9UUkFOU0FDVElPTl9FUlJPUhAFEg8KC1RBUE9TX0VSUk9SEAYS",
            "HQoZVE9PX0JJR19UUkFOU0FDVElPTl9FUlJPUhAHEiAKHFRSQU5TQUNUSU9O",
            "X0VYUElSQVRJT05fRVJST1IQCBIPCgtTRVJWRVJfQlVTWRAJEhEKDU5PX0NP",
            "Tk5FQ1RJT04QChIjCh9OT1RfRU5PVUdIX0VGRkVDVElWRV9DT05ORUNUSU9O",
            "EAsSDwoLT1RIRVJfRVJST1IQFCI3Cg5CbG9ja1JlZmVyZW5jZRIRCglibG9j",
            "a19udW0YASABKAMSEgoKYmxvY2tfaGFzaBgCIAEoDCIzCgtXaXRuZXNzTGlz",
            "dBIkCgl3aXRuZXNzZXMYASADKAsyES5wcm90b2NvbC5XaXRuZXNzIjUKDFBy",
            "b3Bvc2FsTGlzdBIlCglwcm9wb3NhbHMYASADKAsyEi5wcm90b2NvbC5Qcm9w",
            "b3NhbCI1CgxFeGNoYW5nZUxpc3QSJQoJZXhjaGFuZ2VzGAEgAygLMhIucHJv",
            "dG9jb2wuRXhjaGFuZ2UiQgoOQXNzZXRJc3N1ZUxpc3QSMAoKYXNzZXRJc3N1",
            "ZRgBIAMoCzIcLnByb3RvY29sLkFzc2V0SXNzdWVDb250cmFjdCIrCglCbG9j",
            "a0xpc3QSHgoFYmxvY2sYASADKAsyDy5wcm90b2NvbC5CbG9jayI9Cg9UcmFu",
            "c2FjdGlvbkxpc3QSKgoLdHJhbnNhY3Rpb24YASADKAsyFS5wcm90b2NvbC5U",
            "cmFuc2FjdGlvbiIhChFUcmFuc2FjdGlvbklkTGlzdBIMCgR0eElkGAEgAygJ",
            "IkIKGERlbGVnYXRlZFJlc291cmNlTWVzc2FnZRITCgtmcm9tQWRkcmVzcxgB",
            "IAEoDBIRCgl0b0FkZHJlc3MYAiABKAwiTwoVRGVsZWdhdGVkUmVzb3VyY2VM",
            "aXN0EjYKEWRlbGVnYXRlZFJlc291cmNlGAEgAygLMhsucHJvdG9jb2wuRGVs",
            "ZWdhdGVkUmVzb3VyY2UiKQoITm9kZUxpc3QSHQoFbm9kZXMYASADKAsyDi5w",
            "cm90b2NvbC5Ob2RlIioKBE5vZGUSIgoHYWRkcmVzcxgBIAEoCzIRLnByb3Rv",
            "Y29sLkFkZHJlc3MiJQoHQWRkcmVzcxIMCgRob3N0GAEgASgMEgwKBHBvcnQY",
            "AiABKAUiDgoMRW1wdHlNZXNzYWdlIhwKDU51bWJlck1lc3NhZ2USCwoDbnVt",
            "GAEgASgDIh0KDEJ5dGVzTWVzc2FnZRINCgV2YWx1ZRgBIAEoDCJFCgtUaW1l",
            "TWVzc2FnZRIbChNiZWdpbkluTWlsbGlzZWNvbmRzGAEgASgDEhkKEWVuZElu",
            "TWlsbGlzZWNvbmRzGAIgASgDIi4KCkJsb2NrTGltaXQSEAoIc3RhcnROdW0Y",
            "ASABKAMSDgoGZW5kTnVtGAIgASgDIjsKEFRyYW5zYWN0aW9uTGltaXQSFQoN",
            "dHJhbnNhY3Rpb25JZBgBIAEoDBIQCghsaW1pdE51bRgCIAEoAyJVChBBY2Nv",
            "dW50UGFnaW5hdGVkEiIKB2FjY291bnQYASABKAsyES5wcm90b2NvbC5BY2Nv",
            "dW50Eg4KBm9mZnNldBgCIAEoAxINCgVsaW1pdBgDIAEoAyJhChRUaW1lUGFn",
            "aW5hdGVkTWVzc2FnZRIqCgt0aW1lTWVzc2FnZRgBIAEoCzIVLnByb3RvY29s",
            "LlRpbWVNZXNzYWdlEg4KBm9mZnNldBgCIAEoAxINCgVsaW1pdBgDIAEoAyKH",
            "AwoRQWNjb3VudE5ldE1lc3NhZ2USEwoLZnJlZU5ldFVzZWQYASABKAMSFAoM",
            "ZnJlZU5ldExpbWl0GAIgASgDEg8KB05ldFVzZWQYAyABKAMSEAoITmV0TGlt",
            "aXQYBCABKAMSQwoMYXNzZXROZXRVc2VkGAUgAygLMi0ucHJvdG9jb2wuQWNj",
            "b3VudE5ldE1lc3NhZ2UuQXNzZXROZXRVc2VkRW50cnkSRQoNYXNzZXROZXRM",
            "aW1pdBgGIAMoCzIuLnByb3RvY29sLkFjY291bnROZXRNZXNzYWdlLkFzc2V0",
            "TmV0TGltaXRFbnRyeRIVCg1Ub3RhbE5ldExpbWl0GAcgASgDEhYKDlRvdGFs",
            "TmV0V2VpZ2h0GAggASgDGjMKEUFzc2V0TmV0VXNlZEVudHJ5EgsKA2tleRgB",
            "IAEoCRINCgV2YWx1ZRgCIAEoAzoCOAEaNAoSQXNzZXROZXRMaW1pdEVudHJ5",
            "EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoAzoCOAEi7AQKFkFjY291bnRS",
            "ZXNvdXJjZU1lc3NhZ2USEwoLZnJlZU5ldFVzZWQYASABKAMSFAoMZnJlZU5l",
            "dExpbWl0GAIgASgDEg8KB05ldFVzZWQYAyABKAMSEAoITmV0TGltaXQYBCAB",
            "KAMSSAoMYXNzZXROZXRVc2VkGAUgAygLMjIucHJvdG9jb2wuQWNjb3VudFJl",
            "c291cmNlTWVzc2FnZS5Bc3NldE5ldFVzZWRFbnRyeRJKCg1hc3NldE5ldExp",
            "bWl0GAYgAygLMjMucHJvdG9jb2wuQWNjb3VudFJlc291cmNlTWVzc2FnZS5B",
            "c3NldE5ldExpbWl0RW50cnkSFQoNVG90YWxOZXRMaW1pdBgHIAEoAxIWCg5U",
            "b3RhbE5ldFdlaWdodBgIIAEoAxIcChRUb3RhbFRyb25Qb3dlcldlaWdodBgJ",
            "IAEoAxIVCg10cm9uUG93ZXJVc2VkGAogASgDEhYKDnRyb25Qb3dlckxpbWl0",
            "GAsgASgDEhIKCkVuZXJneVVzZWQYDSABKAMSEwoLRW5lcmd5TGltaXQYDiAB",
            "KAMSGAoQVG90YWxFbmVyZ3lMaW1pdBgPIAEoAxIZChFUb3RhbEVuZXJneVdl",
            "aWdodBgQIAEoAxITCgtzdG9yYWdlVXNlZBgVIAEoAxIUCgxzdG9yYWdlTGlt",
            "aXQYFiABKAMaMwoRQXNzZXROZXRVc2VkRW50cnkSCwoDa2V5GAEgASgJEg0K",
            "BXZhbHVlGAIgASgDOgI4ARo0ChJBc3NldE5ldExpbWl0RW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgDOgI4ASIxChBQYWdpbmF0ZWRNZXNzYWdl",
            "Eg4KBm9mZnNldBgBIAEoAxINCgVsaW1pdBgCIAEoAyJMChNFYXN5VHJhbnNm",
            "ZXJNZXNzYWdlEhIKCnBhc3NQaHJhc2UYASABKAwSEQoJdG9BZGRyZXNzGAIg",
            "ASgMEg4KBmFtb3VudBgDIAEoAyJiChhFYXN5VHJhbnNmZXJBc3NldE1lc3Nh",
            "Z2USEgoKcGFzc1BocmFzZRgBIAEoDBIRCgl0b0FkZHJlc3MYAiABKAwSDwoH",
            "YXNzZXRJZBgDIAEoCRIOCgZhbW91bnQYBCABKAMiVQocRWFzeVRyYW5zZmVy",
            "QnlQcml2YXRlTWVzc2FnZRISCgpwcml2YXRlS2V5GAEgASgMEhEKCXRvQWRk",
            "cmVzcxgCIAEoDBIOCgZhbW91bnQYAyABKAMiawohRWFzeVRyYW5zZmVyQXNz",
            "ZXRCeVByaXZhdGVNZXNzYWdlEhIKCnByaXZhdGVLZXkYASABKAwSEQoJdG9B",
            "ZGRyZXNzGAIgASgMEg8KB2Fzc2V0SWQYAyABKAkSDgoGYW1vdW50GAQgASgD",
            "InIKFEVhc3lUcmFuc2ZlclJlc3BvbnNlEioKC3RyYW5zYWN0aW9uGAEgASgL",
            "MhUucHJvdG9jb2wuVHJhbnNhY3Rpb24SIAoGcmVzdWx0GAIgASgLMhAucHJv",
            "dG9jb2wuUmV0dXJuEgwKBHR4aWQYAyABKAwiPgoXQWRkcmVzc1ByS2V5UGFp",
            "ck1lc3NhZ2USDwoHYWRkcmVzcxgBIAEoCRISCgpwcml2YXRlS2V5GAIgASgJ",
            "IqABChRUcmFuc2FjdGlvbkV4dGVudGlvbhIqCgt0cmFuc2FjdGlvbhgBIAEo",
            "CzIVLnByb3RvY29sLlRyYW5zYWN0aW9uEgwKBHR4aWQYAiABKAwSFwoPY29u",
            "c3RhbnRfcmVzdWx0GAMgAygMEiAKBnJlc3VsdBgEIAEoCzIQLnByb3RvY29s",
            "LlJldHVybhITCgtlbmVyZ3lfdXNlZBgFIAEoAyKEAQoOQmxvY2tFeHRlbnRp",
            "b24SNAoMdHJhbnNhY3Rpb25zGAEgAygLMh4ucHJvdG9jb2wuVHJhbnNhY3Rp",
            "b25FeHRlbnRpb24SKwoMYmxvY2tfaGVhZGVyGAIgASgLMhUucHJvdG9jb2wu",
            "QmxvY2tIZWFkZXISDwoHYmxvY2tpZBgDIAEoDCI9ChJCbG9ja0xpc3RFeHRl",
            "bnRpb24SJwoFYmxvY2sYASADKAsyGC5wcm90b2NvbC5CbG9ja0V4dGVudGlv",
            "biJPChhUcmFuc2FjdGlvbkxpc3RFeHRlbnRpb24SMwoLdHJhbnNhY3Rpb24Y",
            "ASADKAsyHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiJhChpCbG9j",
            "a0luY3JlbWVudGFsTWVya2xlVHJlZRIOCgZudW1iZXIYASABKAMSMwoKbWVy",
            "a2xlVHJlZRgCIAEoCzIfLnByb3RvY29sLkluY3JlbWVudGFsTWVya2xlVHJl",
            "ZSLfAwoVVHJhbnNhY3Rpb25TaWduV2VpZ2h0EigKCnBlcm1pc3Npb24YASAB",
            "KAsyFC5wcm90b2NvbC5QZXJtaXNzaW9uEhUKDWFwcHJvdmVkX2xpc3QYAiAD",
            "KAwSFgoOY3VycmVudF93ZWlnaHQYAyABKAMSNgoGcmVzdWx0GAQgASgLMiYu",
            "cHJvdG9jb2wuVHJhbnNhY3Rpb25TaWduV2VpZ2h0LlJlc3VsdBIzCgt0cmFu",
            "c2FjdGlvbhgFIAEoCzIeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9u",
            "Gv8BCgZSZXN1bHQSQgoEY29kZRgBIAEoDjI0LnByb3RvY29sLlRyYW5zYWN0",
            "aW9uU2lnbldlaWdodC5SZXN1bHQucmVzcG9uc2VfY29kZRIPCgdtZXNzYWdl",
            "GAIgASgJIp8BCg1yZXNwb25zZV9jb2RlEhUKEUVOT1VHSF9QRVJNSVNTSU9O",
            "EAASGQoVTk9UX0VOT1VHSF9QRVJNSVNTSU9OEAESGgoWU0lHTkFUVVJFX0ZP",
            "Uk1BVF9FUlJPUhACEhkKFUNPTVBVVEVfQUREUkVTU19FUlJPUhADEhQKEFBF",
            "Uk1JU1NJT05fRVJST1IQBBIPCgtPVEhFUl9FUlJPUhAUIucCChdUcmFuc2Fj",
            "dGlvbkFwcHJvdmVkTGlzdBIVCg1hcHByb3ZlZF9saXN0GAIgAygMEjgKBnJl",
            "c3VsdBgEIAEoCzIoLnByb3RvY29sLlRyYW5zYWN0aW9uQXBwcm92ZWRMaXN0",
            "LlJlc3VsdBIzCgt0cmFuc2FjdGlvbhgFIAEoCzIeLnByb3RvY29sLlRyYW5z",
            "YWN0aW9uRXh0ZW50aW9uGsUBCgZSZXN1bHQSRAoEY29kZRgBIAEoDjI2LnBy",
            "b3RvY29sLlRyYW5zYWN0aW9uQXBwcm92ZWRMaXN0LlJlc3VsdC5yZXNwb25z",
            "ZV9jb2RlEg8KB21lc3NhZ2UYAiABKAkiZAoNcmVzcG9uc2VfY29kZRILCgdT",
            "VUNDRVNTEAASGgoWU0lHTkFUVVJFX0ZPUk1BVF9FUlJPUhABEhkKFUNPTVBV",
            "VEVfQUREUkVTU19FUlJPUhACEg8KC09USEVSX0VSUk9SEBQiVwoUSXZrRGVj",
            "cnlwdFBhcmFtZXRlcnMSGQoRc3RhcnRfYmxvY2tfaW5kZXgYASABKAMSFwoP",
            "ZW5kX2Jsb2NrX2luZGV4GAIgASgDEgsKA2l2axgDIAEoDCJ2ChtJdmtEZWNy",
            "eXB0QW5kTWFya1BhcmFtZXRlcnMSGQoRc3RhcnRfYmxvY2tfaW5kZXgYASAB",
            "KAMSFwoPZW5kX2Jsb2NrX2luZGV4GAIgASgDEgsKA2l2axgFIAEoDBIKCgJh",
            "axgDIAEoDBIKCgJuaxgEIAEoDCJXChRPdmtEZWNyeXB0UGFyYW1ldGVycxIZ",
            "ChFzdGFydF9ibG9ja19pbmRleBgBIAEoAxIXCg9lbmRfYmxvY2tfaW5kZXgY",
            "AiABKAMSCwoDb3ZrGAMgASgMIoMBCgxEZWNyeXB0Tm90ZXMSLgoHbm90ZVR4",
            "cxgBIAMoCzIdLnByb3RvY29sLkRlY3J5cHROb3Rlcy5Ob3RlVHgaQwoGTm90",
            "ZVR4EhwKBG5vdGUYASABKAsyDi5wcm90b2NvbC5Ob3RlEgwKBHR4aWQYAiAB",
            "KAwSDQoFaW5kZXgYAyABKAUioQEKEkRlY3J5cHROb3Rlc01hcmtlZBI0Cgdu",
            "b3RlVHhzGAEgAygLMiMucHJvdG9jb2wuRGVjcnlwdE5vdGVzTWFya2VkLk5v",
            "dGVUeBpVCgZOb3RlVHgSHAoEbm90ZRgBIAEoCzIOLnByb3RvY29sLk5vdGUS",
            "DAoEdHhpZBgCIAEoDBINCgVpbmRleBgDIAEoBRIQCghpc19zcGVuZBgEIAEo",
            "CCJJCgROb3RlEg0KBXZhbHVlGAEgASgDEhcKD3BheW1lbnRfYWRkcmVzcxgC",
            "IAEoCRILCgNyY20YAyABKAwSDAoEbWVtbxgEIAEoDCJ7CglTcGVuZE5vdGUS",
            "HAoEbm90ZRgDIAEoCzIOLnByb3RvY29sLk5vdGUSDQoFYWxwaGEYBCABKAwS",
            "MwoHdm91Y2hlchgFIAEoCzIiLnByb3RvY29sLkluY3JlbWVudGFsTWVya2xl",
            "Vm91Y2hlchIMCgRwYXRoGAYgASgMIisKC1JlY2VpdmVOb3RlEhwKBG5vdGUY",
            "ASABKAsyDi5wcm90b2NvbC5Ob3RlIpUCChFQcml2YXRlUGFyYW1ldGVycxIg",
            "Chh0cmFuc3BhcmVudF9mcm9tX2FkZHJlc3MYASABKAwSCwoDYXNrGAIgASgM",
            "EgsKA25zaxgDIAEoDBILCgNvdmsYBCABKAwSEwoLZnJvbV9hbW91bnQYBSAB",
            "KAMSLAoPc2hpZWxkZWRfc3BlbmRzGAYgAygLMhMucHJvdG9jb2wuU3BlbmRO",
            "b3RlEjAKEXNoaWVsZGVkX3JlY2VpdmVzGAcgAygLMhUucHJvdG9jb2wuUmVj",
            "ZWl2ZU5vdGUSHgoWdHJhbnNwYXJlbnRfdG9fYWRkcmVzcxgIIAEoDBIRCgl0",
            "b19hbW91bnQYCSABKAMSDwoHdGltZW91dBgKIAEoAyKeAgobUHJpdmF0ZVBh",
            "cmFtZXRlcnNXaXRob3V0QXNrEiAKGHRyYW5zcGFyZW50X2Zyb21fYWRkcmVz",
            "cxgBIAEoDBIKCgJhaxgCIAEoDBILCgNuc2sYAyABKAwSCwoDb3ZrGAQgASgM",
            "EhMKC2Zyb21fYW1vdW50GAUgASgDEiwKD3NoaWVsZGVkX3NwZW5kcxgGIAMo",
            "CzITLnByb3RvY29sLlNwZW5kTm90ZRIwChFzaGllbGRlZF9yZWNlaXZlcxgH",
            "IAMoCzIVLnByb3RvY29sLlJlY2VpdmVOb3RlEh4KFnRyYW5zcGFyZW50X3Rv",
            "X2FkZHJlc3MYCCABKAwSEQoJdG9fYW1vdW50GAkgASgDEg8KB3RpbWVvdXQY",
            "CiABKAMiRQoWU3BlbmRBdXRoU2lnUGFyYW1ldGVycxILCgNhc2sYASABKAwS",
            "DwoHdHhfaGFzaBgCIAEoDBINCgVhbHBoYRgDIAEoDCJ5CgxOZlBhcmFtZXRl",
            "cnMSHAoEbm90ZRgBIAEoCzIOLnByb3RvY29sLk5vdGUSMwoHdm91Y2hlchgC",
            "IAEoCzIiLnByb3RvY29sLkluY3JlbWVudGFsTWVya2xlVm91Y2hlchIKCgJh",
            "axgDIAEoDBIKCgJuaxgEIAEoDCJDChpFeHBhbmRlZFNwZW5kaW5nS2V5TWVz",
            "c2FnZRILCgNhc2sYASABKAwSCwoDbnNrGAIgASgMEgsKA292axgDIAEoDCIr",
            "ChFWaWV3aW5nS2V5TWVzc2FnZRIKCgJhaxgBIAEoDBIKCgJuaxgCIAEoDCIo",
            "ChlJbmNvbWluZ1ZpZXdpbmdLZXlNZXNzYWdlEgsKA2l2axgBIAEoDCIfChJE",
            "aXZlcnNpZmllck1lc3NhZ2USCQoBZBgBIAEoDCKBAQokSW5jb21pbmdWaWV3",
            "aW5nS2V5RGl2ZXJzaWZpZXJNZXNzYWdlEjAKA2l2axgBIAEoCzIjLnByb3Rv",
            "Y29sLkluY29taW5nVmlld2luZ0tleU1lc3NhZ2USJwoBZBgCIAEoCzIcLnBy",
            "b3RvY29sLkRpdmVyc2lmaWVyTWVzc2FnZSJmChVQYXltZW50QWRkcmVzc01l",
            "c3NhZ2USJwoBZBgBIAEoCzIcLnByb3RvY29sLkRpdmVyc2lmaWVyTWVzc2Fn",
            "ZRILCgNwa0QYAiABKAwSFwoPcGF5bWVudF9hZGRyZXNzGAMgASgJIp4BChNT",
            "aGllbGRlZEFkZHJlc3NJbmZvEgoKAnNrGAEgASgMEgsKA2FzaxgCIAEoDBIL",
            "CgNuc2sYAyABKAwSCwoDb3ZrGAQgASgMEgoKAmFrGAUgASgMEgoKAm5rGAYg",
            "ASgMEgsKA2l2axgHIAEoDBIJCgFkGAggASgMEgsKA3BrRBgJIAEoDBIXCg9w",
            "YXltZW50X2FkZHJlc3MYCiABKAkiYwoOTm90ZVBhcmFtZXRlcnMSCgoCYWsY",
            "ASABKAwSCgoCbmsYAiABKAwSHAoEbm90ZRgDIAEoCzIOLnByb3RvY29sLk5v",
            "dGUSDAoEdHhpZBgEIAEoDBINCgVpbmRleBgFIAEoBSIuCgtTcGVuZFJlc3Vs",
            "dBIOCgZyZXN1bHQYASABKAgSDwoHbWVzc2FnZRgCIAEoCSJJChNUcmFuc2Fj",
            "dGlvbkluZm9MaXN0EjIKD3RyYW5zYWN0aW9uSW5mbxgBIAMoCzIZLnByb3Rv",
            "Y29sLlRyYW5zYWN0aW9uSW5mbyJmCg5TcGVuZE5vdGVUUkMyMBIcCgRub3Rl",
            "GAEgASgLMg4ucHJvdG9jb2wuTm90ZRINCgVhbHBoYRgCIAEoDBIMCgRyb290",
            "GAMgASgMEgwKBHBhdGgYBCABKAwSCwoDcG9zGAUgASgDIp0CCh5Qcml2YXRl",
            "U2hpZWxkZWRUUkMyMFBhcmFtZXRlcnMSCwoDYXNrGAEgASgMEgsKA25zaxgC",
            "IAEoDBILCgNvdmsYAyABKAwSEwoLZnJvbV9hbW91bnQYBCABKAkSMQoPc2hp",
            "ZWxkZWRfc3BlbmRzGAUgAygLMhgucHJvdG9jb2wuU3BlbmROb3RlVFJDMjAS",
            "MAoRc2hpZWxkZWRfcmVjZWl2ZXMYBiADKAsyFS5wcm90b2NvbC5SZWNlaXZl",
            "Tm90ZRIeChZ0cmFuc3BhcmVudF90b19hZGRyZXNzGAcgASgMEhEKCXRvX2Ft",
            "b3VudBgIIAEoCRInCh9zaGllbGRlZF9UUkMyMF9jb250cmFjdF9hZGRyZXNz",
            "GAkgASgMIqYCCihQcml2YXRlU2hpZWxkZWRUUkMyMFBhcmFtZXRlcnNXaXRo",
            "b3V0QXNrEgoKAmFrGAEgASgMEgsKA25zaxgCIAEoDBILCgNvdmsYAyABKAwS",
            "EwoLZnJvbV9hbW91bnQYBCABKAkSMQoPc2hpZWxkZWRfc3BlbmRzGAUgAygL",
            "MhgucHJvdG9jb2wuU3BlbmROb3RlVFJDMjASMAoRc2hpZWxkZWRfcmVjZWl2",
            "ZXMYBiADKAsyFS5wcm90b2NvbC5SZWNlaXZlTm90ZRIeChZ0cmFuc3BhcmVu",
            "dF90b19hZGRyZXNzGAcgASgMEhEKCXRvX2Ftb3VudBgIIAEoCRInCh9zaGll",
            "bGRlZF9UUkMyMF9jb250cmFjdF9hZGRyZXNzGAkgASgMIvQBChdTaGllbGRl",
            "ZFRSQzIwUGFyYW1ldGVycxI1ChFzcGVuZF9kZXNjcmlwdGlvbhgBIAMoCzIa",
            "LnByb3RvY29sLlNwZW5kRGVzY3JpcHRpb24SOQoTcmVjZWl2ZV9kZXNjcmlw",
            "dGlvbhgCIAMoCzIcLnByb3RvY29sLlJlY2VpdmVEZXNjcmlwdGlvbhIZChFi",
            "aW5kaW5nX3NpZ25hdHVyZRgDIAEoDBIUCgxtZXNzYWdlX2hhc2gYBCABKAwS",
            "HgoWdHJpZ2dlcl9jb250cmFjdF9pbnB1dBgFIAEoCRIWCg5wYXJhbWV0ZXJf",
            "dHlwZRgGIAEoCSKtAQoZSXZrRGVjcnlwdFRSQzIwUGFyYW1ldGVycxIZChFz",
            "dGFydF9ibG9ja19pbmRleBgBIAEoAxIXCg9lbmRfYmxvY2tfaW5kZXgYAiAB",
            "KAMSJwofc2hpZWxkZWRfVFJDMjBfY29udHJhY3RfYWRkcmVzcxgDIAEoDBIL",
            "CgNpdmsYBCABKAwSCgoCYWsYBSABKAwSCgoCbmsYBiABKAwSDgoGZXZlbnRz",
            "GAcgAygJIpUBChlPdmtEZWNyeXB0VFJDMjBQYXJhbWV0ZXJzEhkKEXN0YXJ0",
            "X2Jsb2NrX2luZGV4GAEgASgDEhcKD2VuZF9ibG9ja19pbmRleBgCIAEoAxIL",
            "CgNvdmsYAyABKAwSJwofc2hpZWxkZWRfVFJDMjBfY29udHJhY3RfYWRkcmVz",
            "cxgEIAEoDBIOCgZldmVudHMYBSADKAki5QEKEURlY3J5cHROb3Rlc1RSQzIw",
            "EjMKB25vdGVUeHMYASADKAsyIi5wcm90b2NvbC5EZWNyeXB0Tm90ZXNUUkMy",
            "MC5Ob3RlVHgamgEKBk5vdGVUeBIcCgRub3RlGAEgASgLMg4ucHJvdG9jb2wu",
            "Tm90ZRIQCghwb3NpdGlvbhgCIAEoAxIQCghpc19zcGVudBgDIAEoCBIMCgR0",
            "eGlkGAQgASgMEg0KBWluZGV4GAUgASgFEhEKCXRvX2Ftb3VudBgGIAEoCRIe",
            "ChZ0cmFuc3BhcmVudF90b19hZGRyZXNzGAcgASgMIoQBChFOZlRSQzIwUGFy",
            "YW1ldGVycxIcCgRub3RlGAEgASgLMg4ucHJvdG9jb2wuTm90ZRIKCgJhaxgC",
            "IAEoDBIKCgJuaxgDIAEoDBIQCghwb3NpdGlvbhgEIAEoAxInCh9zaGllbGRl",
            "ZF9UUkMyMF9jb250cmFjdF9hZGRyZXNzGAUgASgMIiMKD051bGxpZmllclJl",
            "c3VsdBIQCghpc19zcGVudBgBIAEoCCLZAQomU2hpZWxkZWRUUkMyMFRyaWdn",
            "ZXJDb250cmFjdFBhcmFtZXRlcnMSRAoZc2hpZWxkZWRfVFJDMjBfUGFyYW1l",
            "dGVycxgBIAEoCzIhLnByb3RvY29sLlNoaWVsZGVkVFJDMjBQYXJhbWV0ZXJz",
            "EjkKGXNwZW5kX2F1dGhvcml0eV9zaWduYXR1cmUYAiADKAsyFi5wcm90b2Nv",
            "bC5CeXRlc01lc3NhZ2USDgoGYW1vdW50GAMgASgJEh4KFnRyYW5zcGFyZW50",
            "X3RvX2FkZHJlc3MYBCABKAwy23AKBldhbGxldBJnCgpHZXRBY2NvdW50EhEu",
            "cHJvdG9jb2wuQWNjb3VudBoRLnByb3RvY29sLkFjY291bnQiM4LT5JMCLSIS",
            "L3dhbGxldC9nZXRhY2NvdW50OgEqWhQSEi93YWxsZXQvZ2V0YWNjb3VudBJz",
            "Cg5HZXRBY2NvdW50QnlJZBIRLnByb3RvY29sLkFjY291bnQaES5wcm90b2Nv",
            "bC5BY2NvdW50IjuC0+STAjUiFi93YWxsZXQvZ2V0YWNjb3VudGJ5aWQ6ASpa",
            "GBIWL3dhbGxldC9nZXRhY2NvdW50YnlpZBKZAQoRR2V0QWNjb3VudEJhbGFu",
            "Y2USHy5wcm90b2NvbC5BY2NvdW50QmFsYW5jZVJlcXVlc3QaIC5wcm90b2Nv",
            "bC5BY2NvdW50QmFsYW5jZVJlc3BvbnNlIkGC0+STAjsiGS93YWxsZXQvZ2V0",
            "YWNjb3VudGJhbGFuY2U6ASpaGxIZL3dhbGxldC9nZXRhY2NvdW50YmFsYW5j",
            "ZRKpAQoUR2V0QmxvY2tCYWxhbmNlVHJhY2USKy5wcm90b2NvbC5CbG9ja0Jh",
            "bGFuY2VUcmFjZS5CbG9ja0lkZW50aWZpZXIaGy5wcm90b2NvbC5CbG9ja0Jh",
            "bGFuY2VUcmFjZSJHgtPkkwJBIhwvd2FsbGV0L2dldGJsb2NrYmFsYW5jZXRy",
            "YWNlOgEqWh4SHC93YWxsZXQvZ2V0YmxvY2tiYWxhbmNldHJhY2USiQEKEUNy",
            "ZWF0ZVRyYW5zYWN0aW9uEhoucHJvdG9jb2wuVHJhbnNmZXJDb250cmFjdBoV",
            "LnByb3RvY29sLlRyYW5zYWN0aW9uIkGC0+STAjsiGS93YWxsZXQvY3JlYXRl",
            "dHJhbnNhY3Rpb246ASpaGxIZL3dhbGxldC9jcmVhdGV0cmFuc2FjdGlvbhJS",
            "ChJDcmVhdGVUcmFuc2FjdGlvbjISGi5wcm90b2NvbC5UcmFuc2ZlckNvbnRy",
            "YWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABKIAQoUQnJv",
            "YWRjYXN0VHJhbnNhY3Rpb24SFS5wcm90b2NvbC5UcmFuc2FjdGlvbhoQLnBy",
            "b3RvY29sLlJldHVybiJHgtPkkwJBIhwvd2FsbGV0L2Jyb2FkY2FzdHRyYW5z",
            "YWN0aW9uOgEqWh4SHC93YWxsZXQvYnJvYWRjYXN0dHJhbnNhY3Rpb24SggEK",
            "DVVwZGF0ZUFjY291bnQSHy5wcm90b2NvbC5BY2NvdW50VXBkYXRlQ29udHJh",
            "Y3QaFS5wcm90b2NvbC5UcmFuc2FjdGlvbiI5gtPkkwIzIhUvd2FsbGV0L3Vw",
            "ZGF0ZWFjY291bnQ6ASpaFxIVL3dhbGxldC91cGRhdGVhY2NvdW50En4KDFNl",
            "dEFjY291bnRJZBIeLnByb3RvY29sLlNldEFjY291bnRJZENvbnRyYWN0GhUu",
            "cHJvdG9jb2wuVHJhbnNhY3Rpb24iN4LT5JMCMSIUL3dhbGxldC9zZXRhY2Nv",
            "dW50aWQ6ASpaFhIUL3dhbGxldC9zZXRhY2NvdW50aWQSUwoOVXBkYXRlQWNj",
            "b3VudDISHy5wcm90b2NvbC5BY2NvdW50VXBkYXRlQ29udHJhY3QaHi5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEo8BChJWb3RlV2l0bmVzc0Fj",
            "Y291bnQSHS5wcm90b2NvbC5Wb3RlV2l0bmVzc0NvbnRyYWN0GhUucHJvdG9j",
            "b2wuVHJhbnNhY3Rpb24iQ4LT5JMCPSIaL3dhbGxldC92b3Rld2l0bmVzc2Fj",
            "Y291bnQ6ASpaHBIaL3dhbGxldC92b3Rld2l0bmVzc2FjY291bnQSUgoNVXBk",
            "YXRlU2V0dGluZxIfLnByb3RvY29sLlVwZGF0ZVNldHRpbmdDb250cmFjdBoe",
            "LnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASWgoRVXBkYXRlRW5l",
            "cmd5TGltaXQSIy5wcm90b2NvbC5VcGRhdGVFbmVyZ3lMaW1pdENvbnRyYWN0",
            "Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJWChNWb3RlV2l0",
            "bmVzc0FjY291bnQyEh0ucHJvdG9jb2wuVm90ZVdpdG5lc3NDb250cmFjdBoe",
            "LnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASiAEKEENyZWF0ZUFz",
            "c2V0SXNzdWUSHC5wcm90b2NvbC5Bc3NldElzc3VlQ29udHJhY3QaFS5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbiI/gtPkkwI5Ihgvd2FsbGV0L2NyZWF0ZWFzc2V0",
            "aXNzdWU6ASpaGhIYL3dhbGxldC9jcmVhdGVhc3NldGlzc3VlElMKEUNyZWF0",
            "ZUFzc2V0SXNzdWUyEhwucHJvdG9jb2wuQXNzZXRJc3N1ZUNvbnRyYWN0Gh4u",
            "cHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABKCAQoNVXBkYXRlV2l0",
            "bmVzcxIfLnByb3RvY29sLldpdG5lc3NVcGRhdGVDb250cmFjdBoVLnByb3Rv",
            "Y29sLlRyYW5zYWN0aW9uIjmC0+STAjMiFS93YWxsZXQvdXBkYXRld2l0bmVz",
            "czoBKloXEhUvd2FsbGV0L3VwZGF0ZXdpdG5lc3MSUwoOVXBkYXRlV2l0bmVz",
            "czISHy5wcm90b2NvbC5XaXRuZXNzVXBkYXRlQ29udHJhY3QaHi5wcm90b2Nv",
            "bC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEoIBCg1DcmVhdGVBY2NvdW50Eh8u",
            "cHJvdG9jb2wuQWNjb3VudENyZWF0ZUNvbnRyYWN0GhUucHJvdG9jb2wuVHJh",
            "bnNhY3Rpb24iOYLT5JMCMyIVL3dhbGxldC9jcmVhdGVhY2NvdW50OgEqWhcS",
            "FS93YWxsZXQvY3JlYXRlYWNjb3VudBJTCg5DcmVhdGVBY2NvdW50MhIfLnBy",
            "b3RvY29sLkFjY291bnRDcmVhdGVDb250cmFjdBoeLnByb3RvY29sLlRyYW5z",
            "YWN0aW9uRXh0ZW50aW9uIgASggEKDUNyZWF0ZVdpdG5lc3MSHy5wcm90b2Nv",
            "bC5XaXRuZXNzQ3JlYXRlQ29udHJhY3QaFS5wcm90b2NvbC5UcmFuc2FjdGlv",
            "biI5gtPkkwIzIhUvd2FsbGV0L2NyZWF0ZXdpdG5lc3M6ASpaFxIVL3dhbGxl",
            "dC9jcmVhdGV3aXRuZXNzElMKDkNyZWF0ZVdpdG5lc3MyEh8ucHJvdG9jb2wu",
            "V2l0bmVzc0NyZWF0ZUNvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25F",
            "eHRlbnRpb24iABKCAQoNVHJhbnNmZXJBc3NldBIfLnByb3RvY29sLlRyYW5z",
            "ZmVyQXNzZXRDb250cmFjdBoVLnByb3RvY29sLlRyYW5zYWN0aW9uIjmC0+ST",
            "AjMiFS93YWxsZXQvdHJhbnNmZXJhc3NldDoBKloXEhUvd2FsbGV0L3RyYW5z",
            "ZmVyYXNzZXQSUwoOVHJhbnNmZXJBc3NldDISHy5wcm90b2NvbC5UcmFuc2Zl",
            "ckFzc2V0Q29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlv",
            "biIAEqIBChVQYXJ0aWNpcGF0ZUFzc2V0SXNzdWUSJy5wcm90b2NvbC5QYXJ0",
            "aWNpcGF0ZUFzc2V0SXNzdWVDb250cmFjdBoVLnByb3RvY29sLlRyYW5zYWN0",
            "aW9uIkmC0+STAkMiHS93YWxsZXQvcGFydGljaXBhdGVhc3NldGlzc3VlOgEq",
            "Wh8SHS93YWxsZXQvcGFydGljaXBhdGVhc3NldGlzc3VlEmMKFlBhcnRpY2lw",
            "YXRlQXNzZXRJc3N1ZTISJy5wcm90b2NvbC5QYXJ0aWNpcGF0ZUFzc2V0SXNz",
            "dWVDb250cmFjdBoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgAS",
            "ggEKDUZyZWV6ZUJhbGFuY2USHy5wcm90b2NvbC5GcmVlemVCYWxhbmNlQ29u",
            "dHJhY3QaFS5wcm90b2NvbC5UcmFuc2FjdGlvbiI5gtPkkwIzIhUvd2FsbGV0",
            "L2ZyZWV6ZWJhbGFuY2U6ASpaFxIVL3dhbGxldC9mcmVlemViYWxhbmNlElMK",
            "DkZyZWV6ZUJhbGFuY2UyEh8ucHJvdG9jb2wuRnJlZXplQmFsYW5jZUNvbnRy",
            "YWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABKKAQoPVW5m",
            "cmVlemVCYWxhbmNlEiEucHJvdG9jb2wuVW5mcmVlemVCYWxhbmNlQ29udHJh",
            "Y3QaFS5wcm90b2NvbC5UcmFuc2FjdGlvbiI9gtPkkwI3Ihcvd2FsbGV0L3Vu",
            "ZnJlZXplYmFsYW5jZToBKloZEhcvd2FsbGV0L3VuZnJlZXplYmFsYW5jZRJX",
            "ChBVbmZyZWV6ZUJhbGFuY2UyEiEucHJvdG9jb2wuVW5mcmVlemVCYWxhbmNl",
            "Q29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEoIB",
            "Cg1VbmZyZWV6ZUFzc2V0Eh8ucHJvdG9jb2wuVW5mcmVlemVBc3NldENvbnRy",
            "YWN0GhUucHJvdG9jb2wuVHJhbnNhY3Rpb24iOYLT5JMCMyIVL3dhbGxldC91",
            "bmZyZWV6ZWFzc2V0OgEqWhcSFS93YWxsZXQvdW5mcmVlemVhc3NldBJTCg5V",
            "bmZyZWV6ZUFzc2V0MhIfLnByb3RvY29sLlVuZnJlZXplQXNzZXRDb250cmFj",
            "dBoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASigEKD1dpdGhk",
            "cmF3QmFsYW5jZRIhLnByb3RvY29sLldpdGhkcmF3QmFsYW5jZUNvbnRyYWN0",
            "GhUucHJvdG9jb2wuVHJhbnNhY3Rpb24iPYLT5JMCNyIXL3dhbGxldC93aXRo",
            "ZHJhd2JhbGFuY2U6ASpaGRIXL3dhbGxldC93aXRoZHJhd2JhbGFuY2USVwoQ",
            "V2l0aGRyYXdCYWxhbmNlMhIhLnByb3RvY29sLldpdGhkcmF3QmFsYW5jZUNv",
            "bnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJ6CgtV",
            "cGRhdGVBc3NldBIdLnByb3RvY29sLlVwZGF0ZUFzc2V0Q29udHJhY3QaFS5w",
            "cm90b2NvbC5UcmFuc2FjdGlvbiI1gtPkkwIvIhMvd2FsbGV0L3VwZGF0ZWFz",
            "c2V0OgEqWhUSEy93YWxsZXQvdXBkYXRlYXNzZXQSTwoMVXBkYXRlQXNzZXQy",
            "Eh0ucHJvdG9jb2wuVXBkYXRlQXNzZXRDb250cmFjdBoeLnByb3RvY29sLlRy",
            "YW5zYWN0aW9uRXh0ZW50aW9uIgASVAoOUHJvcG9zYWxDcmVhdGUSIC5wcm90",
            "b2NvbC5Qcm9wb3NhbENyZWF0ZUNvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNh",
            "Y3Rpb25FeHRlbnRpb24iABJWCg9Qcm9wb3NhbEFwcHJvdmUSIS5wcm90b2Nv",
            "bC5Qcm9wb3NhbEFwcHJvdmVDb250cmFjdBoeLnByb3RvY29sLlRyYW5zYWN0",
            "aW9uRXh0ZW50aW9uIgASVAoOUHJvcG9zYWxEZWxldGUSIC5wcm90b2NvbC5Q",
            "cm9wb3NhbERlbGV0ZUNvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25F",
            "eHRlbnRpb24iABJMCgpCdXlTdG9yYWdlEhwucHJvdG9jb2wuQnV5U3RvcmFn",
            "ZUNvbnRyYWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJW",
            "Cg9CdXlTdG9yYWdlQnl0ZXMSIS5wcm90b2NvbC5CdXlTdG9yYWdlQnl0ZXND",
            "b250cmFjdBoeLnByb3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASTgoL",
            "U2VsbFN0b3JhZ2USHS5wcm90b2NvbC5TZWxsU3RvcmFnZUNvbnRyYWN0Gh4u",
            "cHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJUCg5FeGNoYW5nZUNy",
            "ZWF0ZRIgLnByb3RvY29sLkV4Y2hhbmdlQ3JlYXRlQ29udHJhY3QaHi5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAElQKDkV4Y2hhbmdlSW5qZWN0",
            "EiAucHJvdG9jb2wuRXhjaGFuZ2VJbmplY3RDb250cmFjdBoeLnByb3RvY29s",
            "LlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASWAoQRXhjaGFuZ2VXaXRoZHJhdxIi",
            "LnByb3RvY29sLkV4Y2hhbmdlV2l0aGRyYXdDb250cmFjdBoeLnByb3RvY29s",
            "LlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASXgoTRXhjaGFuZ2VUcmFuc2FjdGlv",
            "bhIlLnByb3RvY29sLkV4Y2hhbmdlVHJhbnNhY3Rpb25Db250cmFjdBoeLnBy",
            "b3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASVgoPTWFya2V0U2VsbEFz",
            "c2V0EiEucHJvdG9jb2wuTWFya2V0U2VsbEFzc2V0Q29udHJhY3QaHi5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEloKEU1hcmtldENhbmNlbE9y",
            "ZGVyEiMucHJvdG9jb2wuTWFya2V0Q2FuY2VsT3JkZXJDb250cmFjdBoeLnBy",
            "b3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASRQoSR2V0TWFya2V0T3Jk",
            "ZXJCeUlkEhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdlGhUucHJvdG9jb2wuTWFy",
            "a2V0T3JkZXIiABJOChdHZXRNYXJrZXRPcmRlckJ5QWNjb3VudBIWLnByb3Rv",
            "Y29sLkJ5dGVzTWVzc2FnZRoZLnByb3RvY29sLk1hcmtldE9yZGVyTGlzdCIA",
            "Ek4KFEdldE1hcmtldFByaWNlQnlQYWlyEhkucHJvdG9jb2wuTWFya2V0T3Jk",
            "ZXJQYWlyGhkucHJvdG9jb2wuTWFya2V0UHJpY2VMaXN0IgASUgoYR2V0TWFy",
            "a2V0T3JkZXJMaXN0QnlQYWlyEhkucHJvdG9jb2wuTWFya2V0T3JkZXJQYWly",
            "GhkucHJvdG9jb2wuTWFya2V0T3JkZXJMaXN0IgASTAoRR2V0TWFya2V0UGFp",
            "ckxpc3QSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaHS5wcm90b2NvbC5NYXJr",
            "ZXRPcmRlclBhaXJMaXN0IgASagoJTGlzdE5vZGVzEhYucHJvdG9jb2wuRW1w",
            "dHlNZXNzYWdlGhIucHJvdG9jb2wuTm9kZUxpc3QiMYLT5JMCKyIRL3dhbGxl",
            "dC9saXN0bm9kZXM6ASpaExIRL3dhbGxldC9saXN0bm9kZXMSkgEKFkdldEFz",
            "c2V0SXNzdWVCeUFjY291bnQSES5wcm90b2NvbC5BY2NvdW50GhgucHJvdG9j",
            "b2wuQXNzZXRJc3N1ZUxpc3QiS4LT5JMCRSIeL3dhbGxldC9nZXRhc3NldGlz",
            "c3VlYnlhY2NvdW50OgEqWiASHi93YWxsZXQvZ2V0YXNzZXRpc3N1ZWJ5YWNj",
            "b3VudBJ6Cg1HZXRBY2NvdW50TmV0EhEucHJvdG9jb2wuQWNjb3VudBobLnBy",
            "b3RvY29sLkFjY291bnROZXRNZXNzYWdlIjmC0+STAjMiFS93YWxsZXQvZ2V0",
            "YWNjb3VudG5ldDoBKloXEhUvd2FsbGV0L2dldGFjY291bnRuZXQSSwoSR2V0",
            "QWNjb3VudFJlc291cmNlEhEucHJvdG9jb2wuQWNjb3VudBogLnByb3RvY29s",
            "LkFjY291bnRSZXNvdXJjZU1lc3NhZ2UiABKSAQoTR2V0QXNzZXRJc3N1ZUJ5",
            "TmFtZRIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRocLnByb3RvY29sLkFzc2V0",
            "SXNzdWVDb250cmFjdCJFgtPkkwI/Ihsvd2FsbGV0L2dldGFzc2V0aXNzdWVi",
            "eW5hbWU6ASpaHRIbL3dhbGxldC9nZXRhc3NldGlzc3VlYnluYW1lEk0KF0dl",
            "dEFzc2V0SXNzdWVMaXN0QnlOYW1lEhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdl",
            "GhgucHJvdG9jb2wuQXNzZXRJc3N1ZUxpc3QiABJLChFHZXRBc3NldElzc3Vl",
            "QnlJZBIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRocLnByb3RvY29sLkFzc2V0",
            "SXNzdWVDb250cmFjdCIAEm0KC0dldE5vd0Jsb2NrEhYucHJvdG9jb2wuRW1w",
            "dHlNZXNzYWdlGg8ucHJvdG9jb2wuQmxvY2siNYLT5JMCLyITL3dhbGxldC9n",
            "ZXRub3dibG9jazoBKloVEhMvd2FsbGV0L2dldG5vd2Jsb2NrEkIKDEdldE5v",
            "d0Jsb2NrMhIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRoYLnByb3RvY29sLkJs",
            "b2NrRXh0ZW50aW9uIgASdAoNR2V0QmxvY2tCeU51bRIXLnByb3RvY29sLk51",
            "bWJlck1lc3NhZ2UaDy5wcm90b2NvbC5CbG9jayI5gtPkkwIzIhUvd2FsbGV0",
            "L2dldGJsb2NrYnludW06ASpaFxIVL3dhbGxldC9nZXRibG9ja2J5bnVtEkUK",
            "DkdldEJsb2NrQnlOdW0yEhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZRoYLnBy",
            "b3RvY29sLkJsb2NrRXh0ZW50aW9uIgASUwodR2V0VHJhbnNhY3Rpb25Db3Vu",
            "dEJ5QmxvY2tOdW0SFy5wcm90b2NvbC5OdW1iZXJNZXNzYWdlGhcucHJvdG9j",
            "b2wuTnVtYmVyTWVzc2FnZSIAEnAKDEdldEJsb2NrQnlJZBIWLnByb3RvY29s",
            "LkJ5dGVzTWVzc2FnZRoPLnByb3RvY29sLkJsb2NrIjeC0+STAjEiFC93YWxs",
            "ZXQvZ2V0YmxvY2tieWlkOgEqWhYSFC93YWxsZXQvZ2V0YmxvY2tieWlkEocB",
            "ChNHZXRCbG9ja0J5TGltaXROZXh0EhQucHJvdG9jb2wuQmxvY2tMaW1pdBoT",
            "LnByb3RvY29sLkJsb2NrTGlzdCJFgtPkkwI/Ihsvd2FsbGV0L2dldGJsb2Nr",
            "YnlsaW1pdG5leHQ6ASpaHRIbL3dhbGxldC9nZXRibG9ja2J5bGltaXRuZXh0",
            "EkwKFEdldEJsb2NrQnlMaW1pdE5leHQyEhQucHJvdG9jb2wuQmxvY2tMaW1p",
            "dBocLnByb3RvY29sLkJsb2NrTGlzdEV4dGVudGlvbiIAEooBChNHZXRCbG9j",
            "a0J5TGF0ZXN0TnVtEhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZRoTLnByb3Rv",
            "Y29sLkJsb2NrTGlzdCJFgtPkkwI/Ihsvd2FsbGV0L2dldGJsb2NrYnlsYXRl",
            "c3RudW06ASpaHRIbL3dhbGxldC9nZXRibG9ja2J5bGF0ZXN0bnVtEk8KFEdl",
            "dEJsb2NrQnlMYXRlc3ROdW0yEhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZRoc",
            "LnByb3RvY29sLkJsb2NrTGlzdEV4dGVudGlvbiIAEogBChJHZXRUcmFuc2Fj",
            "dGlvbkJ5SWQSFi5wcm90b2NvbC5CeXRlc01lc3NhZ2UaFS5wcm90b2NvbC5U",
            "cmFuc2FjdGlvbiJDgtPkkwI9Ihovd2FsbGV0L2dldHRyYW5zYWN0aW9uYnlp",
            "ZDoBKlocEhovd2FsbGV0L2dldHRyYW5zYWN0aW9uYnlpZBJRCg5EZXBsb3lD",
            "b250cmFjdBIdLnByb3RvY29sLkNyZWF0ZVNtYXJ0Q29udHJhY3QaHi5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEkAKC0dldENvbnRyYWN0EhYu",
            "cHJvdG9jb2wuQnl0ZXNNZXNzYWdlGhcucHJvdG9jb2wuU21hcnRDb250cmFj",
            "dCIAEk8KD0dldENvbnRyYWN0SW5mbxIWLnByb3RvY29sLkJ5dGVzTWVzc2Fn",
            "ZRoiLnByb3RvY29sLlNtYXJ0Q29udHJhY3REYXRhV3JhcHBlciIAElMKD1Ry",
            "aWdnZXJDb250cmFjdBIeLnByb3RvY29sLlRyaWdnZXJTbWFydENvbnRyYWN0",
            "Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJbChdUcmlnZ2Vy",
            "Q29uc3RhbnRDb250cmFjdBIeLnByb3RvY29sLlRyaWdnZXJTbWFydENvbnRy",
            "YWN0Gh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJQChBDbGVh",
            "ckNvbnRyYWN0QUJJEhoucHJvdG9jb2wuQ2xlYXJBQklDb250cmFjdBoeLnBy",
            "b3RvY29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIgASeQoNTGlzdFdpdG5lc3Nl",
            "cxIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRoVLnByb3RvY29sLldpdG5lc3NM",
            "aXN0IjmC0+STAjMiFS93YWxsZXQvbGlzdHdpdG5lc3NlczoBKloXEhUvd2Fs",
            "bGV0L2xpc3R3aXRuZXNzZXMSXQoUR2V0RGVsZWdhdGVkUmVzb3VyY2USIi5w",
            "cm90b2NvbC5EZWxlZ2F0ZWRSZXNvdXJjZU1lc3NhZ2UaHy5wcm90b2NvbC5E",
            "ZWxlZ2F0ZWRSZXNvdXJjZUxpc3QiABJlCiBHZXREZWxlZ2F0ZWRSZXNvdXJj",
            "ZUFjY291bnRJbmRleBIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRonLnByb3Rv",
            "Y29sLkRlbGVnYXRlZFJlc291cmNlQWNjb3VudEluZGV4IgASegoNTGlzdFBy",
            "b3Bvc2FscxIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRoWLnByb3RvY29sLlBy",
            "b3Bvc2FsTGlzdCI5gtPkkwIzIhUvd2FsbGV0L2xpc3Rwcm9wb3NhbHM6ASpa",
            "FxIVL3dhbGxldC9saXN0cHJvcG9zYWxzEp8BChhHZXRQYWdpbmF0ZWRQcm9w",
            "b3NhbExpc3QSGi5wcm90b2NvbC5QYWdpbmF0ZWRNZXNzYWdlGhYucHJvdG9j",
            "b2wuUHJvcG9zYWxMaXN0Ik+C0+STAkkiIC93YWxsZXQvZ2V0cGFnaW5hdGVk",
            "cHJvcG9zYWxsaXN0OgEqWiISIC93YWxsZXQvZ2V0cGFnaW5hdGVkcHJvcG9z",
            "YWxsaXN0EnwKD0dldFByb3Bvc2FsQnlJZBIWLnByb3RvY29sLkJ5dGVzTWVz",
            "c2FnZRoSLnByb3RvY29sLlByb3Bvc2FsIj2C0+STAjciFy93YWxsZXQvZ2V0",
            "cHJvcG9zYWxieWlkOgEqWhkSFy93YWxsZXQvZ2V0cHJvcG9zYWxieWlkEnoK",
            "DUxpc3RFeGNoYW5nZXMSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaFi5wcm90",
            "b2NvbC5FeGNoYW5nZUxpc3QiOYLT5JMCMyIVL3dhbGxldC9saXN0ZXhjaGFu",
            "Z2VzOgEqWhcSFS93YWxsZXQvbGlzdGV4Y2hhbmdlcxKfAQoYR2V0UGFnaW5h",
            "dGVkRXhjaGFuZ2VMaXN0EhoucHJvdG9jb2wuUGFnaW5hdGVkTWVzc2FnZRoW",
            "LnByb3RvY29sLkV4Y2hhbmdlTGlzdCJPgtPkkwJJIiAvd2FsbGV0L2dldHBh",
            "Z2luYXRlZGV4Y2hhbmdlbGlzdDoBKloiEiAvd2FsbGV0L2dldHBhZ2luYXRl",
            "ZGV4Y2hhbmdlbGlzdBJ8Cg9HZXRFeGNoYW5nZUJ5SWQSFi5wcm90b2NvbC5C",
            "eXRlc01lc3NhZ2UaEi5wcm90b2NvbC5FeGNoYW5nZSI9gtPkkwI3Ihcvd2Fs",
            "bGV0L2dldGV4Y2hhbmdlYnlpZDoBKloZEhcvd2FsbGV0L2dldGV4Y2hhbmdl",
            "YnlpZBKMAQoSR2V0Q2hhaW5QYXJhbWV0ZXJzEhYucHJvdG9jb2wuRW1wdHlN",
            "ZXNzYWdlGhkucHJvdG9jb2wuQ2hhaW5QYXJhbWV0ZXJzIkOC0+STAj0iGi93",
            "YWxsZXQvZ2V0Y2hhaW5wYXJhbWV0ZXJzOgEqWhwSGi93YWxsZXQvZ2V0Y2hh",
            "aW5wYXJhbWV0ZXJzEogBChFHZXRBc3NldElzc3VlTGlzdBIWLnByb3RvY29s",
            "LkVtcHR5TWVzc2FnZRoYLnByb3RvY29sLkFzc2V0SXNzdWVMaXN0IkGC0+ST",
            "AjsiGS93YWxsZXQvZ2V0YXNzZXRpc3N1ZWxpc3Q6ASpaGxIZL3dhbGxldC9n",
            "ZXRhc3NldGlzc3VlbGlzdBKnAQoaR2V0UGFnaW5hdGVkQXNzZXRJc3N1ZUxp",
            "c3QSGi5wcm90b2NvbC5QYWdpbmF0ZWRNZXNzYWdlGhgucHJvdG9jb2wuQXNz",
            "ZXRJc3N1ZUxpc3QiU4LT5JMCTSIiL3dhbGxldC9nZXRwYWdpbmF0ZWRhc3Nl",
            "dGlzc3VlbGlzdDoBKlokEiIvd2FsbGV0L2dldHBhZ2luYXRlZGFzc2V0aXNz",
            "dWVsaXN0EoQBChBUb3RhbFRyYW5zYWN0aW9uEhYucHJvdG9jb2wuRW1wdHlN",
            "ZXNzYWdlGhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZSI/gtPkkwI5Ihgvd2Fs",
            "bGV0L3RvdGFsdHJhbnNhY3Rpb246ASpaGhIYL3dhbGxldC90b3RhbHRyYW5z",
            "YWN0aW9uEpYBChZHZXROZXh0TWFpbnRlbmFuY2VUaW1lEhYucHJvdG9jb2wu",
            "RW1wdHlNZXNzYWdlGhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZSJLgtPkkwJF",
            "Ih4vd2FsbGV0L2dldG5leHRtYWludGVuYW5jZXRpbWU6ASpaIBIeL3dhbGxl",
            "dC9nZXRuZXh0bWFpbnRlbmFuY2V0aW1lEosBChJHZXRUcmFuc2FjdGlvblNp",
            "Z24SGS5wcm90b2NvbC5UcmFuc2FjdGlvblNpZ24aFS5wcm90b2NvbC5UcmFu",
            "c2FjdGlvbiJDgtPkkwI9Ihovd2FsbGV0L2dldHRyYW5zYWN0aW9uc2lnbjoB",
            "KlocEhovd2FsbGV0L2dldHRyYW5zYWN0aW9uc2lnbhJSChNHZXRUcmFuc2Fj",
            "dGlvblNpZ24yEhkucHJvdG9jb2wuVHJhbnNhY3Rpb25TaWduGh4ucHJvdG9j",
            "b2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJ6Cg1DcmVhdGVBZGRyZXNzEhYu",
            "cHJvdG9jb2wuQnl0ZXNNZXNzYWdlGhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdl",
            "IjmC0+STAjMiFS93YWxsZXQvY3JlYXRlYWRkcmVzczoBKloXEhUvd2FsbGV0",
            "L2NyZWF0ZWFkZHJlc3MSWQoRRWFzeVRyYW5zZmVyQXNzZXQSIi5wcm90b2Nv",
            "bC5FYXN5VHJhbnNmZXJBc3NldE1lc3NhZ2UaHi5wcm90b2NvbC5FYXN5VHJh",
            "bnNmZXJSZXNwb25zZSIAEmsKGkVhc3lUcmFuc2ZlckFzc2V0QnlQcml2YXRl",
            "EisucHJvdG9jb2wuRWFzeVRyYW5zZmVyQXNzZXRCeVByaXZhdGVNZXNzYWdl",
            "Gh4ucHJvdG9jb2wuRWFzeVRyYW5zZmVyUmVzcG9uc2UiABKGAQoMRWFzeVRy",
            "YW5zZmVyEh0ucHJvdG9jb2wuRWFzeVRyYW5zZmVyTWVzc2FnZRoeLnByb3Rv",
            "Y29sLkVhc3lUcmFuc2ZlclJlc3BvbnNlIjeC0+STAjEiFC93YWxsZXQvZWFz",
            "eXRyYW5zZmVyOgEqWhYSFC93YWxsZXQvZWFzeXRyYW5zZmVyEqoBChVFYXN5",
            "VHJhbnNmZXJCeVByaXZhdGUSJi5wcm90b2NvbC5FYXN5VHJhbnNmZXJCeVBy",
            "aXZhdGVNZXNzYWdlGh4ucHJvdG9jb2wuRWFzeVRyYW5zZmVyUmVzcG9uc2Ui",
            "SYLT5JMCQyIdL3dhbGxldC9lYXN5dHJhbnNmZXJieXByaXZhdGU6ASpaHxId",
            "L3dhbGxldC9lYXN5dHJhbnNmZXJieXByaXZhdGUSiwEKD0dlbmVyYXRlQWRk",
            "cmVzcxIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRohLnByb3RvY29sLkFkZHJl",
            "c3NQcktleVBhaXJNZXNzYWdlIj2C0+STAjciFy93YWxsZXQvZ2VuZXJhdGVh",
            "ZGRyZXNzOgEqWhkSFy93YWxsZXQvZ2VuZXJhdGVhZGRyZXNzEpgBChZHZXRU",
            "cmFuc2FjdGlvbkluZm9CeUlkEhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdlGhku",
            "cHJvdG9jb2wuVHJhbnNhY3Rpb25JbmZvIkuC0+STAkUiHi93YWxsZXQvZ2V0",
            "dHJhbnNhY3Rpb25pbmZvYnlpZDoBKlogEh4vd2FsbGV0L2dldHRyYW5zYWN0",
            "aW9uaW5mb2J5aWQSswEKF0FjY291bnRQZXJtaXNzaW9uVXBkYXRlEikucHJv",
            "dG9jb2wuQWNjb3VudFBlcm1pc3Npb25VcGRhdGVDb250cmFjdBoeLnByb3Rv",
            "Y29sLlRyYW5zYWN0aW9uRXh0ZW50aW9uIk2C0+STAkciHy93YWxsZXQvYWNj",
            "b3VudHBlcm1pc3Npb251cGRhdGU6ASpaIRIfL3dhbGxldC9hY2NvdW50cGVy",
            "bWlzc2lvbnVwZGF0ZRJGCgdBZGRTaWduEhkucHJvdG9jb2wuVHJhbnNhY3Rp",
            "b25TaWduGh4ucHJvdG9jb2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJUChhH",
            "ZXRUcmFuc2FjdGlvblNpZ25XZWlnaHQSFS5wcm90b2NvbC5UcmFuc2FjdGlv",
            "bhofLnByb3RvY29sLlRyYW5zYWN0aW9uU2lnbldlaWdodCIAElgKGkdldFRy",
            "YW5zYWN0aW9uQXBwcm92ZWRMaXN0EhUucHJvdG9jb2wuVHJhbnNhY3Rpb24a",
            "IS5wcm90b2NvbC5UcmFuc2FjdGlvbkFwcHJvdmVkTGlzdCIAEjsKC0dldE5v",
            "ZGVJbmZvEhYucHJvdG9jb2wuRW1wdHlNZXNzYWdlGhIucHJvdG9jb2wuTm9k",
            "ZUluZm8iABJCCg1HZXRSZXdhcmRJbmZvEhYucHJvdG9jb2wuQnl0ZXNNZXNz",
            "YWdlGhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZSIAEkUKEEdldEJyb2tlcmFn",
            "ZUluZm8SFi5wcm90b2NvbC5CeXRlc01lc3NhZ2UaFy5wcm90b2NvbC5OdW1i",
            "ZXJNZXNzYWdlIgASVgoPVXBkYXRlQnJva2VyYWdlEiEucHJvdG9jb2wuVXBk",
            "YXRlQnJva2VyYWdlQ29udHJhY3QaHi5wcm90b2NvbC5UcmFuc2FjdGlvbkV4",
            "dGVudGlvbiIAEloKGUNyZWF0ZVNoaWVsZGVkVHJhbnNhY3Rpb24SGy5wcm90",
            "b2NvbC5Qcml2YXRlUGFyYW1ldGVycxoeLnByb3RvY29sLlRyYW5zYWN0aW9u",
            "RXh0ZW50aW9uIgASXwoYR2V0TWVya2xlVHJlZVZvdWNoZXJJbmZvEhkucHJv",
            "dG9jb2wuT3V0cHV0UG9pbnRJbmZvGiYucHJvdG9jb2wuSW5jcmVtZW50YWxN",
            "ZXJrbGVWb3VjaGVySW5mbyIAEkkKDVNjYW5Ob3RlQnlJdmsSHi5wcm90b2Nv",
            "bC5JdmtEZWNyeXB0UGFyYW1ldGVycxoWLnByb3RvY29sLkRlY3J5cHROb3Rl",
            "cyIAEl0KFFNjYW5BbmRNYXJrTm90ZUJ5SXZrEiUucHJvdG9jb2wuSXZrRGVj",
            "cnlwdEFuZE1hcmtQYXJhbWV0ZXJzGhwucHJvdG9jb2wuRGVjcnlwdE5vdGVz",
            "TWFya2VkIgASSQoNU2Nhbk5vdGVCeU92axIeLnByb3RvY29sLk92a0RlY3J5",
            "cHRQYXJhbWV0ZXJzGhYucHJvdG9jb2wuRGVjcnlwdE5vdGVzIgASQgoOR2V0",
            "U3BlbmRpbmdLZXkSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaFi5wcm90b2Nv",
            "bC5CeXRlc01lc3NhZ2UiABJYChZHZXRFeHBhbmRlZFNwZW5kaW5nS2V5EhYu",
            "cHJvdG9jb2wuQnl0ZXNNZXNzYWdlGiQucHJvdG9jb2wuRXhwYW5kZWRTcGVu",
            "ZGluZ0tleU1lc3NhZ2UiABJACgxHZXRBa0Zyb21Bc2sSFi5wcm90b2NvbC5C",
            "eXRlc01lc3NhZ2UaFi5wcm90b2NvbC5CeXRlc01lc3NhZ2UiABJACgxHZXRO",
            "a0Zyb21Oc2sSFi5wcm90b2NvbC5CeXRlc01lc3NhZ2UaFi5wcm90b2NvbC5C",
            "eXRlc01lc3NhZ2UiABJbChVHZXRJbmNvbWluZ1ZpZXdpbmdLZXkSGy5wcm90",
            "b2NvbC5WaWV3aW5nS2V5TWVzc2FnZRojLnByb3RvY29sLkluY29taW5nVmll",
            "d2luZ0tleU1lc3NhZ2UiABJICg5HZXREaXZlcnNpZmllchIWLnByb3RvY29s",
            "LkVtcHR5TWVzc2FnZRocLnByb3RvY29sLkRpdmVyc2lmaWVyTWVzc2FnZSIA",
            "ElAKFUdldE5ld1NoaWVsZGVkQWRkcmVzcxIWLnByb3RvY29sLkVtcHR5TWVz",
            "c2FnZRodLnByb3RvY29sLlNoaWVsZGVkQWRkcmVzc0luZm8iABJpChRHZXRa",
            "ZW5QYXltZW50QWRkcmVzcxIuLnByb3RvY29sLkluY29taW5nVmlld2luZ0tl",
            "eURpdmVyc2lmaWVyTWVzc2FnZRofLnByb3RvY29sLlBheW1lbnRBZGRyZXNz",
            "TWVzc2FnZSIAEjoKBkdldFJjbRIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRoW",
            "LnByb3RvY29sLkJ5dGVzTWVzc2FnZSIAEjwKB0lzU3BlbmQSGC5wcm90b2Nv",
            "bC5Ob3RlUGFyYW1ldGVycxoVLnByb3RvY29sLlNwZW5kUmVzdWx0IgASdwos",
            "Q3JlYXRlU2hpZWxkZWRUcmFuc2FjdGlvbldpdGhvdXRTcGVuZEF1dGhTaWcS",
            "JS5wcm90b2NvbC5Qcml2YXRlUGFyYW1ldGVyc1dpdGhvdXRBc2saHi5wcm90",
            "b2NvbC5UcmFuc2FjdGlvbkV4dGVudGlvbiIAEksKGEdldFNoaWVsZFRyYW5z",
            "YWN0aW9uSGFzaBIVLnByb3RvY29sLlRyYW5zYWN0aW9uGhYucHJvdG9jb2wu",
            "Qnl0ZXNNZXNzYWdlIgASUAoSQ3JlYXRlU3BlbmRBdXRoU2lnEiAucHJvdG9j",
            "b2wuU3BlbmRBdXRoU2lnUGFyYW1ldGVycxoWLnByb3RvY29sLkJ5dGVzTWVz",
            "c2FnZSIAEkkKFUNyZWF0ZVNoaWVsZE51bGxpZmllchIWLnByb3RvY29sLk5m",
            "UGFyYW1ldGVycxoWLnByb3RvY29sLkJ5dGVzTWVzc2FnZSIAEnEKIENyZWF0",
            "ZVNoaWVsZGVkQ29udHJhY3RQYXJhbWV0ZXJzEigucHJvdG9jb2wuUHJpdmF0",
            "ZVNoaWVsZGVkVFJDMjBQYXJhbWV0ZXJzGiEucHJvdG9jb2wuU2hpZWxkZWRU",
            "UkMyMFBhcmFtZXRlcnMiABKFAQoqQ3JlYXRlU2hpZWxkZWRDb250cmFjdFBh",
            "cmFtZXRlcnNXaXRob3V0QXNrEjIucHJvdG9jb2wuUHJpdmF0ZVNoaWVsZGVk",
            "VFJDMjBQYXJhbWV0ZXJzV2l0aG91dEFzaxohLnByb3RvY29sLlNoaWVsZGVk",
            "VFJDMjBQYXJhbWV0ZXJzIgASYQobU2NhblNoaWVsZGVkVFJDMjBOb3Rlc0J5",
            "SXZrEiMucHJvdG9jb2wuSXZrRGVjcnlwdFRSQzIwUGFyYW1ldGVycxobLnBy",
            "b3RvY29sLkRlY3J5cHROb3Rlc1RSQzIwIgASYQobU2NhblNoaWVsZGVkVFJD",
            "MjBOb3Rlc0J5T3ZrEiMucHJvdG9jb2wuT3ZrRGVjcnlwdFRSQzIwUGFyYW1l",
            "dGVycxobLnByb3RvY29sLkRlY3J5cHROb3Rlc1RSQzIwIgASXAogSXNTaGll",
            "bGRlZFRSQzIwQ29udHJhY3ROb3RlU3BlbnQSGy5wcm90b2NvbC5OZlRSQzIw",
            "UGFyYW1ldGVycxoZLnByb3RvY29sLk51bGxpZmllclJlc3VsdCIAEnUKJ0dl",
            "dFRyaWdnZXJJbnB1dEZvclNoaWVsZGVkVFJDMjBDb250cmFjdBIwLnByb3Rv",
            "Y29sLlNoaWVsZGVkVFJDMjBUcmlnZ2VyQ29udHJhY3RQYXJhbWV0ZXJzGhYu",
            "cHJvdG9jb2wuQnl0ZXNNZXNzYWdlIgASUgoXQ3JlYXRlQ29tbW9uVHJhbnNh",
            "Y3Rpb24SFS5wcm90b2NvbC5UcmFuc2FjdGlvbhoeLnByb3RvY29sLlRyYW5z",
            "YWN0aW9uRXh0ZW50aW9uIgASWAocR2V0VHJhbnNhY3Rpb25JbmZvQnlCbG9j",
            "a051bRIXLnByb3RvY29sLk51bWJlck1lc3NhZ2UaHS5wcm90b2NvbC5UcmFu",
            "c2FjdGlvbkluZm9MaXN0IgASPwoKR2V0QnVyblRyeBIWLnByb3RvY29sLkVt",
            "cHR5TWVzc2FnZRoXLnByb3RvY29sLk51bWJlck1lc3NhZ2UiABJMChlHZXRU",
            "cmFuc2FjdGlvbkZyb21QZW5kaW5nEhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdl",
            "GhUucHJvdG9jb2wuVHJhbnNhY3Rpb24iABJWCh1HZXRUcmFuc2FjdGlvbkxp",
            "c3RGcm9tUGVuZGluZxIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRobLnByb3Rv",
            "Y29sLlRyYW5zYWN0aW9uSWRMaXN0IgASQwoOR2V0UGVuZGluZ1NpemUSFi5w",
            "cm90b2NvbC5FbXB0eU1lc3NhZ2UaFy5wcm90b2NvbC5OdW1iZXJNZXNzYWdl",
            "IgAysx0KDldhbGxldFNvbGlkaXR5EncKCkdldEFjY291bnQSES5wcm90b2Nv",
            "bC5BY2NvdW50GhEucHJvdG9jb2wuQWNjb3VudCJDgtPkkwI9Ihovd2FsbGV0",
            "c29saWRpdHkvZ2V0YWNjb3VudDoBKlocEhovd2FsbGV0c29saWRpdHkvZ2V0",
            "YWNjb3VudBKDAQoOR2V0QWNjb3VudEJ5SWQSES5wcm90b2NvbC5BY2NvdW50",
            "GhEucHJvdG9jb2wuQWNjb3VudCJLgtPkkwJFIh4vd2FsbGV0c29saWRpdHkv",
            "Z2V0YWNjb3VudGJ5aWQ6ASpaIBIeL3dhbGxldHNvbGlkaXR5L2dldGFjY291",
            "bnRieWlkEokBCg1MaXN0V2l0bmVzc2VzEhYucHJvdG9jb2wuRW1wdHlNZXNz",
            "YWdlGhUucHJvdG9jb2wuV2l0bmVzc0xpc3QiSYLT5JMCQyIdL3dhbGxldHNv",
            "bGlkaXR5L2xpc3R3aXRuZXNzZXM6ASpaHxIdL3dhbGxldHNvbGlkaXR5L2xp",
            "c3R3aXRuZXNzZXMSmAEKEUdldEFzc2V0SXNzdWVMaXN0EhYucHJvdG9jb2wu",
            "RW1wdHlNZXNzYWdlGhgucHJvdG9jb2wuQXNzZXRJc3N1ZUxpc3QiUYLT5JMC",
            "SyIhL3dhbGxldHNvbGlkaXR5L2dldGFzc2V0aXNzdWVsaXN0OgEqWiMSIS93",
            "YWxsZXRzb2xpZGl0eS9nZXRhc3NldGlzc3VlbGlzdBK3AQoaR2V0UGFnaW5h",
            "dGVkQXNzZXRJc3N1ZUxpc3QSGi5wcm90b2NvbC5QYWdpbmF0ZWRNZXNzYWdl",
            "GhgucHJvdG9jb2wuQXNzZXRJc3N1ZUxpc3QiY4LT5JMCXSIqL3dhbGxldHNv",
            "bGlkaXR5L2dldHBhZ2luYXRlZGFzc2V0aXNzdWVsaXN0OgEqWiwSKi93YWxs",
            "ZXRzb2xpZGl0eS9nZXRwYWdpbmF0ZWRhc3NldGlzc3VlbGlzdBJNChNHZXRB",
            "c3NldElzc3VlQnlOYW1lEhYucHJvdG9jb2wuQnl0ZXNNZXNzYWdlGhwucHJv",
            "dG9jb2wuQXNzZXRJc3N1ZUNvbnRyYWN0IgASTQoXR2V0QXNzZXRJc3N1ZUxp",
            "c3RCeU5hbWUSFi5wcm90b2NvbC5CeXRlc01lc3NhZ2UaGC5wcm90b2NvbC5B",
            "c3NldElzc3VlTGlzdCIAEksKEUdldEFzc2V0SXNzdWVCeUlkEhYucHJvdG9j",
            "b2wuQnl0ZXNNZXNzYWdlGhwucHJvdG9jb2wuQXNzZXRJc3N1ZUNvbnRyYWN0",
            "IgASfQoLR2V0Tm93QmxvY2sSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaDy5w",
            "cm90b2NvbC5CbG9jayJFgtPkkwI/Ihsvd2FsbGV0c29saWRpdHkvZ2V0bm93",
            "YmxvY2s6ASpaHRIbL3dhbGxldHNvbGlkaXR5L2dldG5vd2Jsb2NrEkIKDEdl",
            "dE5vd0Jsb2NrMhIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRoYLnByb3RvY29s",
            "LkJsb2NrRXh0ZW50aW9uIgAShAEKDUdldEJsb2NrQnlOdW0SFy5wcm90b2Nv",
            "bC5OdW1iZXJNZXNzYWdlGg8ucHJvdG9jb2wuQmxvY2siSYLT5JMCQyIdL3dh",
            "bGxldHNvbGlkaXR5L2dldGJsb2NrYnludW06ASpaHxIdL3dhbGxldHNvbGlk",
            "aXR5L2dldGJsb2NrYnludW0SRQoOR2V0QmxvY2tCeU51bTISFy5wcm90b2Nv",
            "bC5OdW1iZXJNZXNzYWdlGhgucHJvdG9jb2wuQmxvY2tFeHRlbnRpb24iABJT",
            "Ch1HZXRUcmFuc2FjdGlvbkNvdW50QnlCbG9ja051bRIXLnByb3RvY29sLk51",
            "bWJlck1lc3NhZ2UaFy5wcm90b2NvbC5OdW1iZXJNZXNzYWdlIgASXQoUR2V0",
            "RGVsZWdhdGVkUmVzb3VyY2USIi5wcm90b2NvbC5EZWxlZ2F0ZWRSZXNvdXJj",
            "ZU1lc3NhZ2UaHy5wcm90b2NvbC5EZWxlZ2F0ZWRSZXNvdXJjZUxpc3QiABJl",
            "CiBHZXREZWxlZ2F0ZWRSZXNvdXJjZUFjY291bnRJbmRleBIWLnByb3RvY29s",
            "LkJ5dGVzTWVzc2FnZRonLnByb3RvY29sLkRlbGVnYXRlZFJlc291cmNlQWNj",
            "b3VudEluZGV4IgASPwoPR2V0RXhjaGFuZ2VCeUlkEhYucHJvdG9jb2wuQnl0",
            "ZXNNZXNzYWdlGhIucHJvdG9jb2wuRXhjaGFuZ2UiABJBCg1MaXN0RXhjaGFu",
            "Z2VzEhYucHJvdG9jb2wuRW1wdHlNZXNzYWdlGhYucHJvdG9jb2wuRXhjaGFu",
            "Z2VMaXN0IgASmAEKEkdldFRyYW5zYWN0aW9uQnlJZBIWLnByb3RvY29sLkJ5",
            "dGVzTWVzc2FnZRoVLnByb3RvY29sLlRyYW5zYWN0aW9uIlOC0+STAk0iIi93",
            "YWxsZXRzb2xpZGl0eS9nZXR0cmFuc2FjdGlvbmJ5aWQ6ASpaJBIiL3dhbGxl",
            "dHNvbGlkaXR5L2dldHRyYW5zYWN0aW9uYnlpZBKoAQoWR2V0VHJhbnNhY3Rp",
            "b25JbmZvQnlJZBIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRoZLnByb3RvY29s",
            "LlRyYW5zYWN0aW9uSW5mbyJbgtPkkwJVIiYvd2FsbGV0c29saWRpdHkvZ2V0",
            "dHJhbnNhY3Rpb25pbmZvYnlpZDoBKlooEiYvd2FsbGV0c29saWRpdHkvZ2V0",
            "dHJhbnNhY3Rpb25pbmZvYnlpZBKbAQoPR2VuZXJhdGVBZGRyZXNzEhYucHJv",
            "dG9jb2wuRW1wdHlNZXNzYWdlGiEucHJvdG9jb2wuQWRkcmVzc1ByS2V5UGFp",
            "ck1lc3NhZ2UiTYLT5JMCRyIfL3dhbGxldHNvbGlkaXR5L2dlbmVyYXRlYWRk",
            "cmVzczoBKlohEh8vd2FsbGV0c29saWRpdHkvZ2VuZXJhdGVhZGRyZXNzEl8K",
            "GEdldE1lcmtsZVRyZWVWb3VjaGVySW5mbxIZLnByb3RvY29sLk91dHB1dFBv",
            "aW50SW5mbxomLnByb3RvY29sLkluY3JlbWVudGFsTWVya2xlVm91Y2hlcklu",
            "Zm8iABJJCg1TY2FuTm90ZUJ5SXZrEh4ucHJvdG9jb2wuSXZrRGVjcnlwdFBh",
            "cmFtZXRlcnMaFi5wcm90b2NvbC5EZWNyeXB0Tm90ZXMiABJdChRTY2FuQW5k",
            "TWFya05vdGVCeUl2axIlLnByb3RvY29sLkl2a0RlY3J5cHRBbmRNYXJrUGFy",
            "YW1ldGVycxocLnByb3RvY29sLkRlY3J5cHROb3Rlc01hcmtlZCIAEkkKDVNj",
            "YW5Ob3RlQnlPdmsSHi5wcm90b2NvbC5PdmtEZWNyeXB0UGFyYW1ldGVycxoW",
            "LnByb3RvY29sLkRlY3J5cHROb3RlcyIAEjwKB0lzU3BlbmQSGC5wcm90b2Nv",
            "bC5Ob3RlUGFyYW1ldGVycxoVLnByb3RvY29sLlNwZW5kUmVzdWx0IgASYQob",
            "U2NhblNoaWVsZGVkVFJDMjBOb3Rlc0J5SXZrEiMucHJvdG9jb2wuSXZrRGVj",
            "cnlwdFRSQzIwUGFyYW1ldGVycxobLnByb3RvY29sLkRlY3J5cHROb3Rlc1RS",
            "QzIwIgASYQobU2NhblNoaWVsZGVkVFJDMjBOb3Rlc0J5T3ZrEiMucHJvdG9j",
            "b2wuT3ZrRGVjcnlwdFRSQzIwUGFyYW1ldGVycxobLnByb3RvY29sLkRlY3J5",
            "cHROb3Rlc1RSQzIwIgASXAogSXNTaGllbGRlZFRSQzIwQ29udHJhY3ROb3Rl",
            "U3BlbnQSGy5wcm90b2NvbC5OZlRSQzIwUGFyYW1ldGVycxoZLnByb3RvY29s",
            "Lk51bGxpZmllclJlc3VsdCIAEkIKDUdldFJld2FyZEluZm8SFi5wcm90b2Nv",
            "bC5CeXRlc01lc3NhZ2UaFy5wcm90b2NvbC5OdW1iZXJNZXNzYWdlIgASRQoQ",
            "R2V0QnJva2VyYWdlSW5mbxIWLnByb3RvY29sLkJ5dGVzTWVzc2FnZRoXLnBy",
            "b3RvY29sLk51bWJlck1lc3NhZ2UiABJbChdUcmlnZ2VyQ29uc3RhbnRDb250",
            "cmFjdBIeLnByb3RvY29sLlRyaWdnZXJTbWFydENvbnRyYWN0Gh4ucHJvdG9j",
            "b2wuVHJhbnNhY3Rpb25FeHRlbnRpb24iABJYChxHZXRUcmFuc2FjdGlvbklu",
            "Zm9CeUJsb2NrTnVtEhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZRodLnByb3Rv",
            "Y29sLlRyYW5zYWN0aW9uSW5mb0xpc3QiABJFChJHZXRNYXJrZXRPcmRlckJ5",
            "SWQSFi5wcm90b2NvbC5CeXRlc01lc3NhZ2UaFS5wcm90b2NvbC5NYXJrZXRP",
            "cmRlciIAEk4KF0dldE1hcmtldE9yZGVyQnlBY2NvdW50EhYucHJvdG9jb2wu",
            "Qnl0ZXNNZXNzYWdlGhkucHJvdG9jb2wuTWFya2V0T3JkZXJMaXN0IgASTgoU",
            "R2V0TWFya2V0UHJpY2VCeVBhaXISGS5wcm90b2NvbC5NYXJrZXRPcmRlclBh",
            "aXIaGS5wcm90b2NvbC5NYXJrZXRQcmljZUxpc3QiABJSChhHZXRNYXJrZXRP",
            "cmRlckxpc3RCeVBhaXISGS5wcm90b2NvbC5NYXJrZXRPcmRlclBhaXIaGS5w",
            "cm90b2NvbC5NYXJrZXRPcmRlckxpc3QiABJMChFHZXRNYXJrZXRQYWlyTGlz",
            "dBIWLnByb3RvY29sLkVtcHR5TWVzc2FnZRodLnByb3RvY29sLk1hcmtldE9y",
            "ZGVyUGFpckxpc3QiABI/CgpHZXRCdXJuVHJ4EhYucHJvdG9jb2wuRW1wdHlN",
            "ZXNzYWdlGhcucHJvdG9jb2wuTnVtYmVyTWVzc2FnZSIAMq0ECg9XYWxsZXRF",
            "eHRlbnNpb24SsQEKF0dldFRyYW5zYWN0aW9uc0Zyb21UaGlzEhoucHJvdG9j",
            "b2wuQWNjb3VudFBhZ2luYXRlZBoZLnByb3RvY29sLlRyYW5zYWN0aW9uTGlz",
            "dCJfgtPkkwJZIigvd2FsbGV0ZXh0ZW5zaW9uL2dldHRyYW5zYWN0aW9uc2Zy",
            "b210aGlzOgEqWioSKC93YWxsZXRleHRlbnNpb24vZ2V0dHJhbnNhY3Rpb25z",
            "ZnJvbXRoaXMSXAoYR2V0VHJhbnNhY3Rpb25zRnJvbVRoaXMyEhoucHJvdG9j",
            "b2wuQWNjb3VudFBhZ2luYXRlZBoiLnByb3RvY29sLlRyYW5zYWN0aW9uTGlz",
            "dEV4dGVudGlvbiIAEqsBChVHZXRUcmFuc2FjdGlvbnNUb1RoaXMSGi5wcm90",
            "b2NvbC5BY2NvdW50UGFnaW5hdGVkGhkucHJvdG9jb2wuVHJhbnNhY3Rpb25M",
            "aXN0IluC0+STAlUiJi93YWxsZXRleHRlbnNpb24vZ2V0dHJhbnNhY3Rpb25z",
            "dG90aGlzOgEqWigSJi93YWxsZXRleHRlbnNpb24vZ2V0dHJhbnNhY3Rpb25z",
            "dG90aGlzEloKFkdldFRyYW5zYWN0aW9uc1RvVGhpczISGi5wcm90b2NvbC5B",
            "Y2NvdW50UGFnaW5hdGVkGiIucHJvdG9jb2wuVHJhbnNhY3Rpb25MaXN0RXh0",
            "ZW50aW9uIgAymQIKCERhdGFiYXNlEkcKEWdldEJsb2NrUmVmZXJlbmNlEhYu",
            "cHJvdG9jb2wuRW1wdHlNZXNzYWdlGhgucHJvdG9jb2wuQmxvY2tSZWZlcmVu",
            "Y2UiABJNChRHZXREeW5hbWljUHJvcGVydGllcxIWLnByb3RvY29sLkVtcHR5",
            "TWVzc2FnZRobLnByb3RvY29sLkR5bmFtaWNQcm9wZXJ0aWVzIgASOAoLR2V0",
            "Tm93QmxvY2sSFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaDy5wcm90b2NvbC5C",
            "bG9jayIAEjsKDUdldEJsb2NrQnlOdW0SFy5wcm90b2NvbC5OdW1iZXJNZXNz",
            "YWdlGg8ucHJvdG9jb2wuQmxvY2siADKDAQoHTW9uaXRvchJ4CgxHZXRTdGF0",
            "c0luZm8SFi5wcm90b2NvbC5FbXB0eU1lc3NhZ2UaFS5wcm90b2NvbC5NZXRy",
            "aWNzSW5mbyI5gtPkkwIzIhUvbW9uaXRvci9nZXRzdGF0c2luZm86ASpaFxIV",
            "L21vbml0b3IvZ2V0c3RhdHNpbmZvMgkKB05ldHdvcmtCVQoMb3JnLnRyb24u",
            "YXBpQgdHcnBjQVBJWihnaXRodWIuY29tL3Ryb25wcm90b2NvbC9ncnBjLWdh",
            "dGV3YXkvYXBpqgIRVHJvbi5OZXQuUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tron.Net.Protocol.TronReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Tron.Net.Protocol.AssetIssueContractReflection.Descriptor, global::Tron.Net.Protocol.AccountContractReflection.Descriptor, global::Tron.Net.Protocol.WitnessContractReflection.Descriptor, global::Tron.Net.Protocol.BalanceContractReflection.Descriptor, global::Tron.Net.Protocol.ProposalContractReflection.Descriptor, global::Tron.Net.Protocol.StorageContractReflection.Descriptor, global::Tron.Net.Protocol.ExchangeContractReflection.Descriptor, global::Tron.Net.Protocol.MarketContractReflection.Descriptor, global::Tron.Net.Protocol.SmartContractReflection.Descriptor, global::Tron.Net.Protocol.ShieldContractReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.Return), global::Tron.Net.Protocol.Return.Parser, new[]{ "Result", "Code", "Message" }, null, new[]{ typeof(global::Tron.Net.Protocol.Return.Types.response_code) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BlockReference), global::Tron.Net.Protocol.BlockReference.Parser, new[]{ "BlockNum", "BlockHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.WitnessList), global::Tron.Net.Protocol.WitnessList.Parser, new[]{ "Witnesses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ProposalList), global::Tron.Net.Protocol.ProposalList.Parser, new[]{ "Proposals" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ExchangeList), global::Tron.Net.Protocol.ExchangeList.Parser, new[]{ "Exchanges" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AssetIssueList), global::Tron.Net.Protocol.AssetIssueList.Parser, new[]{ "AssetIssue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BlockList), global::Tron.Net.Protocol.BlockList.Parser, new[]{ "Block" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionList), global::Tron.Net.Protocol.TransactionList.Parser, new[]{ "Transaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionIdList), global::Tron.Net.Protocol.TransactionIdList.Parser, new[]{ "TxId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.DelegatedResourceMessage), global::Tron.Net.Protocol.DelegatedResourceMessage.Parser, new[]{ "FromAddress", "ToAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.DelegatedResourceList), global::Tron.Net.Protocol.DelegatedResourceList.Parser, new[]{ "DelegatedResource" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.NodeList), global::Tron.Net.Protocol.NodeList.Parser, new[]{ "Nodes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.Node), global::Tron.Net.Protocol.Node.Parser, new[]{ "Address" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.Address), global::Tron.Net.Protocol.Address.Parser, new[]{ "Host", "Port" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.EmptyMessage), global::Tron.Net.Protocol.EmptyMessage.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.NumberMessage), global::Tron.Net.Protocol.NumberMessage.Parser, new[]{ "Num" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BytesMessage), global::Tron.Net.Protocol.BytesMessage.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TimeMessage), global::Tron.Net.Protocol.TimeMessage.Parser, new[]{ "BeginInMilliseconds", "EndInMilliseconds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BlockLimit), global::Tron.Net.Protocol.BlockLimit.Parser, new[]{ "StartNum", "EndNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionLimit), global::Tron.Net.Protocol.TransactionLimit.Parser, new[]{ "TransactionId", "LimitNum" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountPaginated), global::Tron.Net.Protocol.AccountPaginated.Parser, new[]{ "Account", "Offset", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TimePaginatedMessage), global::Tron.Net.Protocol.TimePaginatedMessage.Parser, new[]{ "TimeMessage", "Offset", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountNetMessage), global::Tron.Net.Protocol.AccountNetMessage.Parser, new[]{ "FreeNetUsed", "FreeNetLimit", "NetUsed", "NetLimit", "AssetNetUsed", "AssetNetLimit", "TotalNetLimit", "TotalNetWeight" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AccountResourceMessage), global::Tron.Net.Protocol.AccountResourceMessage.Parser, new[]{ "FreeNetUsed", "FreeNetLimit", "NetUsed", "NetLimit", "AssetNetUsed", "AssetNetLimit", "TotalNetLimit", "TotalNetWeight", "TotalTronPowerWeight", "TronPowerUsed", "TronPowerLimit", "EnergyUsed", "EnergyLimit", "TotalEnergyLimit", "TotalEnergyWeight", "StorageUsed", "StorageLimit" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.PaginatedMessage), global::Tron.Net.Protocol.PaginatedMessage.Parser, new[]{ "Offset", "Limit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.EasyTransferMessage), global::Tron.Net.Protocol.EasyTransferMessage.Parser, new[]{ "PassPhrase", "ToAddress", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.EasyTransferAssetMessage), global::Tron.Net.Protocol.EasyTransferAssetMessage.Parser, new[]{ "PassPhrase", "ToAddress", "AssetId", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.EasyTransferByPrivateMessage), global::Tron.Net.Protocol.EasyTransferByPrivateMessage.Parser, new[]{ "PrivateKey", "ToAddress", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.EasyTransferAssetByPrivateMessage), global::Tron.Net.Protocol.EasyTransferAssetByPrivateMessage.Parser, new[]{ "PrivateKey", "ToAddress", "AssetId", "Amount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.EasyTransferResponse), global::Tron.Net.Protocol.EasyTransferResponse.Parser, new[]{ "Transaction", "Result", "Txid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.AddressPrKeyPairMessage), global::Tron.Net.Protocol.AddressPrKeyPairMessage.Parser, new[]{ "Address", "PrivateKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionExtention), global::Tron.Net.Protocol.TransactionExtention.Parser, new[]{ "Transaction", "Txid", "ConstantResult", "Result", "EnergyUsed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BlockExtention), global::Tron.Net.Protocol.BlockExtention.Parser, new[]{ "Transactions", "BlockHeader", "Blockid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BlockListExtention), global::Tron.Net.Protocol.BlockListExtention.Parser, new[]{ "Block" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionListExtention), global::Tron.Net.Protocol.TransactionListExtention.Parser, new[]{ "Transaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.BlockIncrementalMerkleTree), global::Tron.Net.Protocol.BlockIncrementalMerkleTree.Parser, new[]{ "Number", "MerkleTree" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionSignWeight), global::Tron.Net.Protocol.TransactionSignWeight.Parser, new[]{ "Permission", "ApprovedList", "CurrentWeight", "Result", "Transaction" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionSignWeight.Types.Result), global::Tron.Net.Protocol.TransactionSignWeight.Types.Result.Parser, new[]{ "Code", "Message" }, null, new[]{ typeof(global::Tron.Net.Protocol.TransactionSignWeight.Types.Result.Types.response_code) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionApprovedList), global::Tron.Net.Protocol.TransactionApprovedList.Parser, new[]{ "ApprovedList", "Result", "Transaction" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionApprovedList.Types.Result), global::Tron.Net.Protocol.TransactionApprovedList.Types.Result.Parser, new[]{ "Code", "Message" }, null, new[]{ typeof(global::Tron.Net.Protocol.TransactionApprovedList.Types.Result.Types.response_code) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.IvkDecryptParameters), global::Tron.Net.Protocol.IvkDecryptParameters.Parser, new[]{ "StartBlockIndex", "EndBlockIndex", "Ivk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.IvkDecryptAndMarkParameters), global::Tron.Net.Protocol.IvkDecryptAndMarkParameters.Parser, new[]{ "StartBlockIndex", "EndBlockIndex", "Ivk", "Ak", "Nk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.OvkDecryptParameters), global::Tron.Net.Protocol.OvkDecryptParameters.Parser, new[]{ "StartBlockIndex", "EndBlockIndex", "Ovk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.DecryptNotes), global::Tron.Net.Protocol.DecryptNotes.Parser, new[]{ "NoteTxs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.DecryptNotes.Types.NoteTx), global::Tron.Net.Protocol.DecryptNotes.Types.NoteTx.Parser, new[]{ "Note", "Txid", "Index" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.DecryptNotesMarked), global::Tron.Net.Protocol.DecryptNotesMarked.Parser, new[]{ "NoteTxs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.DecryptNotesMarked.Types.NoteTx), global::Tron.Net.Protocol.DecryptNotesMarked.Types.NoteTx.Parser, new[]{ "Note", "Txid", "Index", "IsSpend" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.Note), global::Tron.Net.Protocol.Note.Parser, new[]{ "Value", "PaymentAddress", "Rcm", "Memo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.SpendNote), global::Tron.Net.Protocol.SpendNote.Parser, new[]{ "Note", "Alpha", "Voucher", "Path" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ReceiveNote), global::Tron.Net.Protocol.ReceiveNote.Parser, new[]{ "Note" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.PrivateParameters), global::Tron.Net.Protocol.PrivateParameters.Parser, new[]{ "TransparentFromAddress", "Ask", "Nsk", "Ovk", "FromAmount", "ShieldedSpends", "ShieldedReceives", "TransparentToAddress", "ToAmount", "Timeout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.PrivateParametersWithoutAsk), global::Tron.Net.Protocol.PrivateParametersWithoutAsk.Parser, new[]{ "TransparentFromAddress", "Ak", "Nsk", "Ovk", "FromAmount", "ShieldedSpends", "ShieldedReceives", "TransparentToAddress", "ToAmount", "Timeout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.SpendAuthSigParameters), global::Tron.Net.Protocol.SpendAuthSigParameters.Parser, new[]{ "Ask", "TxHash", "Alpha" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.NfParameters), global::Tron.Net.Protocol.NfParameters.Parser, new[]{ "Note", "Voucher", "Ak", "Nk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ExpandedSpendingKeyMessage), global::Tron.Net.Protocol.ExpandedSpendingKeyMessage.Parser, new[]{ "Ask", "Nsk", "Ovk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ViewingKeyMessage), global::Tron.Net.Protocol.ViewingKeyMessage.Parser, new[]{ "Ak", "Nk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.IncomingViewingKeyMessage), global::Tron.Net.Protocol.IncomingViewingKeyMessage.Parser, new[]{ "Ivk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.DiversifierMessage), global::Tron.Net.Protocol.DiversifierMessage.Parser, new[]{ "D" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.IncomingViewingKeyDiversifierMessage), global::Tron.Net.Protocol.IncomingViewingKeyDiversifierMessage.Parser, new[]{ "Ivk", "D" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.PaymentAddressMessage), global::Tron.Net.Protocol.PaymentAddressMessage.Parser, new[]{ "D", "PkD", "PaymentAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ShieldedAddressInfo), global::Tron.Net.Protocol.ShieldedAddressInfo.Parser, new[]{ "Sk", "Ask", "Nsk", "Ovk", "Ak", "Nk", "Ivk", "D", "PkD", "PaymentAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.NoteParameters), global::Tron.Net.Protocol.NoteParameters.Parser, new[]{ "Ak", "Nk", "Note", "Txid", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.SpendResult), global::Tron.Net.Protocol.SpendResult.Parser, new[]{ "Result", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.TransactionInfoList), global::Tron.Net.Protocol.TransactionInfoList.Parser, new[]{ "TransactionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.SpendNoteTRC20), global::Tron.Net.Protocol.SpendNoteTRC20.Parser, new[]{ "Note", "Alpha", "Root", "Path", "Pos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.PrivateShieldedTRC20Parameters), global::Tron.Net.Protocol.PrivateShieldedTRC20Parameters.Parser, new[]{ "Ask", "Nsk", "Ovk", "FromAmount", "ShieldedSpends", "ShieldedReceives", "TransparentToAddress", "ToAmount", "ShieldedTRC20ContractAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.PrivateShieldedTRC20ParametersWithoutAsk), global::Tron.Net.Protocol.PrivateShieldedTRC20ParametersWithoutAsk.Parser, new[]{ "Ak", "Nsk", "Ovk", "FromAmount", "ShieldedSpends", "ShieldedReceives", "TransparentToAddress", "ToAmount", "ShieldedTRC20ContractAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ShieldedTRC20Parameters), global::Tron.Net.Protocol.ShieldedTRC20Parameters.Parser, new[]{ "SpendDescription", "ReceiveDescription", "BindingSignature", "MessageHash", "TriggerContractInput", "ParameterType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.IvkDecryptTRC20Parameters), global::Tron.Net.Protocol.IvkDecryptTRC20Parameters.Parser, new[]{ "StartBlockIndex", "EndBlockIndex", "ShieldedTRC20ContractAddress", "Ivk", "Ak", "Nk", "Events" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.OvkDecryptTRC20Parameters), global::Tron.Net.Protocol.OvkDecryptTRC20Parameters.Parser, new[]{ "StartBlockIndex", "EndBlockIndex", "Ovk", "ShieldedTRC20ContractAddress", "Events" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.DecryptNotesTRC20), global::Tron.Net.Protocol.DecryptNotesTRC20.Parser, new[]{ "NoteTxs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.DecryptNotesTRC20.Types.NoteTx), global::Tron.Net.Protocol.DecryptNotesTRC20.Types.NoteTx.Parser, new[]{ "Note", "Position", "IsSpent", "Txid", "Index", "ToAmount", "TransparentToAddress" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.NfTRC20Parameters), global::Tron.Net.Protocol.NfTRC20Parameters.Parser, new[]{ "Note", "Ak", "Nk", "Position", "ShieldedTRC20ContractAddress" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.NullifierResult), global::Tron.Net.Protocol.NullifierResult.Parser, new[]{ "IsSpent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tron.Net.Protocol.ShieldedTRC20TriggerContractParameters), global::Tron.Net.Protocol.ShieldedTRC20TriggerContractParameters.Parser, new[]{ "ShieldedTRC20Parameters", "SpendAuthoritySignature", "Amount", "TransparentToAddress" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Return : pb::IMessage<Return> {
    private static readonly pb::MessageParser<Return> _parser = new pb::MessageParser<Return>(() => new Return());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Return> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return(Return other) : this() {
      result_ = other.result_;
      code_ = other.code_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Return Clone() {
      return new Return(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private global::Tron.Net.Protocol.Return.Types.response_code code_ = global::Tron.Net.Protocol.Return.Types.response_code.Success;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Return.Types.response_code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private pb::ByteString message_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Return);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Return other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (Code != global::Tron.Net.Protocol.Return.Types.response_code.Success) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (Code != global::Tron.Net.Protocol.Return.Types.response_code.Success) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (Code != global::Tron.Net.Protocol.Return.Types.response_code.Success) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Return other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      if (other.Code != global::Tron.Net.Protocol.Return.Types.response_code.Success) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
          case 16: {
            Code = (global::Tron.Net.Protocol.Return.Types.response_code) input.ReadEnum();
            break;
          }
          case 26: {
            Message = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Return message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum response_code {
        [pbr::OriginalName("SUCCESS")] Success = 0,
        /// <summary>
        /// error in signature
        /// </summary>
        [pbr::OriginalName("SIGERROR")] Sigerror = 1,
        [pbr::OriginalName("CONTRACT_VALIDATE_ERROR")] ContractValidateError = 2,
        [pbr::OriginalName("CONTRACT_EXE_ERROR")] ContractExeError = 3,
        [pbr::OriginalName("BANDWITH_ERROR")] BandwithError = 4,
        [pbr::OriginalName("DUP_TRANSACTION_ERROR")] DupTransactionError = 5,
        [pbr::OriginalName("TAPOS_ERROR")] TaposError = 6,
        [pbr::OriginalName("TOO_BIG_TRANSACTION_ERROR")] TooBigTransactionError = 7,
        [pbr::OriginalName("TRANSACTION_EXPIRATION_ERROR")] TransactionExpirationError = 8,
        [pbr::OriginalName("SERVER_BUSY")] ServerBusy = 9,
        [pbr::OriginalName("NO_CONNECTION")] NoConnection = 10,
        [pbr::OriginalName("NOT_ENOUGH_EFFECTIVE_CONNECTION")] NotEnoughEffectiveConnection = 11,
        [pbr::OriginalName("OTHER_ERROR")] OtherError = 20,
      }

    }
    #endregion

  }

  public sealed partial class BlockReference : pb::IMessage<BlockReference> {
    private static readonly pb::MessageParser<BlockReference> _parser = new pb::MessageParser<BlockReference>(() => new BlockReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference(BlockReference other) : this() {
      blockNum_ = other.blockNum_;
      blockHash_ = other.blockHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockReference Clone() {
      return new BlockReference(this);
    }

    /// <summary>Field number for the "block_num" field.</summary>
    public const int BlockNumFieldNumber = 1;
    private long blockNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockNum {
      get { return blockNum_; }
      set {
        blockNum_ = value;
      }
    }

    /// <summary>Field number for the "block_hash" field.</summary>
    public const int BlockHashFieldNumber = 2;
    private pb::ByteString blockHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BlockHash {
      get { return blockHash_; }
      set {
        blockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlockNum != other.BlockNum) return false;
      if (BlockHash != other.BlockHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BlockNum != 0L) hash ^= BlockNum.GetHashCode();
      if (BlockHash.Length != 0) hash ^= BlockHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BlockNum != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BlockNum);
      }
      if (BlockHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BlockNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockNum);
      }
      if (BlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BlockHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockReference other) {
      if (other == null) {
        return;
      }
      if (other.BlockNum != 0L) {
        BlockNum = other.BlockNum;
      }
      if (other.BlockHash.Length != 0) {
        BlockHash = other.BlockHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlockNum = input.ReadInt64();
            break;
          }
          case 18: {
            BlockHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WitnessList : pb::IMessage<WitnessList> {
    private static readonly pb::MessageParser<WitnessList> _parser = new pb::MessageParser<WitnessList>(() => new WitnessList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WitnessList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList(WitnessList other) : this() {
      witnesses_ = other.witnesses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WitnessList Clone() {
      return new WitnessList(this);
    }

    /// <summary>Field number for the "witnesses" field.</summary>
    public const int WitnessesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Witness> _repeated_witnesses_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.Witness.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Witness> witnesses_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Witness>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Witness> Witnesses {
      get { return witnesses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WitnessList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WitnessList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!witnesses_.Equals(other.witnesses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= witnesses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      witnesses_.WriteTo(output, _repeated_witnesses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += witnesses_.CalculateSize(_repeated_witnesses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WitnessList other) {
      if (other == null) {
        return;
      }
      witnesses_.Add(other.witnesses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            witnesses_.AddEntriesFrom(input, _repeated_witnesses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProposalList : pb::IMessage<ProposalList> {
    private static readonly pb::MessageParser<ProposalList> _parser = new pb::MessageParser<ProposalList>(() => new ProposalList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProposalList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalList(ProposalList other) : this() {
      proposals_ = other.proposals_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProposalList Clone() {
      return new ProposalList(this);
    }

    /// <summary>Field number for the "proposals" field.</summary>
    public const int ProposalsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Proposal> _repeated_proposals_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.Proposal.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Proposal> proposals_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Proposal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Proposal> Proposals {
      get { return proposals_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProposalList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProposalList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!proposals_.Equals(other.proposals_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= proposals_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      proposals_.WriteTo(output, _repeated_proposals_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += proposals_.CalculateSize(_repeated_proposals_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProposalList other) {
      if (other == null) {
        return;
      }
      proposals_.Add(other.proposals_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            proposals_.AddEntriesFrom(input, _repeated_proposals_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExchangeList : pb::IMessage<ExchangeList> {
    private static readonly pb::MessageParser<ExchangeList> _parser = new pb::MessageParser<ExchangeList>(() => new ExchangeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExchangeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeList(ExchangeList other) : this() {
      exchanges_ = other.exchanges_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExchangeList Clone() {
      return new ExchangeList(this);
    }

    /// <summary>Field number for the "exchanges" field.</summary>
    public const int ExchangesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Exchange> _repeated_exchanges_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.Exchange.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Exchange> exchanges_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Exchange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Exchange> Exchanges {
      get { return exchanges_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExchangeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExchangeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!exchanges_.Equals(other.exchanges_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= exchanges_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      exchanges_.WriteTo(output, _repeated_exchanges_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += exchanges_.CalculateSize(_repeated_exchanges_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExchangeList other) {
      if (other == null) {
        return;
      }
      exchanges_.Add(other.exchanges_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            exchanges_.AddEntriesFrom(input, _repeated_exchanges_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssetIssueList : pb::IMessage<AssetIssueList> {
    private static readonly pb::MessageParser<AssetIssueList> _parser = new pb::MessageParser<AssetIssueList>(() => new AssetIssueList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssetIssueList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList(AssetIssueList other) : this() {
      assetIssue_ = other.assetIssue_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssetIssueList Clone() {
      return new AssetIssueList(this);
    }

    /// <summary>Field number for the "assetIssue" field.</summary>
    public const int AssetIssueFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.AssetIssueContract> _repeated_assetIssue_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.AssetIssueContract.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.AssetIssueContract> assetIssue_ = new pbc::RepeatedField<global::Tron.Net.Protocol.AssetIssueContract>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.AssetIssueContract> AssetIssue {
      get { return assetIssue_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssetIssueList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssetIssueList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!assetIssue_.Equals(other.assetIssue_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= assetIssue_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      assetIssue_.WriteTo(output, _repeated_assetIssue_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += assetIssue_.CalculateSize(_repeated_assetIssue_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssetIssueList other) {
      if (other == null) {
        return;
      }
      assetIssue_.Add(other.assetIssue_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            assetIssue_.AddEntriesFrom(input, _repeated_assetIssue_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockList : pb::IMessage<BlockList> {
    private static readonly pb::MessageParser<BlockList> _parser = new pb::MessageParser<BlockList>(() => new BlockList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList(BlockList other) : this() {
      block_ = other.block_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockList Clone() {
      return new BlockList(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Block> _repeated_block_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.Block.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Block> block_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Block>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Block> Block {
      get { return block_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!block_.Equals(other.block_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= block_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      block_.WriteTo(output, _repeated_block_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += block_.CalculateSize(_repeated_block_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockList other) {
      if (other == null) {
        return;
      }
      block_.Add(other.block_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            block_.AddEntriesFrom(input, _repeated_block_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionList : pb::IMessage<TransactionList> {
    private static readonly pb::MessageParser<TransactionList> _parser = new pb::MessageParser<TransactionList>(() => new TransactionList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList(TransactionList other) : this() {
      transaction_ = other.transaction_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionList Clone() {
      return new TransactionList(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Transaction> _repeated_transaction_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Transaction> transaction_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Transaction> Transaction {
      get { return transaction_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transaction_.Equals(other.transaction_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transaction_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transaction_.WriteTo(output, _repeated_transaction_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transaction_.CalculateSize(_repeated_transaction_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionList other) {
      if (other == null) {
        return;
      }
      transaction_.Add(other.transaction_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transaction_.AddEntriesFrom(input, _repeated_transaction_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionIdList : pb::IMessage<TransactionIdList> {
    private static readonly pb::MessageParser<TransactionIdList> _parser = new pb::MessageParser<TransactionIdList>(() => new TransactionIdList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionIdList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionIdList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionIdList(TransactionIdList other) : this() {
      txId_ = other.txId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionIdList Clone() {
      return new TransactionIdList(this);
    }

    /// <summary>Field number for the "txId" field.</summary>
    public const int TxIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_txId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> txId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TxId {
      get { return txId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionIdList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionIdList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!txId_.Equals(other.txId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= txId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      txId_.WriteTo(output, _repeated_txId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += txId_.CalculateSize(_repeated_txId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionIdList other) {
      if (other == null) {
        return;
      }
      txId_.Add(other.txId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            txId_.AddEntriesFrom(input, _repeated_txId_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegatedResourceMessage : pb::IMessage<DelegatedResourceMessage> {
    private static readonly pb::MessageParser<DelegatedResourceMessage> _parser = new pb::MessageParser<DelegatedResourceMessage>(() => new DelegatedResourceMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegatedResourceMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceMessage(DelegatedResourceMessage other) : this() {
      fromAddress_ = other.fromAddress_;
      toAddress_ = other.toAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceMessage Clone() {
      return new DelegatedResourceMessage(this);
    }

    /// <summary>Field number for the "fromAddress" field.</summary>
    public const int FromAddressFieldNumber = 1;
    private pb::ByteString fromAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString FromAddress {
      get { return fromAddress_; }
      set {
        fromAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegatedResourceMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegatedResourceMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromAddress != other.FromAddress) return false;
      if (ToAddress != other.ToAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromAddress.Length != 0) hash ^= FromAddress.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(FromAddress);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(FromAddress);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegatedResourceMessage other) {
      if (other == null) {
        return;
      }
      if (other.FromAddress.Length != 0) {
        FromAddress = other.FromAddress;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FromAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DelegatedResourceList : pb::IMessage<DelegatedResourceList> {
    private static readonly pb::MessageParser<DelegatedResourceList> _parser = new pb::MessageParser<DelegatedResourceList>(() => new DelegatedResourceList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DelegatedResourceList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceList(DelegatedResourceList other) : this() {
      delegatedResource_ = other.delegatedResource_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DelegatedResourceList Clone() {
      return new DelegatedResourceList(this);
    }

    /// <summary>Field number for the "delegatedResource" field.</summary>
    public const int DelegatedResourceFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.DelegatedResource> _repeated_delegatedResource_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.DelegatedResource.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.DelegatedResource> delegatedResource_ = new pbc::RepeatedField<global::Tron.Net.Protocol.DelegatedResource>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.DelegatedResource> DelegatedResource {
      get { return delegatedResource_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DelegatedResourceList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DelegatedResourceList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!delegatedResource_.Equals(other.delegatedResource_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= delegatedResource_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      delegatedResource_.WriteTo(output, _repeated_delegatedResource_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += delegatedResource_.CalculateSize(_repeated_delegatedResource_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DelegatedResourceList other) {
      if (other == null) {
        return;
      }
      delegatedResource_.Add(other.delegatedResource_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            delegatedResource_.AddEntriesFrom(input, _repeated_delegatedResource_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node list
  /// </summary>
  public sealed partial class NodeList : pb::IMessage<NodeList> {
    private static readonly pb::MessageParser<NodeList> _parser = new pb::MessageParser<NodeList>(() => new NodeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NodeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList(NodeList other) : this() {
      nodes_ = other.nodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NodeList Clone() {
      return new NodeList(this);
    }

    /// <summary>Field number for the "nodes" field.</summary>
    public const int NodesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.Node> _repeated_nodes_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.Node.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.Node> nodes_ = new pbc::RepeatedField<global::Tron.Net.Protocol.Node>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.Node> Nodes {
      get { return nodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NodeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NodeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nodes_.Equals(other.nodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nodes_.WriteTo(output, _repeated_nodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nodes_.CalculateSize(_repeated_nodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NodeList other) {
      if (other == null) {
        return;
      }
      nodes_.Add(other.nodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            nodes_.AddEntriesFrom(input, _repeated_nodes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node
  /// </summary>
  public sealed partial class Node : pb::IMessage<Node> {
    private static readonly pb::MessageParser<Node> _parser = new pb::MessageParser<Node>(() => new Node());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Node> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node(Node other) : this() {
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Node Clone() {
      return new Node(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private global::Tron.Net.Protocol.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Node);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Node other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (address_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Node other) {
      if (other == null) {
        return;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          Address = new global::Tron.Net.Protocol.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (address_ == null) {
              Address = new global::Tron.Net.Protocol.Address();
            }
            input.ReadMessage(Address);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Gossip node address
  /// </summary>
  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      host_ = other.host_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private pb::ByteString host_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadBytes();
            break;
          }
          case 16: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmptyMessage : pb::IMessage<EmptyMessage> {
    private static readonly pb::MessageParser<EmptyMessage> _parser = new pb::MessageParser<EmptyMessage>(() => new EmptyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage(EmptyMessage other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyMessage Clone() {
      return new EmptyMessage(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyMessage other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class NumberMessage : pb::IMessage<NumberMessage> {
    private static readonly pb::MessageParser<NumberMessage> _parser = new pb::MessageParser<NumberMessage>(() => new NumberMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NumberMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage(NumberMessage other) : this() {
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NumberMessage Clone() {
      return new NumberMessage(this);
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 1;
    private long num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NumberMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NumberMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num != 0L) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Num != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NumberMessage other) {
      if (other == null) {
        return;
      }
      if (other.Num != 0L) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Num = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BytesMessage : pb::IMessage<BytesMessage> {
    private static readonly pb::MessageParser<BytesMessage> _parser = new pb::MessageParser<BytesMessage>(() => new BytesMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BytesMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage(BytesMessage other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BytesMessage Clone() {
      return new BytesMessage(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BytesMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BytesMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BytesMessage other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimeMessage : pb::IMessage<TimeMessage> {
    private static readonly pb::MessageParser<TimeMessage> _parser = new pb::MessageParser<TimeMessage>(() => new TimeMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage(TimeMessage other) : this() {
      beginInMilliseconds_ = other.beginInMilliseconds_;
      endInMilliseconds_ = other.endInMilliseconds_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimeMessage Clone() {
      return new TimeMessage(this);
    }

    /// <summary>Field number for the "beginInMilliseconds" field.</summary>
    public const int BeginInMillisecondsFieldNumber = 1;
    private long beginInMilliseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BeginInMilliseconds {
      get { return beginInMilliseconds_; }
      set {
        beginInMilliseconds_ = value;
      }
    }

    /// <summary>Field number for the "endInMilliseconds" field.</summary>
    public const int EndInMillisecondsFieldNumber = 2;
    private long endInMilliseconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndInMilliseconds {
      get { return endInMilliseconds_; }
      set {
        endInMilliseconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BeginInMilliseconds != other.BeginInMilliseconds) return false;
      if (EndInMilliseconds != other.EndInMilliseconds) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BeginInMilliseconds != 0L) hash ^= BeginInMilliseconds.GetHashCode();
      if (EndInMilliseconds != 0L) hash ^= EndInMilliseconds.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BeginInMilliseconds != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BeginInMilliseconds);
      }
      if (EndInMilliseconds != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndInMilliseconds);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BeginInMilliseconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BeginInMilliseconds);
      }
      if (EndInMilliseconds != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndInMilliseconds);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimeMessage other) {
      if (other == null) {
        return;
      }
      if (other.BeginInMilliseconds != 0L) {
        BeginInMilliseconds = other.BeginInMilliseconds;
      }
      if (other.EndInMilliseconds != 0L) {
        EndInMilliseconds = other.EndInMilliseconds;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BeginInMilliseconds = input.ReadInt64();
            break;
          }
          case 16: {
            EndInMilliseconds = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockLimit : pb::IMessage<BlockLimit> {
    private static readonly pb::MessageParser<BlockLimit> _parser = new pb::MessageParser<BlockLimit>(() => new BlockLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit(BlockLimit other) : this() {
      startNum_ = other.startNum_;
      endNum_ = other.endNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockLimit Clone() {
      return new BlockLimit(this);
    }

    /// <summary>Field number for the "startNum" field.</summary>
    public const int StartNumFieldNumber = 1;
    private long startNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartNum {
      get { return startNum_; }
      set {
        startNum_ = value;
      }
    }

    /// <summary>Field number for the "endNum" field.</summary>
    public const int EndNumFieldNumber = 2;
    private long endNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndNum {
      get { return endNum_; }
      set {
        endNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartNum != other.StartNum) return false;
      if (EndNum != other.EndNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartNum != 0L) hash ^= StartNum.GetHashCode();
      if (EndNum != 0L) hash ^= EndNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartNum != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartNum);
      }
      if (EndNum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartNum);
      }
      if (EndNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockLimit other) {
      if (other == null) {
        return;
      }
      if (other.StartNum != 0L) {
        StartNum = other.StartNum;
      }
      if (other.EndNum != 0L) {
        EndNum = other.EndNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartNum = input.ReadInt64();
            break;
          }
          case 16: {
            EndNum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionLimit : pb::IMessage<TransactionLimit> {
    private static readonly pb::MessageParser<TransactionLimit> _parser = new pb::MessageParser<TransactionLimit>(() => new TransactionLimit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionLimit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit(TransactionLimit other) : this() {
      transactionId_ = other.transactionId_;
      limitNum_ = other.limitNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionLimit Clone() {
      return new TransactionLimit(this);
    }

    /// <summary>Field number for the "transactionId" field.</summary>
    public const int TransactionIdFieldNumber = 1;
    private pb::ByteString transactionId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "limitNum" field.</summary>
    public const int LimitNumFieldNumber = 2;
    private long limitNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LimitNum {
      get { return limitNum_; }
      set {
        limitNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionLimit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionLimit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionId != other.TransactionId) return false;
      if (LimitNum != other.LimitNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionId.Length != 0) hash ^= TransactionId.GetHashCode();
      if (LimitNum != 0L) hash ^= LimitNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TransactionId);
      }
      if (LimitNum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LimitNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransactionId);
      }
      if (LimitNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LimitNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionLimit other) {
      if (other == null) {
        return;
      }
      if (other.TransactionId.Length != 0) {
        TransactionId = other.TransactionId;
      }
      if (other.LimitNum != 0L) {
        LimitNum = other.LimitNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionId = input.ReadBytes();
            break;
          }
          case 16: {
            LimitNum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountPaginated : pb::IMessage<AccountPaginated> {
    private static readonly pb::MessageParser<AccountPaginated> _parser = new pb::MessageParser<AccountPaginated>(() => new AccountPaginated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountPaginated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated(AccountPaginated other) : this() {
      account_ = other.account_ != null ? other.account_.Clone() : null;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountPaginated Clone() {
      return new AccountPaginated(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::Tron.Net.Protocol.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountPaginated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountPaginated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountPaginated other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::Tron.Net.Protocol.Account();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              Account = new global::Tron.Net.Protocol.Account();
            }
            input.ReadMessage(Account);
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TimePaginatedMessage : pb::IMessage<TimePaginatedMessage> {
    private static readonly pb::MessageParser<TimePaginatedMessage> _parser = new pb::MessageParser<TimePaginatedMessage>(() => new TimePaginatedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TimePaginatedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage(TimePaginatedMessage other) : this() {
      timeMessage_ = other.timeMessage_ != null ? other.timeMessage_.Clone() : null;
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TimePaginatedMessage Clone() {
      return new TimePaginatedMessage(this);
    }

    /// <summary>Field number for the "timeMessage" field.</summary>
    public const int TimeMessageFieldNumber = 1;
    private global::Tron.Net.Protocol.TimeMessage timeMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.TimeMessage TimeMessage {
      get { return timeMessage_; }
      set {
        timeMessage_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 2;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 3;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TimePaginatedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TimePaginatedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeMessage, other.TimeMessage)) return false;
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeMessage_ != null) hash ^= TimeMessage.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeMessage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeMessage);
      }
      if (Offset != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeMessage);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TimePaginatedMessage other) {
      if (other == null) {
        return;
      }
      if (other.timeMessage_ != null) {
        if (timeMessage_ == null) {
          TimeMessage = new global::Tron.Net.Protocol.TimeMessage();
        }
        TimeMessage.MergeFrom(other.TimeMessage);
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timeMessage_ == null) {
              TimeMessage = new global::Tron.Net.Protocol.TimeMessage();
            }
            input.ReadMessage(TimeMessage);
            break;
          }
          case 16: {
            Offset = input.ReadInt64();
            break;
          }
          case 24: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///deprecated
  /// </summary>
  public sealed partial class AccountNetMessage : pb::IMessage<AccountNetMessage> {
    private static readonly pb::MessageParser<AccountNetMessage> _parser = new pb::MessageParser<AccountNetMessage>(() => new AccountNetMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountNetMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage(AccountNetMessage other) : this() {
      freeNetUsed_ = other.freeNetUsed_;
      freeNetLimit_ = other.freeNetLimit_;
      netUsed_ = other.netUsed_;
      netLimit_ = other.netLimit_;
      assetNetUsed_ = other.assetNetUsed_.Clone();
      assetNetLimit_ = other.assetNetLimit_.Clone();
      totalNetLimit_ = other.totalNetLimit_;
      totalNetWeight_ = other.totalNetWeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountNetMessage Clone() {
      return new AccountNetMessage(this);
    }

    /// <summary>Field number for the "freeNetUsed" field.</summary>
    public const int FreeNetUsedFieldNumber = 1;
    private long freeNetUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetUsed {
      get { return freeNetUsed_; }
      set {
        freeNetUsed_ = value;
      }
    }

    /// <summary>Field number for the "freeNetLimit" field.</summary>
    public const int FreeNetLimitFieldNumber = 2;
    private long freeNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetLimit {
      get { return freeNetLimit_; }
      set {
        freeNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "NetUsed" field.</summary>
    public const int NetUsedFieldNumber = 3;
    private long netUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetUsed {
      get { return netUsed_; }
      set {
        netUsed_ = value;
      }
    }

    /// <summary>Field number for the "NetLimit" field.</summary>
    public const int NetLimitFieldNumber = 4;
    private long netLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetLimit {
      get { return netLimit_; }
      set {
        netLimit_ = value;
      }
    }

    /// <summary>Field number for the "assetNetUsed" field.</summary>
    public const int AssetNetUsedFieldNumber = 5;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetUsed_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 42);
    private readonly pbc::MapField<string, long> assetNetUsed_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetUsed {
      get { return assetNetUsed_; }
    }

    /// <summary>Field number for the "assetNetLimit" field.</summary>
    public const int AssetNetLimitFieldNumber = 6;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetLimit_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 50);
    private readonly pbc::MapField<string, long> assetNetLimit_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetLimit {
      get { return assetNetLimit_; }
    }

    /// <summary>Field number for the "TotalNetLimit" field.</summary>
    public const int TotalNetLimitFieldNumber = 7;
    private long totalNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetLimit {
      get { return totalNetLimit_; }
      set {
        totalNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalNetWeight" field.</summary>
    public const int TotalNetWeightFieldNumber = 8;
    private long totalNetWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetWeight {
      get { return totalNetWeight_; }
      set {
        totalNetWeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountNetMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountNetMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FreeNetUsed != other.FreeNetUsed) return false;
      if (FreeNetLimit != other.FreeNetLimit) return false;
      if (NetUsed != other.NetUsed) return false;
      if (NetLimit != other.NetLimit) return false;
      if (!AssetNetUsed.Equals(other.AssetNetUsed)) return false;
      if (!AssetNetLimit.Equals(other.AssetNetLimit)) return false;
      if (TotalNetLimit != other.TotalNetLimit) return false;
      if (TotalNetWeight != other.TotalNetWeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FreeNetUsed != 0L) hash ^= FreeNetUsed.GetHashCode();
      if (FreeNetLimit != 0L) hash ^= FreeNetLimit.GetHashCode();
      if (NetUsed != 0L) hash ^= NetUsed.GetHashCode();
      if (NetLimit != 0L) hash ^= NetLimit.GetHashCode();
      hash ^= AssetNetUsed.GetHashCode();
      hash ^= AssetNetLimit.GetHashCode();
      if (TotalNetLimit != 0L) hash ^= TotalNetLimit.GetHashCode();
      if (TotalNetWeight != 0L) hash ^= TotalNetWeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FreeNetUsed != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NetUsed);
      }
      if (NetLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NetLimit);
      }
      assetNetUsed_.WriteTo(output, _map_assetNetUsed_codec);
      assetNetLimit_.WriteTo(output, _map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalNetWeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FreeNetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetUsed);
      }
      if (NetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetLimit);
      }
      size += assetNetUsed_.CalculateSize(_map_assetNetUsed_codec);
      size += assetNetLimit_.CalculateSize(_map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetWeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountNetMessage other) {
      if (other == null) {
        return;
      }
      if (other.FreeNetUsed != 0L) {
        FreeNetUsed = other.FreeNetUsed;
      }
      if (other.FreeNetLimit != 0L) {
        FreeNetLimit = other.FreeNetLimit;
      }
      if (other.NetUsed != 0L) {
        NetUsed = other.NetUsed;
      }
      if (other.NetLimit != 0L) {
        NetLimit = other.NetLimit;
      }
      assetNetUsed_.Add(other.assetNetUsed_);
      assetNetLimit_.Add(other.assetNetLimit_);
      if (other.TotalNetLimit != 0L) {
        TotalNetLimit = other.TotalNetLimit;
      }
      if (other.TotalNetWeight != 0L) {
        TotalNetWeight = other.TotalNetWeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FreeNetUsed = input.ReadInt64();
            break;
          }
          case 16: {
            FreeNetLimit = input.ReadInt64();
            break;
          }
          case 24: {
            NetUsed = input.ReadInt64();
            break;
          }
          case 32: {
            NetLimit = input.ReadInt64();
            break;
          }
          case 42: {
            assetNetUsed_.AddEntriesFrom(input, _map_assetNetUsed_codec);
            break;
          }
          case 50: {
            assetNetLimit_.AddEntriesFrom(input, _map_assetNetLimit_codec);
            break;
          }
          case 56: {
            TotalNetLimit = input.ReadInt64();
            break;
          }
          case 64: {
            TotalNetWeight = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccountResourceMessage : pb::IMessage<AccountResourceMessage> {
    private static readonly pb::MessageParser<AccountResourceMessage> _parser = new pb::MessageParser<AccountResourceMessage>(() => new AccountResourceMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountResourceMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResourceMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResourceMessage(AccountResourceMessage other) : this() {
      freeNetUsed_ = other.freeNetUsed_;
      freeNetLimit_ = other.freeNetLimit_;
      netUsed_ = other.netUsed_;
      netLimit_ = other.netLimit_;
      assetNetUsed_ = other.assetNetUsed_.Clone();
      assetNetLimit_ = other.assetNetLimit_.Clone();
      totalNetLimit_ = other.totalNetLimit_;
      totalNetWeight_ = other.totalNetWeight_;
      totalTronPowerWeight_ = other.totalTronPowerWeight_;
      tronPowerUsed_ = other.tronPowerUsed_;
      tronPowerLimit_ = other.tronPowerLimit_;
      energyUsed_ = other.energyUsed_;
      energyLimit_ = other.energyLimit_;
      totalEnergyLimit_ = other.totalEnergyLimit_;
      totalEnergyWeight_ = other.totalEnergyWeight_;
      storageUsed_ = other.storageUsed_;
      storageLimit_ = other.storageLimit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountResourceMessage Clone() {
      return new AccountResourceMessage(this);
    }

    /// <summary>Field number for the "freeNetUsed" field.</summary>
    public const int FreeNetUsedFieldNumber = 1;
    private long freeNetUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetUsed {
      get { return freeNetUsed_; }
      set {
        freeNetUsed_ = value;
      }
    }

    /// <summary>Field number for the "freeNetLimit" field.</summary>
    public const int FreeNetLimitFieldNumber = 2;
    private long freeNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetLimit {
      get { return freeNetLimit_; }
      set {
        freeNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "NetUsed" field.</summary>
    public const int NetUsedFieldNumber = 3;
    private long netUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetUsed {
      get { return netUsed_; }
      set {
        netUsed_ = value;
      }
    }

    /// <summary>Field number for the "NetLimit" field.</summary>
    public const int NetLimitFieldNumber = 4;
    private long netLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetLimit {
      get { return netLimit_; }
      set {
        netLimit_ = value;
      }
    }

    /// <summary>Field number for the "assetNetUsed" field.</summary>
    public const int AssetNetUsedFieldNumber = 5;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetUsed_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 42);
    private readonly pbc::MapField<string, long> assetNetUsed_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetUsed {
      get { return assetNetUsed_; }
    }

    /// <summary>Field number for the "assetNetLimit" field.</summary>
    public const int AssetNetLimitFieldNumber = 6;
    private static readonly pbc::MapField<string, long>.Codec _map_assetNetLimit_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt64(16, 0L), 50);
    private readonly pbc::MapField<string, long> assetNetLimit_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> AssetNetLimit {
      get { return assetNetLimit_; }
    }

    /// <summary>Field number for the "TotalNetLimit" field.</summary>
    public const int TotalNetLimitFieldNumber = 7;
    private long totalNetLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetLimit {
      get { return totalNetLimit_; }
      set {
        totalNetLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalNetWeight" field.</summary>
    public const int TotalNetWeightFieldNumber = 8;
    private long totalNetWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalNetWeight {
      get { return totalNetWeight_; }
      set {
        totalNetWeight_ = value;
      }
    }

    /// <summary>Field number for the "TotalTronPowerWeight" field.</summary>
    public const int TotalTronPowerWeightFieldNumber = 9;
    private long totalTronPowerWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalTronPowerWeight {
      get { return totalTronPowerWeight_; }
      set {
        totalTronPowerWeight_ = value;
      }
    }

    /// <summary>Field number for the "tronPowerUsed" field.</summary>
    public const int TronPowerUsedFieldNumber = 10;
    private long tronPowerUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TronPowerUsed {
      get { return tronPowerUsed_; }
      set {
        tronPowerUsed_ = value;
      }
    }

    /// <summary>Field number for the "tronPowerLimit" field.</summary>
    public const int TronPowerLimitFieldNumber = 11;
    private long tronPowerLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TronPowerLimit {
      get { return tronPowerLimit_; }
      set {
        tronPowerLimit_ = value;
      }
    }

    /// <summary>Field number for the "EnergyUsed" field.</summary>
    public const int EnergyUsedFieldNumber = 13;
    private long energyUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnergyUsed {
      get { return energyUsed_; }
      set {
        energyUsed_ = value;
      }
    }

    /// <summary>Field number for the "EnergyLimit" field.</summary>
    public const int EnergyLimitFieldNumber = 14;
    private long energyLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnergyLimit {
      get { return energyLimit_; }
      set {
        energyLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalEnergyLimit" field.</summary>
    public const int TotalEnergyLimitFieldNumber = 15;
    private long totalEnergyLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalEnergyLimit {
      get { return totalEnergyLimit_; }
      set {
        totalEnergyLimit_ = value;
      }
    }

    /// <summary>Field number for the "TotalEnergyWeight" field.</summary>
    public const int TotalEnergyWeightFieldNumber = 16;
    private long totalEnergyWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalEnergyWeight {
      get { return totalEnergyWeight_; }
      set {
        totalEnergyWeight_ = value;
      }
    }

    /// <summary>Field number for the "storageUsed" field.</summary>
    public const int StorageUsedFieldNumber = 21;
    private long storageUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StorageUsed {
      get { return storageUsed_; }
      set {
        storageUsed_ = value;
      }
    }

    /// <summary>Field number for the "storageLimit" field.</summary>
    public const int StorageLimitFieldNumber = 22;
    private long storageLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StorageLimit {
      get { return storageLimit_; }
      set {
        storageLimit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountResourceMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountResourceMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FreeNetUsed != other.FreeNetUsed) return false;
      if (FreeNetLimit != other.FreeNetLimit) return false;
      if (NetUsed != other.NetUsed) return false;
      if (NetLimit != other.NetLimit) return false;
      if (!AssetNetUsed.Equals(other.AssetNetUsed)) return false;
      if (!AssetNetLimit.Equals(other.AssetNetLimit)) return false;
      if (TotalNetLimit != other.TotalNetLimit) return false;
      if (TotalNetWeight != other.TotalNetWeight) return false;
      if (TotalTronPowerWeight != other.TotalTronPowerWeight) return false;
      if (TronPowerUsed != other.TronPowerUsed) return false;
      if (TronPowerLimit != other.TronPowerLimit) return false;
      if (EnergyUsed != other.EnergyUsed) return false;
      if (EnergyLimit != other.EnergyLimit) return false;
      if (TotalEnergyLimit != other.TotalEnergyLimit) return false;
      if (TotalEnergyWeight != other.TotalEnergyWeight) return false;
      if (StorageUsed != other.StorageUsed) return false;
      if (StorageLimit != other.StorageLimit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FreeNetUsed != 0L) hash ^= FreeNetUsed.GetHashCode();
      if (FreeNetLimit != 0L) hash ^= FreeNetLimit.GetHashCode();
      if (NetUsed != 0L) hash ^= NetUsed.GetHashCode();
      if (NetLimit != 0L) hash ^= NetLimit.GetHashCode();
      hash ^= AssetNetUsed.GetHashCode();
      hash ^= AssetNetLimit.GetHashCode();
      if (TotalNetLimit != 0L) hash ^= TotalNetLimit.GetHashCode();
      if (TotalNetWeight != 0L) hash ^= TotalNetWeight.GetHashCode();
      if (TotalTronPowerWeight != 0L) hash ^= TotalTronPowerWeight.GetHashCode();
      if (TronPowerUsed != 0L) hash ^= TronPowerUsed.GetHashCode();
      if (TronPowerLimit != 0L) hash ^= TronPowerLimit.GetHashCode();
      if (EnergyUsed != 0L) hash ^= EnergyUsed.GetHashCode();
      if (EnergyLimit != 0L) hash ^= EnergyLimit.GetHashCode();
      if (TotalEnergyLimit != 0L) hash ^= TotalEnergyLimit.GetHashCode();
      if (TotalEnergyWeight != 0L) hash ^= TotalEnergyWeight.GetHashCode();
      if (StorageUsed != 0L) hash ^= StorageUsed.GetHashCode();
      if (StorageLimit != 0L) hash ^= StorageLimit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FreeNetUsed != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NetUsed);
      }
      if (NetLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NetLimit);
      }
      assetNetUsed_.WriteTo(output, _map_assetNetUsed_codec);
      assetNetLimit_.WriteTo(output, _map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(TotalNetWeight);
      }
      if (TotalTronPowerWeight != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TotalTronPowerWeight);
      }
      if (TronPowerUsed != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(TronPowerUsed);
      }
      if (TronPowerLimit != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(TronPowerLimit);
      }
      if (EnergyUsed != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(EnergyUsed);
      }
      if (EnergyLimit != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(EnergyLimit);
      }
      if (TotalEnergyLimit != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(TotalEnergyLimit);
      }
      if (TotalEnergyWeight != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(TotalEnergyWeight);
      }
      if (StorageUsed != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(StorageUsed);
      }
      if (StorageLimit != 0L) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(StorageLimit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FreeNetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetUsed);
      }
      if (FreeNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FreeNetLimit);
      }
      if (NetUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetUsed);
      }
      if (NetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetLimit);
      }
      size += assetNetUsed_.CalculateSize(_map_assetNetUsed_codec);
      size += assetNetLimit_.CalculateSize(_map_assetNetLimit_codec);
      if (TotalNetLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetLimit);
      }
      if (TotalNetWeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalNetWeight);
      }
      if (TotalTronPowerWeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalTronPowerWeight);
      }
      if (TronPowerUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TronPowerUsed);
      }
      if (TronPowerLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TronPowerLimit);
      }
      if (EnergyUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnergyUsed);
      }
      if (EnergyLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnergyLimit);
      }
      if (TotalEnergyLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalEnergyLimit);
      }
      if (TotalEnergyWeight != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(TotalEnergyWeight);
      }
      if (StorageUsed != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(StorageUsed);
      }
      if (StorageLimit != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(StorageLimit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountResourceMessage other) {
      if (other == null) {
        return;
      }
      if (other.FreeNetUsed != 0L) {
        FreeNetUsed = other.FreeNetUsed;
      }
      if (other.FreeNetLimit != 0L) {
        FreeNetLimit = other.FreeNetLimit;
      }
      if (other.NetUsed != 0L) {
        NetUsed = other.NetUsed;
      }
      if (other.NetLimit != 0L) {
        NetLimit = other.NetLimit;
      }
      assetNetUsed_.Add(other.assetNetUsed_);
      assetNetLimit_.Add(other.assetNetLimit_);
      if (other.TotalNetLimit != 0L) {
        TotalNetLimit = other.TotalNetLimit;
      }
      if (other.TotalNetWeight != 0L) {
        TotalNetWeight = other.TotalNetWeight;
      }
      if (other.TotalTronPowerWeight != 0L) {
        TotalTronPowerWeight = other.TotalTronPowerWeight;
      }
      if (other.TronPowerUsed != 0L) {
        TronPowerUsed = other.TronPowerUsed;
      }
      if (other.TronPowerLimit != 0L) {
        TronPowerLimit = other.TronPowerLimit;
      }
      if (other.EnergyUsed != 0L) {
        EnergyUsed = other.EnergyUsed;
      }
      if (other.EnergyLimit != 0L) {
        EnergyLimit = other.EnergyLimit;
      }
      if (other.TotalEnergyLimit != 0L) {
        TotalEnergyLimit = other.TotalEnergyLimit;
      }
      if (other.TotalEnergyWeight != 0L) {
        TotalEnergyWeight = other.TotalEnergyWeight;
      }
      if (other.StorageUsed != 0L) {
        StorageUsed = other.StorageUsed;
      }
      if (other.StorageLimit != 0L) {
        StorageLimit = other.StorageLimit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FreeNetUsed = input.ReadInt64();
            break;
          }
          case 16: {
            FreeNetLimit = input.ReadInt64();
            break;
          }
          case 24: {
            NetUsed = input.ReadInt64();
            break;
          }
          case 32: {
            NetLimit = input.ReadInt64();
            break;
          }
          case 42: {
            assetNetUsed_.AddEntriesFrom(input, _map_assetNetUsed_codec);
            break;
          }
          case 50: {
            assetNetLimit_.AddEntriesFrom(input, _map_assetNetLimit_codec);
            break;
          }
          case 56: {
            TotalNetLimit = input.ReadInt64();
            break;
          }
          case 64: {
            TotalNetWeight = input.ReadInt64();
            break;
          }
          case 72: {
            TotalTronPowerWeight = input.ReadInt64();
            break;
          }
          case 80: {
            TronPowerUsed = input.ReadInt64();
            break;
          }
          case 88: {
            TronPowerLimit = input.ReadInt64();
            break;
          }
          case 104: {
            EnergyUsed = input.ReadInt64();
            break;
          }
          case 112: {
            EnergyLimit = input.ReadInt64();
            break;
          }
          case 120: {
            TotalEnergyLimit = input.ReadInt64();
            break;
          }
          case 128: {
            TotalEnergyWeight = input.ReadInt64();
            break;
          }
          case 168: {
            StorageUsed = input.ReadInt64();
            break;
          }
          case 176: {
            StorageLimit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaginatedMessage : pb::IMessage<PaginatedMessage> {
    private static readonly pb::MessageParser<PaginatedMessage> _parser = new pb::MessageParser<PaginatedMessage>(() => new PaginatedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaginatedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginatedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginatedMessage(PaginatedMessage other) : this() {
      offset_ = other.offset_;
      limit_ = other.limit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaginatedMessage Clone() {
      return new PaginatedMessage(this);
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "limit" field.</summary>
    public const int LimitFieldNumber = 2;
    private long limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaginatedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaginatedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Limit != other.Limit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Limit != 0L) hash ^= Limit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Offset);
      }
      if (Limit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Limit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Limit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Limit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaginatedMessage other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Limit != 0L) {
        Limit = other.Limit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt64();
            break;
          }
          case 16: {
            Limit = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferMessage : pb::IMessage<EasyTransferMessage> {
    private static readonly pb::MessageParser<EasyTransferMessage> _parser = new pb::MessageParser<EasyTransferMessage>(() => new EasyTransferMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferMessage(EasyTransferMessage other) : this() {
      passPhrase_ = other.passPhrase_;
      toAddress_ = other.toAddress_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferMessage Clone() {
      return new EasyTransferMessage(this);
    }

    /// <summary>Field number for the "passPhrase" field.</summary>
    public const int PassPhraseFieldNumber = 1;
    private pb::ByteString passPhrase_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PassPhrase {
      get { return passPhrase_; }
      set {
        passPhrase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PassPhrase != other.PassPhrase) return false;
      if (ToAddress != other.ToAddress) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PassPhrase.Length != 0) hash ^= PassPhrase.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PassPhrase.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PassPhrase);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PassPhrase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PassPhrase);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferMessage other) {
      if (other == null) {
        return;
      }
      if (other.PassPhrase.Length != 0) {
        PassPhrase = other.PassPhrase;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PassPhrase = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferAssetMessage : pb::IMessage<EasyTransferAssetMessage> {
    private static readonly pb::MessageParser<EasyTransferAssetMessage> _parser = new pb::MessageParser<EasyTransferAssetMessage>(() => new EasyTransferAssetMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferAssetMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetMessage(EasyTransferAssetMessage other) : this() {
      passPhrase_ = other.passPhrase_;
      toAddress_ = other.toAddress_;
      assetId_ = other.assetId_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetMessage Clone() {
      return new EasyTransferAssetMessage(this);
    }

    /// <summary>Field number for the "passPhrase" field.</summary>
    public const int PassPhraseFieldNumber = 1;
    private pb::ByteString passPhrase_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PassPhrase {
      get { return passPhrase_; }
      set {
        passPhrase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assetId" field.</summary>
    public const int AssetIdFieldNumber = 3;
    private string assetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetId {
      get { return assetId_; }
      set {
        assetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferAssetMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferAssetMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PassPhrase != other.PassPhrase) return false;
      if (ToAddress != other.ToAddress) return false;
      if (AssetId != other.AssetId) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PassPhrase.Length != 0) hash ^= PassPhrase.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (AssetId.Length != 0) hash ^= AssetId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PassPhrase.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PassPhrase);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (AssetId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AssetId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PassPhrase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PassPhrase);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (AssetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferAssetMessage other) {
      if (other == null) {
        return;
      }
      if (other.PassPhrase.Length != 0) {
        PassPhrase = other.PassPhrase;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.AssetId.Length != 0) {
        AssetId = other.AssetId;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PassPhrase = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 26: {
            AssetId = input.ReadString();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferByPrivateMessage : pb::IMessage<EasyTransferByPrivateMessage> {
    private static readonly pb::MessageParser<EasyTransferByPrivateMessage> _parser = new pb::MessageParser<EasyTransferByPrivateMessage>(() => new EasyTransferByPrivateMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferByPrivateMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferByPrivateMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferByPrivateMessage(EasyTransferByPrivateMessage other) : this() {
      privateKey_ = other.privateKey_;
      toAddress_ = other.toAddress_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferByPrivateMessage Clone() {
      return new EasyTransferByPrivateMessage(this);
    }

    /// <summary>Field number for the "privateKey" field.</summary>
    public const int PrivateKeyFieldNumber = 1;
    private pb::ByteString privateKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferByPrivateMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferByPrivateMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrivateKey != other.PrivateKey) return false;
      if (ToAddress != other.ToAddress) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PrivateKey);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferByPrivateMessage other) {
      if (other == null) {
        return;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PrivateKey = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferAssetByPrivateMessage : pb::IMessage<EasyTransferAssetByPrivateMessage> {
    private static readonly pb::MessageParser<EasyTransferAssetByPrivateMessage> _parser = new pb::MessageParser<EasyTransferAssetByPrivateMessage>(() => new EasyTransferAssetByPrivateMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferAssetByPrivateMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetByPrivateMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetByPrivateMessage(EasyTransferAssetByPrivateMessage other) : this() {
      privateKey_ = other.privateKey_;
      toAddress_ = other.toAddress_;
      assetId_ = other.assetId_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferAssetByPrivateMessage Clone() {
      return new EasyTransferAssetByPrivateMessage(this);
    }

    /// <summary>Field number for the "privateKey" field.</summary>
    public const int PrivateKeyFieldNumber = 1;
    private pb::ByteString privateKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toAddress" field.</summary>
    public const int ToAddressFieldNumber = 2;
    private pb::ByteString toAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ToAddress {
      get { return toAddress_; }
      set {
        toAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assetId" field.</summary>
    public const int AssetIdFieldNumber = 3;
    private string assetId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AssetId {
      get { return assetId_; }
      set {
        assetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferAssetByPrivateMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferAssetByPrivateMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrivateKey != other.PrivateKey) return false;
      if (ToAddress != other.ToAddress) return false;
      if (AssetId != other.AssetId) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (ToAddress.Length != 0) hash ^= ToAddress.GetHashCode();
      if (AssetId.Length != 0) hash ^= AssetId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(PrivateKey);
      }
      if (ToAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ToAddress);
      }
      if (AssetId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AssetId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
      }
      if (ToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ToAddress);
      }
      if (AssetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferAssetByPrivateMessage other) {
      if (other == null) {
        return;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      if (other.ToAddress.Length != 0) {
        ToAddress = other.ToAddress;
      }
      if (other.AssetId.Length != 0) {
        AssetId = other.AssetId;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PrivateKey = input.ReadBytes();
            break;
          }
          case 18: {
            ToAddress = input.ReadBytes();
            break;
          }
          case 26: {
            AssetId = input.ReadString();
            break;
          }
          case 32: {
            Amount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EasyTransferResponse : pb::IMessage<EasyTransferResponse> {
    private static readonly pb::MessageParser<EasyTransferResponse> _parser = new pb::MessageParser<EasyTransferResponse>(() => new EasyTransferResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EasyTransferResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferResponse(EasyTransferResponse other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      txid_ = other.txid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EasyTransferResponse Clone() {
      return new EasyTransferResponse(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Tron.Net.Protocol.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Tron.Net.Protocol.Return result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Return Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "txid" field.</summary>
    public const int TxidFieldNumber = 3;
    private pb::ByteString txid_ = pb::ByteString.Empty;
    /// <summary>
    ///transaction id =  sha256(transaction.rowdata)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Txid {
      get { return txid_; }
      set {
        txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EasyTransferResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EasyTransferResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (Txid != other.Txid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (Txid.Length != 0) hash ^= Txid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (result_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Result);
      }
      if (Txid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Txid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (Txid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Txid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EasyTransferResponse other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Tron.Net.Protocol.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Tron.Net.Protocol.Return();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.Txid.Length != 0) {
        Txid = other.Txid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Tron.Net.Protocol.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 18: {
            if (result_ == null) {
              Result = new global::Tron.Net.Protocol.Return();
            }
            input.ReadMessage(Result);
            break;
          }
          case 26: {
            Txid = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddressPrKeyPairMessage : pb::IMessage<AddressPrKeyPairMessage> {
    private static readonly pb::MessageParser<AddressPrKeyPairMessage> _parser = new pb::MessageParser<AddressPrKeyPairMessage>(() => new AddressPrKeyPairMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddressPrKeyPairMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressPrKeyPairMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressPrKeyPairMessage(AddressPrKeyPairMessage other) : this() {
      address_ = other.address_;
      privateKey_ = other.privateKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressPrKeyPairMessage Clone() {
      return new AddressPrKeyPairMessage(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "privateKey" field.</summary>
    public const int PrivateKeyFieldNumber = 2;
    private string privateKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddressPrKeyPairMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddressPrKeyPairMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (PrivateKey != other.PrivateKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PrivateKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddressPrKeyPairMessage other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            PrivateKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionExtention : pb::IMessage<TransactionExtention> {
    private static readonly pb::MessageParser<TransactionExtention> _parser = new pb::MessageParser<TransactionExtention>(() => new TransactionExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExtention(TransactionExtention other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      txid_ = other.txid_;
      constantResult_ = other.constantResult_.Clone();
      result_ = other.result_ != null ? other.result_.Clone() : null;
      energyUsed_ = other.energyUsed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionExtention Clone() {
      return new TransactionExtention(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Tron.Net.Protocol.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "txid" field.</summary>
    public const int TxidFieldNumber = 2;
    private pb::ByteString txid_ = pb::ByteString.Empty;
    /// <summary>
    ///transaction id =  sha256(transaction.rowdata)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Txid {
      get { return txid_; }
      set {
        txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "constant_result" field.</summary>
    public const int ConstantResultFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_constantResult_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> constantResult_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ConstantResult {
      get { return constantResult_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 4;
    private global::Tron.Net.Protocol.Return result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Return Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "energy_used" field.</summary>
    public const int EnergyUsedFieldNumber = 5;
    private long energyUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnergyUsed {
      get { return energyUsed_; }
      set {
        energyUsed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (Txid != other.Txid) return false;
      if(!constantResult_.Equals(other.constantResult_)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (EnergyUsed != other.EnergyUsed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (Txid.Length != 0) hash ^= Txid.GetHashCode();
      hash ^= constantResult_.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (EnergyUsed != 0L) hash ^= EnergyUsed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (Txid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Txid);
      }
      constantResult_.WriteTo(output, _repeated_constantResult_codec);
      if (result_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Result);
      }
      if (EnergyUsed != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EnergyUsed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (Txid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Txid);
      }
      size += constantResult_.CalculateSize(_repeated_constantResult_codec);
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (EnergyUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnergyUsed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionExtention other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Tron.Net.Protocol.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.Txid.Length != 0) {
        Txid = other.Txid;
      }
      constantResult_.Add(other.constantResult_);
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Tron.Net.Protocol.Return();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.EnergyUsed != 0L) {
        EnergyUsed = other.EnergyUsed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Tron.Net.Protocol.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 18: {
            Txid = input.ReadBytes();
            break;
          }
          case 26: {
            constantResult_.AddEntriesFrom(input, _repeated_constantResult_codec);
            break;
          }
          case 34: {
            if (result_ == null) {
              Result = new global::Tron.Net.Protocol.Return();
            }
            input.ReadMessage(Result);
            break;
          }
          case 40: {
            EnergyUsed = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockExtention : pb::IMessage<BlockExtention> {
    private static readonly pb::MessageParser<BlockExtention> _parser = new pb::MessageParser<BlockExtention>(() => new BlockExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockExtention(BlockExtention other) : this() {
      transactions_ = other.transactions_.Clone();
      blockHeader_ = other.blockHeader_ != null ? other.blockHeader_.Clone() : null;
      blockid_ = other.blockid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockExtention Clone() {
      return new BlockExtention(this);
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.TransactionExtention> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.TransactionExtention.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.TransactionExtention> transactions_ = new pbc::RepeatedField<global::Tron.Net.Protocol.TransactionExtention>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.TransactionExtention> Transactions {
      get { return transactions_; }
    }

    /// <summary>Field number for the "block_header" field.</summary>
    public const int BlockHeaderFieldNumber = 2;
    private global::Tron.Net.Protocol.BlockHeader blockHeader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.BlockHeader BlockHeader {
      get { return blockHeader_; }
      set {
        blockHeader_ = value;
      }
    }

    /// <summary>Field number for the "blockid" field.</summary>
    public const int BlockidFieldNumber = 3;
    private pb::ByteString blockid_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Blockid {
      get { return blockid_; }
      set {
        blockid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactions_.Equals(other.transactions_)) return false;
      if (!object.Equals(BlockHeader, other.BlockHeader)) return false;
      if (Blockid != other.Blockid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactions_.GetHashCode();
      if (blockHeader_ != null) hash ^= BlockHeader.GetHashCode();
      if (Blockid.Length != 0) hash ^= Blockid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (blockHeader_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BlockHeader);
      }
      if (Blockid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Blockid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (blockHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockHeader);
      }
      if (Blockid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Blockid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockExtention other) {
      if (other == null) {
        return;
      }
      transactions_.Add(other.transactions_);
      if (other.blockHeader_ != null) {
        if (blockHeader_ == null) {
          BlockHeader = new global::Tron.Net.Protocol.BlockHeader();
        }
        BlockHeader.MergeFrom(other.BlockHeader);
      }
      if (other.Blockid.Length != 0) {
        Blockid = other.Blockid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
          case 18: {
            if (blockHeader_ == null) {
              BlockHeader = new global::Tron.Net.Protocol.BlockHeader();
            }
            input.ReadMessage(BlockHeader);
            break;
          }
          case 26: {
            Blockid = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockListExtention : pb::IMessage<BlockListExtention> {
    private static readonly pb::MessageParser<BlockListExtention> _parser = new pb::MessageParser<BlockListExtention>(() => new BlockListExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockListExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockListExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockListExtention(BlockListExtention other) : this() {
      block_ = other.block_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockListExtention Clone() {
      return new BlockListExtention(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.BlockExtention> _repeated_block_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.BlockExtention.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.BlockExtention> block_ = new pbc::RepeatedField<global::Tron.Net.Protocol.BlockExtention>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.BlockExtention> Block {
      get { return block_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockListExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockListExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!block_.Equals(other.block_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= block_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      block_.WriteTo(output, _repeated_block_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += block_.CalculateSize(_repeated_block_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockListExtention other) {
      if (other == null) {
        return;
      }
      block_.Add(other.block_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            block_.AddEntriesFrom(input, _repeated_block_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionListExtention : pb::IMessage<TransactionListExtention> {
    private static readonly pb::MessageParser<TransactionListExtention> _parser = new pb::MessageParser<TransactionListExtention>(() => new TransactionListExtention());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionListExtention> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionListExtention() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionListExtention(TransactionListExtention other) : this() {
      transaction_ = other.transaction_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionListExtention Clone() {
      return new TransactionListExtention(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.TransactionExtention> _repeated_transaction_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.TransactionExtention.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.TransactionExtention> transaction_ = new pbc::RepeatedField<global::Tron.Net.Protocol.TransactionExtention>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.TransactionExtention> Transaction {
      get { return transaction_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionListExtention);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionListExtention other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transaction_.Equals(other.transaction_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transaction_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transaction_.WriteTo(output, _repeated_transaction_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transaction_.CalculateSize(_repeated_transaction_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionListExtention other) {
      if (other == null) {
        return;
      }
      transaction_.Add(other.transaction_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transaction_.AddEntriesFrom(input, _repeated_transaction_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockIncrementalMerkleTree : pb::IMessage<BlockIncrementalMerkleTree> {
    private static readonly pb::MessageParser<BlockIncrementalMerkleTree> _parser = new pb::MessageParser<BlockIncrementalMerkleTree>(() => new BlockIncrementalMerkleTree());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockIncrementalMerkleTree> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockIncrementalMerkleTree() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockIncrementalMerkleTree(BlockIncrementalMerkleTree other) : this() {
      number_ = other.number_;
      merkleTree_ = other.merkleTree_ != null ? other.merkleTree_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockIncrementalMerkleTree Clone() {
      return new BlockIncrementalMerkleTree(this);
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 1;
    private long number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    /// <summary>Field number for the "merkleTree" field.</summary>
    public const int MerkleTreeFieldNumber = 2;
    private global::Tron.Net.Protocol.IncrementalMerkleTree merkleTree_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.IncrementalMerkleTree MerkleTree {
      get { return merkleTree_; }
      set {
        merkleTree_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockIncrementalMerkleTree);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockIncrementalMerkleTree other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Number != other.Number) return false;
      if (!object.Equals(MerkleTree, other.MerkleTree)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Number != 0L) hash ^= Number.GetHashCode();
      if (merkleTree_ != null) hash ^= MerkleTree.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Number != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Number);
      }
      if (merkleTree_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MerkleTree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Number != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Number);
      }
      if (merkleTree_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MerkleTree);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockIncrementalMerkleTree other) {
      if (other == null) {
        return;
      }
      if (other.Number != 0L) {
        Number = other.Number;
      }
      if (other.merkleTree_ != null) {
        if (merkleTree_ == null) {
          MerkleTree = new global::Tron.Net.Protocol.IncrementalMerkleTree();
        }
        MerkleTree.MergeFrom(other.MerkleTree);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Number = input.ReadInt64();
            break;
          }
          case 18: {
            if (merkleTree_ == null) {
              MerkleTree = new global::Tron.Net.Protocol.IncrementalMerkleTree();
            }
            input.ReadMessage(MerkleTree);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionSignWeight : pb::IMessage<TransactionSignWeight> {
    private static readonly pb::MessageParser<TransactionSignWeight> _parser = new pb::MessageParser<TransactionSignWeight>(() => new TransactionSignWeight());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionSignWeight> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionSignWeight() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionSignWeight(TransactionSignWeight other) : this() {
      permission_ = other.permission_ != null ? other.permission_.Clone() : null;
      approvedList_ = other.approvedList_.Clone();
      currentWeight_ = other.currentWeight_;
      result_ = other.result_ != null ? other.result_.Clone() : null;
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionSignWeight Clone() {
      return new TransactionSignWeight(this);
    }

    /// <summary>Field number for the "permission" field.</summary>
    public const int PermissionFieldNumber = 1;
    private global::Tron.Net.Protocol.Permission permission_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Permission Permission {
      get { return permission_; }
      set {
        permission_ = value;
      }
    }

    /// <summary>Field number for the "approved_list" field.</summary>
    public const int ApprovedListFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_approvedList_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> approvedList_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ApprovedList {
      get { return approvedList_; }
    }

    /// <summary>Field number for the "current_weight" field.</summary>
    public const int CurrentWeightFieldNumber = 3;
    private long currentWeight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CurrentWeight {
      get { return currentWeight_; }
      set {
        currentWeight_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 4;
    private global::Tron.Net.Protocol.TransactionSignWeight.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.TransactionSignWeight.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 5;
    private global::Tron.Net.Protocol.TransactionExtention transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.TransactionExtention Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionSignWeight);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionSignWeight other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Permission, other.Permission)) return false;
      if(!approvedList_.Equals(other.approvedList_)) return false;
      if (CurrentWeight != other.CurrentWeight) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (permission_ != null) hash ^= Permission.GetHashCode();
      hash ^= approvedList_.GetHashCode();
      if (CurrentWeight != 0L) hash ^= CurrentWeight.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (permission_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Permission);
      }
      approvedList_.WriteTo(output, _repeated_approvedList_codec);
      if (CurrentWeight != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CurrentWeight);
      }
      if (result_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Result);
      }
      if (transaction_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (permission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Permission);
      }
      size += approvedList_.CalculateSize(_repeated_approvedList_codec);
      if (CurrentWeight != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrentWeight);
      }
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionSignWeight other) {
      if (other == null) {
        return;
      }
      if (other.permission_ != null) {
        if (permission_ == null) {
          Permission = new global::Tron.Net.Protocol.Permission();
        }
        Permission.MergeFrom(other.Permission);
      }
      approvedList_.Add(other.approvedList_);
      if (other.CurrentWeight != 0L) {
        CurrentWeight = other.CurrentWeight;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Tron.Net.Protocol.TransactionSignWeight.Types.Result();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Tron.Net.Protocol.TransactionExtention();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (permission_ == null) {
              Permission = new global::Tron.Net.Protocol.Permission();
            }
            input.ReadMessage(Permission);
            break;
          }
          case 18: {
            approvedList_.AddEntriesFrom(input, _repeated_approvedList_codec);
            break;
          }
          case 24: {
            CurrentWeight = input.ReadInt64();
            break;
          }
          case 34: {
            if (result_ == null) {
              Result = new global::Tron.Net.Protocol.TransactionSignWeight.Types.Result();
            }
            input.ReadMessage(Result);
            break;
          }
          case 42: {
            if (transaction_ == null) {
              Transaction = new global::Tron.Net.Protocol.TransactionExtention();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TransactionSignWeight message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Result : pb::IMessage<Result> {
        private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Result> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tron.Net.Protocol.TransactionSignWeight.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result(Result other) : this() {
          code_ = other.code_;
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result Clone() {
          return new Result(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private global::Tron.Net.Protocol.TransactionSignWeight.Types.Result.Types.response_code code_ = global::Tron.Net.Protocol.TransactionSignWeight.Types.Result.Types.response_code.EnoughPermission;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tron.Net.Protocol.TransactionSignWeight.Types.Result.Types.response_code Code {
          get { return code_; }
          set {
            code_ = value;
          }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Result);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Result other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Code != other.Code) return false;
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Code != global::Tron.Net.Protocol.TransactionSignWeight.Types.Result.Types.response_code.EnoughPermission) hash ^= Code.GetHashCode();
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Code != global::Tron.Net.Protocol.TransactionSignWeight.Types.Result.Types.response_code.EnoughPermission) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Code);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Code != global::Tron.Net.Protocol.TransactionSignWeight.Types.Result.Types.response_code.EnoughPermission) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
          }
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Result other) {
          if (other == null) {
            return;
          }
          if (other.Code != global::Tron.Net.Protocol.TransactionSignWeight.Types.Result.Types.response_code.EnoughPermission) {
            Code = other.Code;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Code = (global::Tron.Net.Protocol.TransactionSignWeight.Types.Result.Types.response_code) input.ReadEnum();
                break;
              }
              case 18: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Result message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum response_code {
            [pbr::OriginalName("ENOUGH_PERMISSION")] EnoughPermission = 0,
            /// <summary>
            /// error in
            /// </summary>
            [pbr::OriginalName("NOT_ENOUGH_PERMISSION")] NotEnoughPermission = 1,
            [pbr::OriginalName("SIGNATURE_FORMAT_ERROR")] SignatureFormatError = 2,
            [pbr::OriginalName("COMPUTE_ADDRESS_ERROR")] ComputeAddressError = 3,
            /// <summary>
            ///The key is not in permission
            /// </summary>
            [pbr::OriginalName("PERMISSION_ERROR")] PermissionError = 4,
            [pbr::OriginalName("OTHER_ERROR")] OtherError = 20,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class TransactionApprovedList : pb::IMessage<TransactionApprovedList> {
    private static readonly pb::MessageParser<TransactionApprovedList> _parser = new pb::MessageParser<TransactionApprovedList>(() => new TransactionApprovedList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionApprovedList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionApprovedList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionApprovedList(TransactionApprovedList other) : this() {
      approvedList_ = other.approvedList_.Clone();
      result_ = other.result_ != null ? other.result_.Clone() : null;
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionApprovedList Clone() {
      return new TransactionApprovedList(this);
    }

    /// <summary>Field number for the "approved_list" field.</summary>
    public const int ApprovedListFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_approvedList_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> approvedList_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ApprovedList {
      get { return approvedList_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 4;
    private global::Tron.Net.Protocol.TransactionApprovedList.Types.Result result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.TransactionApprovedList.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 5;
    private global::Tron.Net.Protocol.TransactionExtention transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.TransactionExtention Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionApprovedList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionApprovedList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!approvedList_.Equals(other.approvedList_)) return false;
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(Transaction, other.Transaction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= approvedList_.GetHashCode();
      if (result_ != null) hash ^= Result.GetHashCode();
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      approvedList_.WriteTo(output, _repeated_approvedList_codec);
      if (result_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Result);
      }
      if (transaction_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += approvedList_.CalculateSize(_repeated_approvedList_codec);
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionApprovedList other) {
      if (other == null) {
        return;
      }
      approvedList_.Add(other.approvedList_);
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::Tron.Net.Protocol.TransactionApprovedList.Types.Result();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Tron.Net.Protocol.TransactionExtention();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            approvedList_.AddEntriesFrom(input, _repeated_approvedList_codec);
            break;
          }
          case 34: {
            if (result_ == null) {
              Result = new global::Tron.Net.Protocol.TransactionApprovedList.Types.Result();
            }
            input.ReadMessage(Result);
            break;
          }
          case 42: {
            if (transaction_ == null) {
              Transaction = new global::Tron.Net.Protocol.TransactionExtention();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TransactionApprovedList message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Result : pb::IMessage<Result> {
        private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Result> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tron.Net.Protocol.TransactionApprovedList.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result(Result other) : this() {
          code_ = other.code_;
          message_ = other.message_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result Clone() {
          return new Result(this);
        }

        /// <summary>Field number for the "code" field.</summary>
        public const int CodeFieldNumber = 1;
        private global::Tron.Net.Protocol.TransactionApprovedList.Types.Result.Types.response_code code_ = global::Tron.Net.Protocol.TransactionApprovedList.Types.Result.Types.response_code.Success;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tron.Net.Protocol.TransactionApprovedList.Types.Result.Types.response_code Code {
          get { return code_; }
          set {
            code_ = value;
          }
        }

        /// <summary>Field number for the "message" field.</summary>
        public const int MessageFieldNumber = 2;
        private string message_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Message {
          get { return message_; }
          set {
            message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Result);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Result other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Code != other.Code) return false;
          if (Message != other.Message) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Code != global::Tron.Net.Protocol.TransactionApprovedList.Types.Result.Types.response_code.Success) hash ^= Code.GetHashCode();
          if (Message.Length != 0) hash ^= Message.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Code != global::Tron.Net.Protocol.TransactionApprovedList.Types.Result.Types.response_code.Success) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Code);
          }
          if (Message.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Message);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Code != global::Tron.Net.Protocol.TransactionApprovedList.Types.Result.Types.response_code.Success) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
          }
          if (Message.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Result other) {
          if (other == null) {
            return;
          }
          if (other.Code != global::Tron.Net.Protocol.TransactionApprovedList.Types.Result.Types.response_code.Success) {
            Code = other.Code;
          }
          if (other.Message.Length != 0) {
            Message = other.Message;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Code = (global::Tron.Net.Protocol.TransactionApprovedList.Types.Result.Types.response_code) input.ReadEnum();
                break;
              }
              case 18: {
                Message = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Result message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum response_code {
            [pbr::OriginalName("SUCCESS")] Success = 0,
            [pbr::OriginalName("SIGNATURE_FORMAT_ERROR")] SignatureFormatError = 1,
            [pbr::OriginalName("COMPUTE_ADDRESS_ERROR")] ComputeAddressError = 2,
            [pbr::OriginalName("OTHER_ERROR")] OtherError = 20,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class IvkDecryptParameters : pb::IMessage<IvkDecryptParameters> {
    private static readonly pb::MessageParser<IvkDecryptParameters> _parser = new pb::MessageParser<IvkDecryptParameters>(() => new IvkDecryptParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IvkDecryptParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IvkDecryptParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IvkDecryptParameters(IvkDecryptParameters other) : this() {
      startBlockIndex_ = other.startBlockIndex_;
      endBlockIndex_ = other.endBlockIndex_;
      ivk_ = other.ivk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IvkDecryptParameters Clone() {
      return new IvkDecryptParameters(this);
    }

    /// <summary>Field number for the "start_block_index" field.</summary>
    public const int StartBlockIndexFieldNumber = 1;
    private long startBlockIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartBlockIndex {
      get { return startBlockIndex_; }
      set {
        startBlockIndex_ = value;
      }
    }

    /// <summary>Field number for the "end_block_index" field.</summary>
    public const int EndBlockIndexFieldNumber = 2;
    private long endBlockIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndBlockIndex {
      get { return endBlockIndex_; }
      set {
        endBlockIndex_ = value;
      }
    }

    /// <summary>Field number for the "ivk" field.</summary>
    public const int IvkFieldNumber = 3;
    private pb::ByteString ivk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ivk {
      get { return ivk_; }
      set {
        ivk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IvkDecryptParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IvkDecryptParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartBlockIndex != other.StartBlockIndex) return false;
      if (EndBlockIndex != other.EndBlockIndex) return false;
      if (Ivk != other.Ivk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartBlockIndex != 0L) hash ^= StartBlockIndex.GetHashCode();
      if (EndBlockIndex != 0L) hash ^= EndBlockIndex.GetHashCode();
      if (Ivk.Length != 0) hash ^= Ivk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartBlockIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartBlockIndex);
      }
      if (EndBlockIndex != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndBlockIndex);
      }
      if (Ivk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Ivk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartBlockIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartBlockIndex);
      }
      if (EndBlockIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndBlockIndex);
      }
      if (Ivk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ivk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IvkDecryptParameters other) {
      if (other == null) {
        return;
      }
      if (other.StartBlockIndex != 0L) {
        StartBlockIndex = other.StartBlockIndex;
      }
      if (other.EndBlockIndex != 0L) {
        EndBlockIndex = other.EndBlockIndex;
      }
      if (other.Ivk.Length != 0) {
        Ivk = other.Ivk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartBlockIndex = input.ReadInt64();
            break;
          }
          case 16: {
            EndBlockIndex = input.ReadInt64();
            break;
          }
          case 26: {
            Ivk = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IvkDecryptAndMarkParameters : pb::IMessage<IvkDecryptAndMarkParameters> {
    private static readonly pb::MessageParser<IvkDecryptAndMarkParameters> _parser = new pb::MessageParser<IvkDecryptAndMarkParameters>(() => new IvkDecryptAndMarkParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IvkDecryptAndMarkParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IvkDecryptAndMarkParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IvkDecryptAndMarkParameters(IvkDecryptAndMarkParameters other) : this() {
      startBlockIndex_ = other.startBlockIndex_;
      endBlockIndex_ = other.endBlockIndex_;
      ivk_ = other.ivk_;
      ak_ = other.ak_;
      nk_ = other.nk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IvkDecryptAndMarkParameters Clone() {
      return new IvkDecryptAndMarkParameters(this);
    }

    /// <summary>Field number for the "start_block_index" field.</summary>
    public const int StartBlockIndexFieldNumber = 1;
    private long startBlockIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartBlockIndex {
      get { return startBlockIndex_; }
      set {
        startBlockIndex_ = value;
      }
    }

    /// <summary>Field number for the "end_block_index" field.</summary>
    public const int EndBlockIndexFieldNumber = 2;
    private long endBlockIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndBlockIndex {
      get { return endBlockIndex_; }
      set {
        endBlockIndex_ = value;
      }
    }

    /// <summary>Field number for the "ivk" field.</summary>
    public const int IvkFieldNumber = 5;
    private pb::ByteString ivk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ivk {
      get { return ivk_; }
      set {
        ivk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ak" field.</summary>
    public const int AkFieldNumber = 3;
    private pb::ByteString ak_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ak {
      get { return ak_; }
      set {
        ak_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nk" field.</summary>
    public const int NkFieldNumber = 4;
    private pb::ByteString nk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nk {
      get { return nk_; }
      set {
        nk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IvkDecryptAndMarkParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IvkDecryptAndMarkParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartBlockIndex != other.StartBlockIndex) return false;
      if (EndBlockIndex != other.EndBlockIndex) return false;
      if (Ivk != other.Ivk) return false;
      if (Ak != other.Ak) return false;
      if (Nk != other.Nk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartBlockIndex != 0L) hash ^= StartBlockIndex.GetHashCode();
      if (EndBlockIndex != 0L) hash ^= EndBlockIndex.GetHashCode();
      if (Ivk.Length != 0) hash ^= Ivk.GetHashCode();
      if (Ak.Length != 0) hash ^= Ak.GetHashCode();
      if (Nk.Length != 0) hash ^= Nk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartBlockIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartBlockIndex);
      }
      if (EndBlockIndex != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndBlockIndex);
      }
      if (Ak.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Ak);
      }
      if (Nk.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Nk);
      }
      if (Ivk.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Ivk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartBlockIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartBlockIndex);
      }
      if (EndBlockIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndBlockIndex);
      }
      if (Ivk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ivk);
      }
      if (Ak.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ak);
      }
      if (Nk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IvkDecryptAndMarkParameters other) {
      if (other == null) {
        return;
      }
      if (other.StartBlockIndex != 0L) {
        StartBlockIndex = other.StartBlockIndex;
      }
      if (other.EndBlockIndex != 0L) {
        EndBlockIndex = other.EndBlockIndex;
      }
      if (other.Ivk.Length != 0) {
        Ivk = other.Ivk;
      }
      if (other.Ak.Length != 0) {
        Ak = other.Ak;
      }
      if (other.Nk.Length != 0) {
        Nk = other.Nk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartBlockIndex = input.ReadInt64();
            break;
          }
          case 16: {
            EndBlockIndex = input.ReadInt64();
            break;
          }
          case 26: {
            Ak = input.ReadBytes();
            break;
          }
          case 34: {
            Nk = input.ReadBytes();
            break;
          }
          case 42: {
            Ivk = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OvkDecryptParameters : pb::IMessage<OvkDecryptParameters> {
    private static readonly pb::MessageParser<OvkDecryptParameters> _parser = new pb::MessageParser<OvkDecryptParameters>(() => new OvkDecryptParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OvkDecryptParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OvkDecryptParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OvkDecryptParameters(OvkDecryptParameters other) : this() {
      startBlockIndex_ = other.startBlockIndex_;
      endBlockIndex_ = other.endBlockIndex_;
      ovk_ = other.ovk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OvkDecryptParameters Clone() {
      return new OvkDecryptParameters(this);
    }

    /// <summary>Field number for the "start_block_index" field.</summary>
    public const int StartBlockIndexFieldNumber = 1;
    private long startBlockIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartBlockIndex {
      get { return startBlockIndex_; }
      set {
        startBlockIndex_ = value;
      }
    }

    /// <summary>Field number for the "end_block_index" field.</summary>
    public const int EndBlockIndexFieldNumber = 2;
    private long endBlockIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndBlockIndex {
      get { return endBlockIndex_; }
      set {
        endBlockIndex_ = value;
      }
    }

    /// <summary>Field number for the "ovk" field.</summary>
    public const int OvkFieldNumber = 3;
    private pb::ByteString ovk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ovk {
      get { return ovk_; }
      set {
        ovk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OvkDecryptParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OvkDecryptParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartBlockIndex != other.StartBlockIndex) return false;
      if (EndBlockIndex != other.EndBlockIndex) return false;
      if (Ovk != other.Ovk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartBlockIndex != 0L) hash ^= StartBlockIndex.GetHashCode();
      if (EndBlockIndex != 0L) hash ^= EndBlockIndex.GetHashCode();
      if (Ovk.Length != 0) hash ^= Ovk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartBlockIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartBlockIndex);
      }
      if (EndBlockIndex != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndBlockIndex);
      }
      if (Ovk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Ovk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartBlockIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartBlockIndex);
      }
      if (EndBlockIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndBlockIndex);
      }
      if (Ovk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ovk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OvkDecryptParameters other) {
      if (other == null) {
        return;
      }
      if (other.StartBlockIndex != 0L) {
        StartBlockIndex = other.StartBlockIndex;
      }
      if (other.EndBlockIndex != 0L) {
        EndBlockIndex = other.EndBlockIndex;
      }
      if (other.Ovk.Length != 0) {
        Ovk = other.Ovk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartBlockIndex = input.ReadInt64();
            break;
          }
          case 16: {
            EndBlockIndex = input.ReadInt64();
            break;
          }
          case 26: {
            Ovk = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DecryptNotes : pb::IMessage<DecryptNotes> {
    private static readonly pb::MessageParser<DecryptNotes> _parser = new pb::MessageParser<DecryptNotes>(() => new DecryptNotes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecryptNotes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptNotes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptNotes(DecryptNotes other) : this() {
      noteTxs_ = other.noteTxs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptNotes Clone() {
      return new DecryptNotes(this);
    }

    /// <summary>Field number for the "noteTxs" field.</summary>
    public const int NoteTxsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.DecryptNotes.Types.NoteTx> _repeated_noteTxs_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.DecryptNotes.Types.NoteTx.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.DecryptNotes.Types.NoteTx> noteTxs_ = new pbc::RepeatedField<global::Tron.Net.Protocol.DecryptNotes.Types.NoteTx>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.DecryptNotes.Types.NoteTx> NoteTxs {
      get { return noteTxs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecryptNotes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecryptNotes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!noteTxs_.Equals(other.noteTxs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= noteTxs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      noteTxs_.WriteTo(output, _repeated_noteTxs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += noteTxs_.CalculateSize(_repeated_noteTxs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecryptNotes other) {
      if (other == null) {
        return;
      }
      noteTxs_.Add(other.noteTxs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            noteTxs_.AddEntriesFrom(input, _repeated_noteTxs_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DecryptNotes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class NoteTx : pb::IMessage<NoteTx> {
        private static readonly pb::MessageParser<NoteTx> _parser = new pb::MessageParser<NoteTx>(() => new NoteTx());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NoteTx> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tron.Net.Protocol.DecryptNotes.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoteTx() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoteTx(NoteTx other) : this() {
          note_ = other.note_ != null ? other.note_.Clone() : null;
          txid_ = other.txid_;
          index_ = other.index_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoteTx Clone() {
          return new NoteTx(this);
        }

        /// <summary>Field number for the "note" field.</summary>
        public const int NoteFieldNumber = 1;
        private global::Tron.Net.Protocol.Note note_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tron.Net.Protocol.Note Note {
          get { return note_; }
          set {
            note_ = value;
          }
        }

        /// <summary>Field number for the "txid" field.</summary>
        public const int TxidFieldNumber = 2;
        private pb::ByteString txid_ = pb::ByteString.Empty;
        /// <summary>
        ///transaction id =  sha256(transaction.rowdata)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Txid {
          get { return txid_; }
          set {
            txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 3;
        private int index_;
        /// <summary>
        ///the index of note in receive
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NoteTx);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NoteTx other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Note, other.Note)) return false;
          if (Txid != other.Txid) return false;
          if (Index != other.Index) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (note_ != null) hash ^= Note.GetHashCode();
          if (Txid.Length != 0) hash ^= Txid.GetHashCode();
          if (Index != 0) hash ^= Index.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (note_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Note);
          }
          if (Txid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Txid);
          }
          if (Index != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Index);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (note_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Note);
          }
          if (Txid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Txid);
          }
          if (Index != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NoteTx other) {
          if (other == null) {
            return;
          }
          if (other.note_ != null) {
            if (note_ == null) {
              Note = new global::Tron.Net.Protocol.Note();
            }
            Note.MergeFrom(other.Note);
          }
          if (other.Txid.Length != 0) {
            Txid = other.Txid;
          }
          if (other.Index != 0) {
            Index = other.Index;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (note_ == null) {
                  Note = new global::Tron.Net.Protocol.Note();
                }
                input.ReadMessage(Note);
                break;
              }
              case 18: {
                Txid = input.ReadBytes();
                break;
              }
              case 24: {
                Index = input.ReadInt32();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class DecryptNotesMarked : pb::IMessage<DecryptNotesMarked> {
    private static readonly pb::MessageParser<DecryptNotesMarked> _parser = new pb::MessageParser<DecryptNotesMarked>(() => new DecryptNotesMarked());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecryptNotesMarked> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptNotesMarked() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptNotesMarked(DecryptNotesMarked other) : this() {
      noteTxs_ = other.noteTxs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptNotesMarked Clone() {
      return new DecryptNotesMarked(this);
    }

    /// <summary>Field number for the "noteTxs" field.</summary>
    public const int NoteTxsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.DecryptNotesMarked.Types.NoteTx> _repeated_noteTxs_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.DecryptNotesMarked.Types.NoteTx.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.DecryptNotesMarked.Types.NoteTx> noteTxs_ = new pbc::RepeatedField<global::Tron.Net.Protocol.DecryptNotesMarked.Types.NoteTx>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.DecryptNotesMarked.Types.NoteTx> NoteTxs {
      get { return noteTxs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecryptNotesMarked);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecryptNotesMarked other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!noteTxs_.Equals(other.noteTxs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= noteTxs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      noteTxs_.WriteTo(output, _repeated_noteTxs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += noteTxs_.CalculateSize(_repeated_noteTxs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecryptNotesMarked other) {
      if (other == null) {
        return;
      }
      noteTxs_.Add(other.noteTxs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            noteTxs_.AddEntriesFrom(input, _repeated_noteTxs_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DecryptNotesMarked message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class NoteTx : pb::IMessage<NoteTx> {
        private static readonly pb::MessageParser<NoteTx> _parser = new pb::MessageParser<NoteTx>(() => new NoteTx());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NoteTx> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tron.Net.Protocol.DecryptNotesMarked.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoteTx() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoteTx(NoteTx other) : this() {
          note_ = other.note_ != null ? other.note_.Clone() : null;
          txid_ = other.txid_;
          index_ = other.index_;
          isSpend_ = other.isSpend_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoteTx Clone() {
          return new NoteTx(this);
        }

        /// <summary>Field number for the "note" field.</summary>
        public const int NoteFieldNumber = 1;
        private global::Tron.Net.Protocol.Note note_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tron.Net.Protocol.Note Note {
          get { return note_; }
          set {
            note_ = value;
          }
        }

        /// <summary>Field number for the "txid" field.</summary>
        public const int TxidFieldNumber = 2;
        private pb::ByteString txid_ = pb::ByteString.Empty;
        /// <summary>
        ///transaction id =  sha256(transaction.rowdata)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Txid {
          get { return txid_; }
          set {
            txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 3;
        private int index_;
        /// <summary>
        ///the index of note in receive
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        /// <summary>Field number for the "is_spend" field.</summary>
        public const int IsSpendFieldNumber = 4;
        private bool isSpend_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsSpend {
          get { return isSpend_; }
          set {
            isSpend_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NoteTx);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NoteTx other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Note, other.Note)) return false;
          if (Txid != other.Txid) return false;
          if (Index != other.Index) return false;
          if (IsSpend != other.IsSpend) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (note_ != null) hash ^= Note.GetHashCode();
          if (Txid.Length != 0) hash ^= Txid.GetHashCode();
          if (Index != 0) hash ^= Index.GetHashCode();
          if (IsSpend != false) hash ^= IsSpend.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (note_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Note);
          }
          if (Txid.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(Txid);
          }
          if (Index != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(Index);
          }
          if (IsSpend != false) {
            output.WriteRawTag(32);
            output.WriteBool(IsSpend);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (note_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Note);
          }
          if (Txid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Txid);
          }
          if (Index != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
          }
          if (IsSpend != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NoteTx other) {
          if (other == null) {
            return;
          }
          if (other.note_ != null) {
            if (note_ == null) {
              Note = new global::Tron.Net.Protocol.Note();
            }
            Note.MergeFrom(other.Note);
          }
          if (other.Txid.Length != 0) {
            Txid = other.Txid;
          }
          if (other.Index != 0) {
            Index = other.Index;
          }
          if (other.IsSpend != false) {
            IsSpend = other.IsSpend;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (note_ == null) {
                  Note = new global::Tron.Net.Protocol.Note();
                }
                input.ReadMessage(Note);
                break;
              }
              case 18: {
                Txid = input.ReadBytes();
                break;
              }
              case 24: {
                Index = input.ReadInt32();
                break;
              }
              case 32: {
                IsSpend = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Note : pb::IMessage<Note> {
    private static readonly pb::MessageParser<Note> _parser = new pb::MessageParser<Note>(() => new Note());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Note> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Note() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Note(Note other) : this() {
      value_ = other.value_;
      paymentAddress_ = other.paymentAddress_;
      rcm_ = other.rcm_;
      memo_ = other.memo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Note Clone() {
      return new Note(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private long value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "payment_address" field.</summary>
    public const int PaymentAddressFieldNumber = 2;
    private string paymentAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentAddress {
      get { return paymentAddress_; }
      set {
        paymentAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rcm" field.</summary>
    public const int RcmFieldNumber = 3;
    private pb::ByteString rcm_ = pb::ByteString.Empty;
    /// <summary>
    /// random 32
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Rcm {
      get { return rcm_; }
      set {
        rcm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "memo" field.</summary>
    public const int MemoFieldNumber = 4;
    private pb::ByteString memo_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Memo {
      get { return memo_; }
      set {
        memo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Note);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Note other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (PaymentAddress != other.PaymentAddress) return false;
      if (Rcm != other.Rcm) return false;
      if (Memo != other.Memo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (PaymentAddress.Length != 0) hash ^= PaymentAddress.GetHashCode();
      if (Rcm.Length != 0) hash ^= Rcm.GetHashCode();
      if (Memo.Length != 0) hash ^= Memo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Value);
      }
      if (PaymentAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PaymentAddress);
      }
      if (Rcm.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Rcm);
      }
      if (Memo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Memo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (PaymentAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PaymentAddress);
      }
      if (Rcm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Rcm);
      }
      if (Memo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Memo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Note other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      if (other.PaymentAddress.Length != 0) {
        PaymentAddress = other.PaymentAddress;
      }
      if (other.Rcm.Length != 0) {
        Rcm = other.Rcm;
      }
      if (other.Memo.Length != 0) {
        Memo = other.Memo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadInt64();
            break;
          }
          case 18: {
            PaymentAddress = input.ReadString();
            break;
          }
          case 26: {
            Rcm = input.ReadBytes();
            break;
          }
          case 34: {
            Memo = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpendNote : pb::IMessage<SpendNote> {
    private static readonly pb::MessageParser<SpendNote> _parser = new pb::MessageParser<SpendNote>(() => new SpendNote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpendNote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendNote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendNote(SpendNote other) : this() {
      note_ = other.note_ != null ? other.note_.Clone() : null;
      alpha_ = other.alpha_;
      voucher_ = other.voucher_ != null ? other.voucher_.Clone() : null;
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendNote Clone() {
      return new SpendNote(this);
    }

    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 3;
    private global::Tron.Net.Protocol.Note note_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Note Note {
      get { return note_; }
      set {
        note_ = value;
      }
    }

    /// <summary>Field number for the "alpha" field.</summary>
    public const int AlphaFieldNumber = 4;
    private pb::ByteString alpha_ = pb::ByteString.Empty;
    /// <summary>
    /// random number for spend authority signature
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Alpha {
      get { return alpha_; }
      set {
        alpha_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "voucher" field.</summary>
    public const int VoucherFieldNumber = 5;
    private global::Tron.Net.Protocol.IncrementalMerkleVoucher voucher_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.IncrementalMerkleVoucher Voucher {
      get { return voucher_; }
      set {
        voucher_ = value;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 6;
    private pb::ByteString path_ = pb::ByteString.Empty;
    /// <summary>
    /// path for cm from leaf to root in merkle tree
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpendNote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpendNote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Note, other.Note)) return false;
      if (Alpha != other.Alpha) return false;
      if (!object.Equals(Voucher, other.Voucher)) return false;
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (note_ != null) hash ^= Note.GetHashCode();
      if (Alpha.Length != 0) hash ^= Alpha.GetHashCode();
      if (voucher_ != null) hash ^= Voucher.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (note_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Note);
      }
      if (Alpha.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Alpha);
      }
      if (voucher_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Voucher);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (note_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Note);
      }
      if (Alpha.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Alpha);
      }
      if (voucher_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voucher);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpendNote other) {
      if (other == null) {
        return;
      }
      if (other.note_ != null) {
        if (note_ == null) {
          Note = new global::Tron.Net.Protocol.Note();
        }
        Note.MergeFrom(other.Note);
      }
      if (other.Alpha.Length != 0) {
        Alpha = other.Alpha;
      }
      if (other.voucher_ != null) {
        if (voucher_ == null) {
          Voucher = new global::Tron.Net.Protocol.IncrementalMerkleVoucher();
        }
        Voucher.MergeFrom(other.Voucher);
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            if (note_ == null) {
              Note = new global::Tron.Net.Protocol.Note();
            }
            input.ReadMessage(Note);
            break;
          }
          case 34: {
            Alpha = input.ReadBytes();
            break;
          }
          case 42: {
            if (voucher_ == null) {
              Voucher = new global::Tron.Net.Protocol.IncrementalMerkleVoucher();
            }
            input.ReadMessage(Voucher);
            break;
          }
          case 50: {
            Path = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReceiveNote : pb::IMessage<ReceiveNote> {
    private static readonly pb::MessageParser<ReceiveNote> _parser = new pb::MessageParser<ReceiveNote>(() => new ReceiveNote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReceiveNote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveNote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveNote(ReceiveNote other) : this() {
      note_ = other.note_ != null ? other.note_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReceiveNote Clone() {
      return new ReceiveNote(this);
    }

    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 1;
    private global::Tron.Net.Protocol.Note note_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Note Note {
      get { return note_; }
      set {
        note_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReceiveNote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReceiveNote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Note, other.Note)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (note_ != null) hash ^= Note.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (note_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Note);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (note_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Note);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReceiveNote other) {
      if (other == null) {
        return;
      }
      if (other.note_ != null) {
        if (note_ == null) {
          Note = new global::Tron.Net.Protocol.Note();
        }
        Note.MergeFrom(other.Note);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (note_ == null) {
              Note = new global::Tron.Net.Protocol.Note();
            }
            input.ReadMessage(Note);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrivateParameters : pb::IMessage<PrivateParameters> {
    private static readonly pb::MessageParser<PrivateParameters> _parser = new pb::MessageParser<PrivateParameters>(() => new PrivateParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrivateParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateParameters(PrivateParameters other) : this() {
      transparentFromAddress_ = other.transparentFromAddress_;
      ask_ = other.ask_;
      nsk_ = other.nsk_;
      ovk_ = other.ovk_;
      fromAmount_ = other.fromAmount_;
      shieldedSpends_ = other.shieldedSpends_.Clone();
      shieldedReceives_ = other.shieldedReceives_.Clone();
      transparentToAddress_ = other.transparentToAddress_;
      toAmount_ = other.toAmount_;
      timeout_ = other.timeout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateParameters Clone() {
      return new PrivateParameters(this);
    }

    /// <summary>Field number for the "transparent_from_address" field.</summary>
    public const int TransparentFromAddressFieldNumber = 1;
    private pb::ByteString transparentFromAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransparentFromAddress {
      get { return transparentFromAddress_; }
      set {
        transparentFromAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ask" field.</summary>
    public const int AskFieldNumber = 2;
    private pb::ByteString ask_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ask {
      get { return ask_; }
      set {
        ask_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nsk" field.</summary>
    public const int NskFieldNumber = 3;
    private pb::ByteString nsk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nsk {
      get { return nsk_; }
      set {
        nsk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ovk" field.</summary>
    public const int OvkFieldNumber = 4;
    private pb::ByteString ovk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ovk {
      get { return ovk_; }
      set {
        ovk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from_amount" field.</summary>
    public const int FromAmountFieldNumber = 5;
    private long fromAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FromAmount {
      get { return fromAmount_; }
      set {
        fromAmount_ = value;
      }
    }

    /// <summary>Field number for the "shielded_spends" field.</summary>
    public const int ShieldedSpendsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.SpendNote> _repeated_shieldedSpends_codec
        = pb::FieldCodec.ForMessage(50, global::Tron.Net.Protocol.SpendNote.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.SpendNote> shieldedSpends_ = new pbc::RepeatedField<global::Tron.Net.Protocol.SpendNote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.SpendNote> ShieldedSpends {
      get { return shieldedSpends_; }
    }

    /// <summary>Field number for the "shielded_receives" field.</summary>
    public const int ShieldedReceivesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.ReceiveNote> _repeated_shieldedReceives_codec
        = pb::FieldCodec.ForMessage(58, global::Tron.Net.Protocol.ReceiveNote.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote> shieldedReceives_ = new pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote> ShieldedReceives {
      get { return shieldedReceives_; }
    }

    /// <summary>Field number for the "transparent_to_address" field.</summary>
    public const int TransparentToAddressFieldNumber = 8;
    private pb::ByteString transparentToAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransparentToAddress {
      get { return transparentToAddress_; }
      set {
        transparentToAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to_amount" field.</summary>
    public const int ToAmountFieldNumber = 9;
    private long toAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ToAmount {
      get { return toAmount_; }
      set {
        toAmount_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 10;
    private long timeout_;
    /// <summary>
    /// timeout in seconds, it works only when it bigger than 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrivateParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrivateParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransparentFromAddress != other.TransparentFromAddress) return false;
      if (Ask != other.Ask) return false;
      if (Nsk != other.Nsk) return false;
      if (Ovk != other.Ovk) return false;
      if (FromAmount != other.FromAmount) return false;
      if(!shieldedSpends_.Equals(other.shieldedSpends_)) return false;
      if(!shieldedReceives_.Equals(other.shieldedReceives_)) return false;
      if (TransparentToAddress != other.TransparentToAddress) return false;
      if (ToAmount != other.ToAmount) return false;
      if (Timeout != other.Timeout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransparentFromAddress.Length != 0) hash ^= TransparentFromAddress.GetHashCode();
      if (Ask.Length != 0) hash ^= Ask.GetHashCode();
      if (Nsk.Length != 0) hash ^= Nsk.GetHashCode();
      if (Ovk.Length != 0) hash ^= Ovk.GetHashCode();
      if (FromAmount != 0L) hash ^= FromAmount.GetHashCode();
      hash ^= shieldedSpends_.GetHashCode();
      hash ^= shieldedReceives_.GetHashCode();
      if (TransparentToAddress.Length != 0) hash ^= TransparentToAddress.GetHashCode();
      if (ToAmount != 0L) hash ^= ToAmount.GetHashCode();
      if (Timeout != 0L) hash ^= Timeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransparentFromAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TransparentFromAddress);
      }
      if (Ask.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Ask);
      }
      if (Nsk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Nsk);
      }
      if (Ovk.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Ovk);
      }
      if (FromAmount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FromAmount);
      }
      shieldedSpends_.WriteTo(output, _repeated_shieldedSpends_codec);
      shieldedReceives_.WriteTo(output, _repeated_shieldedReceives_codec);
      if (TransparentToAddress.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(TransparentToAddress);
      }
      if (ToAmount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ToAmount);
      }
      if (Timeout != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(Timeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransparentFromAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransparentFromAddress);
      }
      if (Ask.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ask);
      }
      if (Nsk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nsk);
      }
      if (Ovk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ovk);
      }
      if (FromAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromAmount);
      }
      size += shieldedSpends_.CalculateSize(_repeated_shieldedSpends_codec);
      size += shieldedReceives_.CalculateSize(_repeated_shieldedReceives_codec);
      if (TransparentToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransparentToAddress);
      }
      if (ToAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToAmount);
      }
      if (Timeout != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrivateParameters other) {
      if (other == null) {
        return;
      }
      if (other.TransparentFromAddress.Length != 0) {
        TransparentFromAddress = other.TransparentFromAddress;
      }
      if (other.Ask.Length != 0) {
        Ask = other.Ask;
      }
      if (other.Nsk.Length != 0) {
        Nsk = other.Nsk;
      }
      if (other.Ovk.Length != 0) {
        Ovk = other.Ovk;
      }
      if (other.FromAmount != 0L) {
        FromAmount = other.FromAmount;
      }
      shieldedSpends_.Add(other.shieldedSpends_);
      shieldedReceives_.Add(other.shieldedReceives_);
      if (other.TransparentToAddress.Length != 0) {
        TransparentToAddress = other.TransparentToAddress;
      }
      if (other.ToAmount != 0L) {
        ToAmount = other.ToAmount;
      }
      if (other.Timeout != 0L) {
        Timeout = other.Timeout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransparentFromAddress = input.ReadBytes();
            break;
          }
          case 18: {
            Ask = input.ReadBytes();
            break;
          }
          case 26: {
            Nsk = input.ReadBytes();
            break;
          }
          case 34: {
            Ovk = input.ReadBytes();
            break;
          }
          case 40: {
            FromAmount = input.ReadInt64();
            break;
          }
          case 50: {
            shieldedSpends_.AddEntriesFrom(input, _repeated_shieldedSpends_codec);
            break;
          }
          case 58: {
            shieldedReceives_.AddEntriesFrom(input, _repeated_shieldedReceives_codec);
            break;
          }
          case 66: {
            TransparentToAddress = input.ReadBytes();
            break;
          }
          case 72: {
            ToAmount = input.ReadInt64();
            break;
          }
          case 80: {
            Timeout = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrivateParametersWithoutAsk : pb::IMessage<PrivateParametersWithoutAsk> {
    private static readonly pb::MessageParser<PrivateParametersWithoutAsk> _parser = new pb::MessageParser<PrivateParametersWithoutAsk>(() => new PrivateParametersWithoutAsk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrivateParametersWithoutAsk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateParametersWithoutAsk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateParametersWithoutAsk(PrivateParametersWithoutAsk other) : this() {
      transparentFromAddress_ = other.transparentFromAddress_;
      ak_ = other.ak_;
      nsk_ = other.nsk_;
      ovk_ = other.ovk_;
      fromAmount_ = other.fromAmount_;
      shieldedSpends_ = other.shieldedSpends_.Clone();
      shieldedReceives_ = other.shieldedReceives_.Clone();
      transparentToAddress_ = other.transparentToAddress_;
      toAmount_ = other.toAmount_;
      timeout_ = other.timeout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateParametersWithoutAsk Clone() {
      return new PrivateParametersWithoutAsk(this);
    }

    /// <summary>Field number for the "transparent_from_address" field.</summary>
    public const int TransparentFromAddressFieldNumber = 1;
    private pb::ByteString transparentFromAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransparentFromAddress {
      get { return transparentFromAddress_; }
      set {
        transparentFromAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ak" field.</summary>
    public const int AkFieldNumber = 2;
    private pb::ByteString ak_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ak {
      get { return ak_; }
      set {
        ak_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nsk" field.</summary>
    public const int NskFieldNumber = 3;
    private pb::ByteString nsk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nsk {
      get { return nsk_; }
      set {
        nsk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ovk" field.</summary>
    public const int OvkFieldNumber = 4;
    private pb::ByteString ovk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ovk {
      get { return ovk_; }
      set {
        ovk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from_amount" field.</summary>
    public const int FromAmountFieldNumber = 5;
    private long fromAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FromAmount {
      get { return fromAmount_; }
      set {
        fromAmount_ = value;
      }
    }

    /// <summary>Field number for the "shielded_spends" field.</summary>
    public const int ShieldedSpendsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.SpendNote> _repeated_shieldedSpends_codec
        = pb::FieldCodec.ForMessage(50, global::Tron.Net.Protocol.SpendNote.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.SpendNote> shieldedSpends_ = new pbc::RepeatedField<global::Tron.Net.Protocol.SpendNote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.SpendNote> ShieldedSpends {
      get { return shieldedSpends_; }
    }

    /// <summary>Field number for the "shielded_receives" field.</summary>
    public const int ShieldedReceivesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.ReceiveNote> _repeated_shieldedReceives_codec
        = pb::FieldCodec.ForMessage(58, global::Tron.Net.Protocol.ReceiveNote.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote> shieldedReceives_ = new pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote> ShieldedReceives {
      get { return shieldedReceives_; }
    }

    /// <summary>Field number for the "transparent_to_address" field.</summary>
    public const int TransparentToAddressFieldNumber = 8;
    private pb::ByteString transparentToAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransparentToAddress {
      get { return transparentToAddress_; }
      set {
        transparentToAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to_amount" field.</summary>
    public const int ToAmountFieldNumber = 9;
    private long toAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ToAmount {
      get { return toAmount_; }
      set {
        toAmount_ = value;
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 10;
    private long timeout_;
    /// <summary>
    /// timeout in seconds, it works only when it bigger than 0
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrivateParametersWithoutAsk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrivateParametersWithoutAsk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransparentFromAddress != other.TransparentFromAddress) return false;
      if (Ak != other.Ak) return false;
      if (Nsk != other.Nsk) return false;
      if (Ovk != other.Ovk) return false;
      if (FromAmount != other.FromAmount) return false;
      if(!shieldedSpends_.Equals(other.shieldedSpends_)) return false;
      if(!shieldedReceives_.Equals(other.shieldedReceives_)) return false;
      if (TransparentToAddress != other.TransparentToAddress) return false;
      if (ToAmount != other.ToAmount) return false;
      if (Timeout != other.Timeout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransparentFromAddress.Length != 0) hash ^= TransparentFromAddress.GetHashCode();
      if (Ak.Length != 0) hash ^= Ak.GetHashCode();
      if (Nsk.Length != 0) hash ^= Nsk.GetHashCode();
      if (Ovk.Length != 0) hash ^= Ovk.GetHashCode();
      if (FromAmount != 0L) hash ^= FromAmount.GetHashCode();
      hash ^= shieldedSpends_.GetHashCode();
      hash ^= shieldedReceives_.GetHashCode();
      if (TransparentToAddress.Length != 0) hash ^= TransparentToAddress.GetHashCode();
      if (ToAmount != 0L) hash ^= ToAmount.GetHashCode();
      if (Timeout != 0L) hash ^= Timeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransparentFromAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TransparentFromAddress);
      }
      if (Ak.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Ak);
      }
      if (Nsk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Nsk);
      }
      if (Ovk.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Ovk);
      }
      if (FromAmount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FromAmount);
      }
      shieldedSpends_.WriteTo(output, _repeated_shieldedSpends_codec);
      shieldedReceives_.WriteTo(output, _repeated_shieldedReceives_codec);
      if (TransparentToAddress.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(TransparentToAddress);
      }
      if (ToAmount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(ToAmount);
      }
      if (Timeout != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(Timeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransparentFromAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransparentFromAddress);
      }
      if (Ak.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ak);
      }
      if (Nsk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nsk);
      }
      if (Ovk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ovk);
      }
      if (FromAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FromAmount);
      }
      size += shieldedSpends_.CalculateSize(_repeated_shieldedSpends_codec);
      size += shieldedReceives_.CalculateSize(_repeated_shieldedReceives_codec);
      if (TransparentToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransparentToAddress);
      }
      if (ToAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ToAmount);
      }
      if (Timeout != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrivateParametersWithoutAsk other) {
      if (other == null) {
        return;
      }
      if (other.TransparentFromAddress.Length != 0) {
        TransparentFromAddress = other.TransparentFromAddress;
      }
      if (other.Ak.Length != 0) {
        Ak = other.Ak;
      }
      if (other.Nsk.Length != 0) {
        Nsk = other.Nsk;
      }
      if (other.Ovk.Length != 0) {
        Ovk = other.Ovk;
      }
      if (other.FromAmount != 0L) {
        FromAmount = other.FromAmount;
      }
      shieldedSpends_.Add(other.shieldedSpends_);
      shieldedReceives_.Add(other.shieldedReceives_);
      if (other.TransparentToAddress.Length != 0) {
        TransparentToAddress = other.TransparentToAddress;
      }
      if (other.ToAmount != 0L) {
        ToAmount = other.ToAmount;
      }
      if (other.Timeout != 0L) {
        Timeout = other.Timeout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransparentFromAddress = input.ReadBytes();
            break;
          }
          case 18: {
            Ak = input.ReadBytes();
            break;
          }
          case 26: {
            Nsk = input.ReadBytes();
            break;
          }
          case 34: {
            Ovk = input.ReadBytes();
            break;
          }
          case 40: {
            FromAmount = input.ReadInt64();
            break;
          }
          case 50: {
            shieldedSpends_.AddEntriesFrom(input, _repeated_shieldedSpends_codec);
            break;
          }
          case 58: {
            shieldedReceives_.AddEntriesFrom(input, _repeated_shieldedReceives_codec);
            break;
          }
          case 66: {
            TransparentToAddress = input.ReadBytes();
            break;
          }
          case 72: {
            ToAmount = input.ReadInt64();
            break;
          }
          case 80: {
            Timeout = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpendAuthSigParameters : pb::IMessage<SpendAuthSigParameters> {
    private static readonly pb::MessageParser<SpendAuthSigParameters> _parser = new pb::MessageParser<SpendAuthSigParameters>(() => new SpendAuthSigParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpendAuthSigParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendAuthSigParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendAuthSigParameters(SpendAuthSigParameters other) : this() {
      ask_ = other.ask_;
      txHash_ = other.txHash_;
      alpha_ = other.alpha_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendAuthSigParameters Clone() {
      return new SpendAuthSigParameters(this);
    }

    /// <summary>Field number for the "ask" field.</summary>
    public const int AskFieldNumber = 1;
    private pb::ByteString ask_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ask {
      get { return ask_; }
      set {
        ask_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tx_hash" field.</summary>
    public const int TxHashFieldNumber = 2;
    private pb::ByteString txHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TxHash {
      get { return txHash_; }
      set {
        txHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "alpha" field.</summary>
    public const int AlphaFieldNumber = 3;
    private pb::ByteString alpha_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Alpha {
      get { return alpha_; }
      set {
        alpha_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpendAuthSigParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpendAuthSigParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ask != other.Ask) return false;
      if (TxHash != other.TxHash) return false;
      if (Alpha != other.Alpha) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ask.Length != 0) hash ^= Ask.GetHashCode();
      if (TxHash.Length != 0) hash ^= TxHash.GetHashCode();
      if (Alpha.Length != 0) hash ^= Alpha.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ask.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Ask);
      }
      if (TxHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(TxHash);
      }
      if (Alpha.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Alpha);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ask.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ask);
      }
      if (TxHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TxHash);
      }
      if (Alpha.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Alpha);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpendAuthSigParameters other) {
      if (other == null) {
        return;
      }
      if (other.Ask.Length != 0) {
        Ask = other.Ask;
      }
      if (other.TxHash.Length != 0) {
        TxHash = other.TxHash;
      }
      if (other.Alpha.Length != 0) {
        Alpha = other.Alpha;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ask = input.ReadBytes();
            break;
          }
          case 18: {
            TxHash = input.ReadBytes();
            break;
          }
          case 26: {
            Alpha = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NfParameters : pb::IMessage<NfParameters> {
    private static readonly pb::MessageParser<NfParameters> _parser = new pb::MessageParser<NfParameters>(() => new NfParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NfParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NfParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NfParameters(NfParameters other) : this() {
      note_ = other.note_ != null ? other.note_.Clone() : null;
      voucher_ = other.voucher_ != null ? other.voucher_.Clone() : null;
      ak_ = other.ak_;
      nk_ = other.nk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NfParameters Clone() {
      return new NfParameters(this);
    }

    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 1;
    private global::Tron.Net.Protocol.Note note_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Note Note {
      get { return note_; }
      set {
        note_ = value;
      }
    }

    /// <summary>Field number for the "voucher" field.</summary>
    public const int VoucherFieldNumber = 2;
    private global::Tron.Net.Protocol.IncrementalMerkleVoucher voucher_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.IncrementalMerkleVoucher Voucher {
      get { return voucher_; }
      set {
        voucher_ = value;
      }
    }

    /// <summary>Field number for the "ak" field.</summary>
    public const int AkFieldNumber = 3;
    private pb::ByteString ak_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ak {
      get { return ak_; }
      set {
        ak_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nk" field.</summary>
    public const int NkFieldNumber = 4;
    private pb::ByteString nk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nk {
      get { return nk_; }
      set {
        nk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NfParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NfParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Note, other.Note)) return false;
      if (!object.Equals(Voucher, other.Voucher)) return false;
      if (Ak != other.Ak) return false;
      if (Nk != other.Nk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (note_ != null) hash ^= Note.GetHashCode();
      if (voucher_ != null) hash ^= Voucher.GetHashCode();
      if (Ak.Length != 0) hash ^= Ak.GetHashCode();
      if (Nk.Length != 0) hash ^= Nk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (note_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Note);
      }
      if (voucher_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Voucher);
      }
      if (Ak.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Ak);
      }
      if (Nk.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Nk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (note_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Note);
      }
      if (voucher_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Voucher);
      }
      if (Ak.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ak);
      }
      if (Nk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NfParameters other) {
      if (other == null) {
        return;
      }
      if (other.note_ != null) {
        if (note_ == null) {
          Note = new global::Tron.Net.Protocol.Note();
        }
        Note.MergeFrom(other.Note);
      }
      if (other.voucher_ != null) {
        if (voucher_ == null) {
          Voucher = new global::Tron.Net.Protocol.IncrementalMerkleVoucher();
        }
        Voucher.MergeFrom(other.Voucher);
      }
      if (other.Ak.Length != 0) {
        Ak = other.Ak;
      }
      if (other.Nk.Length != 0) {
        Nk = other.Nk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (note_ == null) {
              Note = new global::Tron.Net.Protocol.Note();
            }
            input.ReadMessage(Note);
            break;
          }
          case 18: {
            if (voucher_ == null) {
              Voucher = new global::Tron.Net.Protocol.IncrementalMerkleVoucher();
            }
            input.ReadMessage(Voucher);
            break;
          }
          case 26: {
            Ak = input.ReadBytes();
            break;
          }
          case 34: {
            Nk = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ExpandedSpendingKeyMessage : pb::IMessage<ExpandedSpendingKeyMessage> {
    private static readonly pb::MessageParser<ExpandedSpendingKeyMessage> _parser = new pb::MessageParser<ExpandedSpendingKeyMessage>(() => new ExpandedSpendingKeyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExpandedSpendingKeyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedSpendingKeyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedSpendingKeyMessage(ExpandedSpendingKeyMessage other) : this() {
      ask_ = other.ask_;
      nsk_ = other.nsk_;
      ovk_ = other.ovk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExpandedSpendingKeyMessage Clone() {
      return new ExpandedSpendingKeyMessage(this);
    }

    /// <summary>Field number for the "ask" field.</summary>
    public const int AskFieldNumber = 1;
    private pb::ByteString ask_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ask {
      get { return ask_; }
      set {
        ask_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nsk" field.</summary>
    public const int NskFieldNumber = 2;
    private pb::ByteString nsk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nsk {
      get { return nsk_; }
      set {
        nsk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ovk" field.</summary>
    public const int OvkFieldNumber = 3;
    private pb::ByteString ovk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ovk {
      get { return ovk_; }
      set {
        ovk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExpandedSpendingKeyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExpandedSpendingKeyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ask != other.Ask) return false;
      if (Nsk != other.Nsk) return false;
      if (Ovk != other.Ovk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ask.Length != 0) hash ^= Ask.GetHashCode();
      if (Nsk.Length != 0) hash ^= Nsk.GetHashCode();
      if (Ovk.Length != 0) hash ^= Ovk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ask.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Ask);
      }
      if (Nsk.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Nsk);
      }
      if (Ovk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Ovk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ask.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ask);
      }
      if (Nsk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nsk);
      }
      if (Ovk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ovk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExpandedSpendingKeyMessage other) {
      if (other == null) {
        return;
      }
      if (other.Ask.Length != 0) {
        Ask = other.Ask;
      }
      if (other.Nsk.Length != 0) {
        Nsk = other.Nsk;
      }
      if (other.Ovk.Length != 0) {
        Ovk = other.Ovk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ask = input.ReadBytes();
            break;
          }
          case 18: {
            Nsk = input.ReadBytes();
            break;
          }
          case 26: {
            Ovk = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ViewingKeyMessage : pb::IMessage<ViewingKeyMessage> {
    private static readonly pb::MessageParser<ViewingKeyMessage> _parser = new pb::MessageParser<ViewingKeyMessage>(() => new ViewingKeyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ViewingKeyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewingKeyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewingKeyMessage(ViewingKeyMessage other) : this() {
      ak_ = other.ak_;
      nk_ = other.nk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ViewingKeyMessage Clone() {
      return new ViewingKeyMessage(this);
    }

    /// <summary>Field number for the "ak" field.</summary>
    public const int AkFieldNumber = 1;
    private pb::ByteString ak_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ak {
      get { return ak_; }
      set {
        ak_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nk" field.</summary>
    public const int NkFieldNumber = 2;
    private pb::ByteString nk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nk {
      get { return nk_; }
      set {
        nk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ViewingKeyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ViewingKeyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ak != other.Ak) return false;
      if (Nk != other.Nk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ak.Length != 0) hash ^= Ak.GetHashCode();
      if (Nk.Length != 0) hash ^= Nk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ak.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Ak);
      }
      if (Nk.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Nk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ak.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ak);
      }
      if (Nk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ViewingKeyMessage other) {
      if (other == null) {
        return;
      }
      if (other.Ak.Length != 0) {
        Ak = other.Ak;
      }
      if (other.Nk.Length != 0) {
        Nk = other.Nk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ak = input.ReadBytes();
            break;
          }
          case 18: {
            Nk = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IncomingViewingKeyMessage : pb::IMessage<IncomingViewingKeyMessage> {
    private static readonly pb::MessageParser<IncomingViewingKeyMessage> _parser = new pb::MessageParser<IncomingViewingKeyMessage>(() => new IncomingViewingKeyMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncomingViewingKeyMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncomingViewingKeyMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncomingViewingKeyMessage(IncomingViewingKeyMessage other) : this() {
      ivk_ = other.ivk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncomingViewingKeyMessage Clone() {
      return new IncomingViewingKeyMessage(this);
    }

    /// <summary>Field number for the "ivk" field.</summary>
    public const int IvkFieldNumber = 1;
    private pb::ByteString ivk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ivk {
      get { return ivk_; }
      set {
        ivk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncomingViewingKeyMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncomingViewingKeyMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ivk != other.Ivk) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ivk.Length != 0) hash ^= Ivk.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ivk.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Ivk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ivk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ivk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncomingViewingKeyMessage other) {
      if (other == null) {
        return;
      }
      if (other.Ivk.Length != 0) {
        Ivk = other.Ivk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ivk = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DiversifierMessage : pb::IMessage<DiversifierMessage> {
    private static readonly pb::MessageParser<DiversifierMessage> _parser = new pb::MessageParser<DiversifierMessage>(() => new DiversifierMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DiversifierMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiversifierMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiversifierMessage(DiversifierMessage other) : this() {
      d_ = other.d_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DiversifierMessage Clone() {
      return new DiversifierMessage(this);
    }

    /// <summary>Field number for the "d" field.</summary>
    public const int DFieldNumber = 1;
    private pb::ByteString d_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString D {
      get { return d_; }
      set {
        d_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DiversifierMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DiversifierMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (D != other.D) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (D.Length != 0) hash ^= D.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (D.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(D);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (D.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(D);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DiversifierMessage other) {
      if (other == null) {
        return;
      }
      if (other.D.Length != 0) {
        D = other.D;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            D = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IncomingViewingKeyDiversifierMessage : pb::IMessage<IncomingViewingKeyDiversifierMessage> {
    private static readonly pb::MessageParser<IncomingViewingKeyDiversifierMessage> _parser = new pb::MessageParser<IncomingViewingKeyDiversifierMessage>(() => new IncomingViewingKeyDiversifierMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IncomingViewingKeyDiversifierMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncomingViewingKeyDiversifierMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncomingViewingKeyDiversifierMessage(IncomingViewingKeyDiversifierMessage other) : this() {
      ivk_ = other.ivk_ != null ? other.ivk_.Clone() : null;
      d_ = other.d_ != null ? other.d_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IncomingViewingKeyDiversifierMessage Clone() {
      return new IncomingViewingKeyDiversifierMessage(this);
    }

    /// <summary>Field number for the "ivk" field.</summary>
    public const int IvkFieldNumber = 1;
    private global::Tron.Net.Protocol.IncomingViewingKeyMessage ivk_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.IncomingViewingKeyMessage Ivk {
      get { return ivk_; }
      set {
        ivk_ = value;
      }
    }

    /// <summary>Field number for the "d" field.</summary>
    public const int DFieldNumber = 2;
    private global::Tron.Net.Protocol.DiversifierMessage d_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.DiversifierMessage D {
      get { return d_; }
      set {
        d_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IncomingViewingKeyDiversifierMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IncomingViewingKeyDiversifierMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Ivk, other.Ivk)) return false;
      if (!object.Equals(D, other.D)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ivk_ != null) hash ^= Ivk.GetHashCode();
      if (d_ != null) hash ^= D.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ivk_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Ivk);
      }
      if (d_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(D);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ivk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ivk);
      }
      if (d_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(D);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IncomingViewingKeyDiversifierMessage other) {
      if (other == null) {
        return;
      }
      if (other.ivk_ != null) {
        if (ivk_ == null) {
          Ivk = new global::Tron.Net.Protocol.IncomingViewingKeyMessage();
        }
        Ivk.MergeFrom(other.Ivk);
      }
      if (other.d_ != null) {
        if (d_ == null) {
          D = new global::Tron.Net.Protocol.DiversifierMessage();
        }
        D.MergeFrom(other.D);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ivk_ == null) {
              Ivk = new global::Tron.Net.Protocol.IncomingViewingKeyMessage();
            }
            input.ReadMessage(Ivk);
            break;
          }
          case 18: {
            if (d_ == null) {
              D = new global::Tron.Net.Protocol.DiversifierMessage();
            }
            input.ReadMessage(D);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PaymentAddressMessage : pb::IMessage<PaymentAddressMessage> {
    private static readonly pb::MessageParser<PaymentAddressMessage> _parser = new pb::MessageParser<PaymentAddressMessage>(() => new PaymentAddressMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaymentAddressMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentAddressMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentAddressMessage(PaymentAddressMessage other) : this() {
      d_ = other.d_ != null ? other.d_.Clone() : null;
      pkD_ = other.pkD_;
      paymentAddress_ = other.paymentAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentAddressMessage Clone() {
      return new PaymentAddressMessage(this);
    }

    /// <summary>Field number for the "d" field.</summary>
    public const int DFieldNumber = 1;
    private global::Tron.Net.Protocol.DiversifierMessage d_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.DiversifierMessage D {
      get { return d_; }
      set {
        d_ = value;
      }
    }

    /// <summary>Field number for the "pkD" field.</summary>
    public const int PkDFieldNumber = 2;
    private pb::ByteString pkD_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PkD {
      get { return pkD_; }
      set {
        pkD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payment_address" field.</summary>
    public const int PaymentAddressFieldNumber = 3;
    private string paymentAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentAddress {
      get { return paymentAddress_; }
      set {
        paymentAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaymentAddressMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaymentAddressMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(D, other.D)) return false;
      if (PkD != other.PkD) return false;
      if (PaymentAddress != other.PaymentAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (d_ != null) hash ^= D.GetHashCode();
      if (PkD.Length != 0) hash ^= PkD.GetHashCode();
      if (PaymentAddress.Length != 0) hash ^= PaymentAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (d_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(D);
      }
      if (PkD.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PkD);
      }
      if (PaymentAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PaymentAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (d_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(D);
      }
      if (PkD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PkD);
      }
      if (PaymentAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PaymentAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaymentAddressMessage other) {
      if (other == null) {
        return;
      }
      if (other.d_ != null) {
        if (d_ == null) {
          D = new global::Tron.Net.Protocol.DiversifierMessage();
        }
        D.MergeFrom(other.D);
      }
      if (other.PkD.Length != 0) {
        PkD = other.PkD;
      }
      if (other.PaymentAddress.Length != 0) {
        PaymentAddress = other.PaymentAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (d_ == null) {
              D = new global::Tron.Net.Protocol.DiversifierMessage();
            }
            input.ReadMessage(D);
            break;
          }
          case 18: {
            PkD = input.ReadBytes();
            break;
          }
          case 26: {
            PaymentAddress = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShieldedAddressInfo : pb::IMessage<ShieldedAddressInfo> {
    private static readonly pb::MessageParser<ShieldedAddressInfo> _parser = new pb::MessageParser<ShieldedAddressInfo>(() => new ShieldedAddressInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShieldedAddressInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedAddressInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedAddressInfo(ShieldedAddressInfo other) : this() {
      sk_ = other.sk_;
      ask_ = other.ask_;
      nsk_ = other.nsk_;
      ovk_ = other.ovk_;
      ak_ = other.ak_;
      nk_ = other.nk_;
      ivk_ = other.ivk_;
      d_ = other.d_;
      pkD_ = other.pkD_;
      paymentAddress_ = other.paymentAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedAddressInfo Clone() {
      return new ShieldedAddressInfo(this);
    }

    /// <summary>Field number for the "sk" field.</summary>
    public const int SkFieldNumber = 1;
    private pb::ByteString sk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Sk {
      get { return sk_; }
      set {
        sk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ask" field.</summary>
    public const int AskFieldNumber = 2;
    private pb::ByteString ask_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ask {
      get { return ask_; }
      set {
        ask_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nsk" field.</summary>
    public const int NskFieldNumber = 3;
    private pb::ByteString nsk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nsk {
      get { return nsk_; }
      set {
        nsk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ovk" field.</summary>
    public const int OvkFieldNumber = 4;
    private pb::ByteString ovk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ovk {
      get { return ovk_; }
      set {
        ovk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ak" field.</summary>
    public const int AkFieldNumber = 5;
    private pb::ByteString ak_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ak {
      get { return ak_; }
      set {
        ak_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nk" field.</summary>
    public const int NkFieldNumber = 6;
    private pb::ByteString nk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nk {
      get { return nk_; }
      set {
        nk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ivk" field.</summary>
    public const int IvkFieldNumber = 7;
    private pb::ByteString ivk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ivk {
      get { return ivk_; }
      set {
        ivk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "d" field.</summary>
    public const int DFieldNumber = 8;
    private pb::ByteString d_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString D {
      get { return d_; }
      set {
        d_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pkD" field.</summary>
    public const int PkDFieldNumber = 9;
    private pb::ByteString pkD_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PkD {
      get { return pkD_; }
      set {
        pkD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payment_address" field.</summary>
    public const int PaymentAddressFieldNumber = 10;
    private string paymentAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PaymentAddress {
      get { return paymentAddress_; }
      set {
        paymentAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShieldedAddressInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShieldedAddressInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sk != other.Sk) return false;
      if (Ask != other.Ask) return false;
      if (Nsk != other.Nsk) return false;
      if (Ovk != other.Ovk) return false;
      if (Ak != other.Ak) return false;
      if (Nk != other.Nk) return false;
      if (Ivk != other.Ivk) return false;
      if (D != other.D) return false;
      if (PkD != other.PkD) return false;
      if (PaymentAddress != other.PaymentAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sk.Length != 0) hash ^= Sk.GetHashCode();
      if (Ask.Length != 0) hash ^= Ask.GetHashCode();
      if (Nsk.Length != 0) hash ^= Nsk.GetHashCode();
      if (Ovk.Length != 0) hash ^= Ovk.GetHashCode();
      if (Ak.Length != 0) hash ^= Ak.GetHashCode();
      if (Nk.Length != 0) hash ^= Nk.GetHashCode();
      if (Ivk.Length != 0) hash ^= Ivk.GetHashCode();
      if (D.Length != 0) hash ^= D.GetHashCode();
      if (PkD.Length != 0) hash ^= PkD.GetHashCode();
      if (PaymentAddress.Length != 0) hash ^= PaymentAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sk.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Sk);
      }
      if (Ask.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Ask);
      }
      if (Nsk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Nsk);
      }
      if (Ovk.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Ovk);
      }
      if (Ak.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Ak);
      }
      if (Nk.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Nk);
      }
      if (Ivk.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(Ivk);
      }
      if (D.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(D);
      }
      if (PkD.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(PkD);
      }
      if (PaymentAddress.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(PaymentAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Sk);
      }
      if (Ask.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ask);
      }
      if (Nsk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nsk);
      }
      if (Ovk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ovk);
      }
      if (Ak.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ak);
      }
      if (Nk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nk);
      }
      if (Ivk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ivk);
      }
      if (D.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(D);
      }
      if (PkD.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PkD);
      }
      if (PaymentAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PaymentAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShieldedAddressInfo other) {
      if (other == null) {
        return;
      }
      if (other.Sk.Length != 0) {
        Sk = other.Sk;
      }
      if (other.Ask.Length != 0) {
        Ask = other.Ask;
      }
      if (other.Nsk.Length != 0) {
        Nsk = other.Nsk;
      }
      if (other.Ovk.Length != 0) {
        Ovk = other.Ovk;
      }
      if (other.Ak.Length != 0) {
        Ak = other.Ak;
      }
      if (other.Nk.Length != 0) {
        Nk = other.Nk;
      }
      if (other.Ivk.Length != 0) {
        Ivk = other.Ivk;
      }
      if (other.D.Length != 0) {
        D = other.D;
      }
      if (other.PkD.Length != 0) {
        PkD = other.PkD;
      }
      if (other.PaymentAddress.Length != 0) {
        PaymentAddress = other.PaymentAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Sk = input.ReadBytes();
            break;
          }
          case 18: {
            Ask = input.ReadBytes();
            break;
          }
          case 26: {
            Nsk = input.ReadBytes();
            break;
          }
          case 34: {
            Ovk = input.ReadBytes();
            break;
          }
          case 42: {
            Ak = input.ReadBytes();
            break;
          }
          case 50: {
            Nk = input.ReadBytes();
            break;
          }
          case 58: {
            Ivk = input.ReadBytes();
            break;
          }
          case 66: {
            D = input.ReadBytes();
            break;
          }
          case 74: {
            PkD = input.ReadBytes();
            break;
          }
          case 82: {
            PaymentAddress = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NoteParameters : pb::IMessage<NoteParameters> {
    private static readonly pb::MessageParser<NoteParameters> _parser = new pb::MessageParser<NoteParameters>(() => new NoteParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NoteParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoteParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoteParameters(NoteParameters other) : this() {
      ak_ = other.ak_;
      nk_ = other.nk_;
      note_ = other.note_ != null ? other.note_.Clone() : null;
      txid_ = other.txid_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NoteParameters Clone() {
      return new NoteParameters(this);
    }

    /// <summary>Field number for the "ak" field.</summary>
    public const int AkFieldNumber = 1;
    private pb::ByteString ak_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ak {
      get { return ak_; }
      set {
        ak_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nk" field.</summary>
    public const int NkFieldNumber = 2;
    private pb::ByteString nk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nk {
      get { return nk_; }
      set {
        nk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 3;
    private global::Tron.Net.Protocol.Note note_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Note Note {
      get { return note_; }
      set {
        note_ = value;
      }
    }

    /// <summary>Field number for the "txid" field.</summary>
    public const int TxidFieldNumber = 4;
    private pb::ByteString txid_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Txid {
      get { return txid_; }
      set {
        txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 5;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NoteParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NoteParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ak != other.Ak) return false;
      if (Nk != other.Nk) return false;
      if (!object.Equals(Note, other.Note)) return false;
      if (Txid != other.Txid) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ak.Length != 0) hash ^= Ak.GetHashCode();
      if (Nk.Length != 0) hash ^= Nk.GetHashCode();
      if (note_ != null) hash ^= Note.GetHashCode();
      if (Txid.Length != 0) hash ^= Txid.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ak.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Ak);
      }
      if (Nk.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Nk);
      }
      if (note_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Note);
      }
      if (Txid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Txid);
      }
      if (Index != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ak.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ak);
      }
      if (Nk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nk);
      }
      if (note_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Note);
      }
      if (Txid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Txid);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NoteParameters other) {
      if (other == null) {
        return;
      }
      if (other.Ak.Length != 0) {
        Ak = other.Ak;
      }
      if (other.Nk.Length != 0) {
        Nk = other.Nk;
      }
      if (other.note_ != null) {
        if (note_ == null) {
          Note = new global::Tron.Net.Protocol.Note();
        }
        Note.MergeFrom(other.Note);
      }
      if (other.Txid.Length != 0) {
        Txid = other.Txid;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ak = input.ReadBytes();
            break;
          }
          case 18: {
            Nk = input.ReadBytes();
            break;
          }
          case 26: {
            if (note_ == null) {
              Note = new global::Tron.Net.Protocol.Note();
            }
            input.ReadMessage(Note);
            break;
          }
          case 34: {
            Txid = input.ReadBytes();
            break;
          }
          case 40: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpendResult : pb::IMessage<SpendResult> {
    private static readonly pb::MessageParser<SpendResult> _parser = new pb::MessageParser<SpendResult>(() => new SpendResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpendResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendResult(SpendResult other) : this() {
      result_ = other.result_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendResult Clone() {
      return new SpendResult(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private bool result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpendResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpendResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != false) hash ^= Result.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != false) {
        output.WriteRawTag(8);
        output.WriteBool(Result);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != false) {
        size += 1 + 1;
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpendResult other) {
      if (other == null) {
        return;
      }
      if (other.Result != false) {
        Result = other.Result;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadBool();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionInfoList : pb::IMessage<TransactionInfoList> {
    private static readonly pb::MessageParser<TransactionInfoList> _parser = new pb::MessageParser<TransactionInfoList>(() => new TransactionInfoList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionInfoList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionInfoList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionInfoList(TransactionInfoList other) : this() {
      transactionInfo_ = other.transactionInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionInfoList Clone() {
      return new TransactionInfoList(this);
    }

    /// <summary>Field number for the "transactionInfo" field.</summary>
    public const int TransactionInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.TransactionInfo> _repeated_transactionInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.TransactionInfo.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.TransactionInfo> transactionInfo_ = new pbc::RepeatedField<global::Tron.Net.Protocol.TransactionInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.TransactionInfo> TransactionInfo {
      get { return transactionInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionInfoList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionInfoList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactionInfo_.Equals(other.transactionInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactionInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactionInfo_.WriteTo(output, _repeated_transactionInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactionInfo_.CalculateSize(_repeated_transactionInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionInfoList other) {
      if (other == null) {
        return;
      }
      transactionInfo_.Add(other.transactionInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactionInfo_.AddEntriesFrom(input, _repeated_transactionInfo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SpendNoteTRC20 : pb::IMessage<SpendNoteTRC20> {
    private static readonly pb::MessageParser<SpendNoteTRC20> _parser = new pb::MessageParser<SpendNoteTRC20>(() => new SpendNoteTRC20());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SpendNoteTRC20> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendNoteTRC20() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendNoteTRC20(SpendNoteTRC20 other) : this() {
      note_ = other.note_ != null ? other.note_.Clone() : null;
      alpha_ = other.alpha_;
      root_ = other.root_;
      path_ = other.path_;
      pos_ = other.pos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SpendNoteTRC20 Clone() {
      return new SpendNoteTRC20(this);
    }

    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 1;
    private global::Tron.Net.Protocol.Note note_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Note Note {
      get { return note_; }
      set {
        note_ = value;
      }
    }

    /// <summary>Field number for the "alpha" field.</summary>
    public const int AlphaFieldNumber = 2;
    private pb::ByteString alpha_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Alpha {
      get { return alpha_; }
      set {
        alpha_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "root" field.</summary>
    public const int RootFieldNumber = 3;
    private pb::ByteString root_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Root {
      get { return root_; }
      set {
        root_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 4;
    private pb::ByteString path_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 5;
    private long pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SpendNoteTRC20);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SpendNoteTRC20 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Note, other.Note)) return false;
      if (Alpha != other.Alpha) return false;
      if (Root != other.Root) return false;
      if (Path != other.Path) return false;
      if (Pos != other.Pos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (note_ != null) hash ^= Note.GetHashCode();
      if (Alpha.Length != 0) hash ^= Alpha.GetHashCode();
      if (Root.Length != 0) hash ^= Root.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (Pos != 0L) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (note_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Note);
      }
      if (Alpha.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Alpha);
      }
      if (Root.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Root);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Path);
      }
      if (Pos != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (note_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Note);
      }
      if (Alpha.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Alpha);
      }
      if (Root.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Root);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Path);
      }
      if (Pos != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SpendNoteTRC20 other) {
      if (other == null) {
        return;
      }
      if (other.note_ != null) {
        if (note_ == null) {
          Note = new global::Tron.Net.Protocol.Note();
        }
        Note.MergeFrom(other.Note);
      }
      if (other.Alpha.Length != 0) {
        Alpha = other.Alpha;
      }
      if (other.Root.Length != 0) {
        Root = other.Root;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.Pos != 0L) {
        Pos = other.Pos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (note_ == null) {
              Note = new global::Tron.Net.Protocol.Note();
            }
            input.ReadMessage(Note);
            break;
          }
          case 18: {
            Alpha = input.ReadBytes();
            break;
          }
          case 26: {
            Root = input.ReadBytes();
            break;
          }
          case 34: {
            Path = input.ReadBytes();
            break;
          }
          case 40: {
            Pos = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrivateShieldedTRC20Parameters : pb::IMessage<PrivateShieldedTRC20Parameters> {
    private static readonly pb::MessageParser<PrivateShieldedTRC20Parameters> _parser = new pb::MessageParser<PrivateShieldedTRC20Parameters>(() => new PrivateShieldedTRC20Parameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrivateShieldedTRC20Parameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateShieldedTRC20Parameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateShieldedTRC20Parameters(PrivateShieldedTRC20Parameters other) : this() {
      ask_ = other.ask_;
      nsk_ = other.nsk_;
      ovk_ = other.ovk_;
      fromAmount_ = other.fromAmount_;
      shieldedSpends_ = other.shieldedSpends_.Clone();
      shieldedReceives_ = other.shieldedReceives_.Clone();
      transparentToAddress_ = other.transparentToAddress_;
      toAmount_ = other.toAmount_;
      shieldedTRC20ContractAddress_ = other.shieldedTRC20ContractAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateShieldedTRC20Parameters Clone() {
      return new PrivateShieldedTRC20Parameters(this);
    }

    /// <summary>Field number for the "ask" field.</summary>
    public const int AskFieldNumber = 1;
    private pb::ByteString ask_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ask {
      get { return ask_; }
      set {
        ask_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nsk" field.</summary>
    public const int NskFieldNumber = 2;
    private pb::ByteString nsk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nsk {
      get { return nsk_; }
      set {
        nsk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ovk" field.</summary>
    public const int OvkFieldNumber = 3;
    private pb::ByteString ovk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ovk {
      get { return ovk_; }
      set {
        ovk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from_amount" field.</summary>
    public const int FromAmountFieldNumber = 4;
    private string fromAmount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromAmount {
      get { return fromAmount_; }
      set {
        fromAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shielded_spends" field.</summary>
    public const int ShieldedSpendsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.SpendNoteTRC20> _repeated_shieldedSpends_codec
        = pb::FieldCodec.ForMessage(42, global::Tron.Net.Protocol.SpendNoteTRC20.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.SpendNoteTRC20> shieldedSpends_ = new pbc::RepeatedField<global::Tron.Net.Protocol.SpendNoteTRC20>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.SpendNoteTRC20> ShieldedSpends {
      get { return shieldedSpends_; }
    }

    /// <summary>Field number for the "shielded_receives" field.</summary>
    public const int ShieldedReceivesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.ReceiveNote> _repeated_shieldedReceives_codec
        = pb::FieldCodec.ForMessage(50, global::Tron.Net.Protocol.ReceiveNote.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote> shieldedReceives_ = new pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote> ShieldedReceives {
      get { return shieldedReceives_; }
    }

    /// <summary>Field number for the "transparent_to_address" field.</summary>
    public const int TransparentToAddressFieldNumber = 7;
    private pb::ByteString transparentToAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransparentToAddress {
      get { return transparentToAddress_; }
      set {
        transparentToAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to_amount" field.</summary>
    public const int ToAmountFieldNumber = 8;
    private string toAmount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToAmount {
      get { return toAmount_; }
      set {
        toAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shielded_TRC20_contract_address" field.</summary>
    public const int ShieldedTRC20ContractAddressFieldNumber = 9;
    private pb::ByteString shieldedTRC20ContractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ShieldedTRC20ContractAddress {
      get { return shieldedTRC20ContractAddress_; }
      set {
        shieldedTRC20ContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrivateShieldedTRC20Parameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrivateShieldedTRC20Parameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ask != other.Ask) return false;
      if (Nsk != other.Nsk) return false;
      if (Ovk != other.Ovk) return false;
      if (FromAmount != other.FromAmount) return false;
      if(!shieldedSpends_.Equals(other.shieldedSpends_)) return false;
      if(!shieldedReceives_.Equals(other.shieldedReceives_)) return false;
      if (TransparentToAddress != other.TransparentToAddress) return false;
      if (ToAmount != other.ToAmount) return false;
      if (ShieldedTRC20ContractAddress != other.ShieldedTRC20ContractAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ask.Length != 0) hash ^= Ask.GetHashCode();
      if (Nsk.Length != 0) hash ^= Nsk.GetHashCode();
      if (Ovk.Length != 0) hash ^= Ovk.GetHashCode();
      if (FromAmount.Length != 0) hash ^= FromAmount.GetHashCode();
      hash ^= shieldedSpends_.GetHashCode();
      hash ^= shieldedReceives_.GetHashCode();
      if (TransparentToAddress.Length != 0) hash ^= TransparentToAddress.GetHashCode();
      if (ToAmount.Length != 0) hash ^= ToAmount.GetHashCode();
      if (ShieldedTRC20ContractAddress.Length != 0) hash ^= ShieldedTRC20ContractAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ask.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Ask);
      }
      if (Nsk.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Nsk);
      }
      if (Ovk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Ovk);
      }
      if (FromAmount.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FromAmount);
      }
      shieldedSpends_.WriteTo(output, _repeated_shieldedSpends_codec);
      shieldedReceives_.WriteTo(output, _repeated_shieldedReceives_codec);
      if (TransparentToAddress.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(TransparentToAddress);
      }
      if (ToAmount.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ToAmount);
      }
      if (ShieldedTRC20ContractAddress.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(ShieldedTRC20ContractAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ask.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ask);
      }
      if (Nsk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nsk);
      }
      if (Ovk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ovk);
      }
      if (FromAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromAmount);
      }
      size += shieldedSpends_.CalculateSize(_repeated_shieldedSpends_codec);
      size += shieldedReceives_.CalculateSize(_repeated_shieldedReceives_codec);
      if (TransparentToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransparentToAddress);
      }
      if (ToAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToAmount);
      }
      if (ShieldedTRC20ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShieldedTRC20ContractAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrivateShieldedTRC20Parameters other) {
      if (other == null) {
        return;
      }
      if (other.Ask.Length != 0) {
        Ask = other.Ask;
      }
      if (other.Nsk.Length != 0) {
        Nsk = other.Nsk;
      }
      if (other.Ovk.Length != 0) {
        Ovk = other.Ovk;
      }
      if (other.FromAmount.Length != 0) {
        FromAmount = other.FromAmount;
      }
      shieldedSpends_.Add(other.shieldedSpends_);
      shieldedReceives_.Add(other.shieldedReceives_);
      if (other.TransparentToAddress.Length != 0) {
        TransparentToAddress = other.TransparentToAddress;
      }
      if (other.ToAmount.Length != 0) {
        ToAmount = other.ToAmount;
      }
      if (other.ShieldedTRC20ContractAddress.Length != 0) {
        ShieldedTRC20ContractAddress = other.ShieldedTRC20ContractAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ask = input.ReadBytes();
            break;
          }
          case 18: {
            Nsk = input.ReadBytes();
            break;
          }
          case 26: {
            Ovk = input.ReadBytes();
            break;
          }
          case 34: {
            FromAmount = input.ReadString();
            break;
          }
          case 42: {
            shieldedSpends_.AddEntriesFrom(input, _repeated_shieldedSpends_codec);
            break;
          }
          case 50: {
            shieldedReceives_.AddEntriesFrom(input, _repeated_shieldedReceives_codec);
            break;
          }
          case 58: {
            TransparentToAddress = input.ReadBytes();
            break;
          }
          case 66: {
            ToAmount = input.ReadString();
            break;
          }
          case 74: {
            ShieldedTRC20ContractAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PrivateShieldedTRC20ParametersWithoutAsk : pb::IMessage<PrivateShieldedTRC20ParametersWithoutAsk> {
    private static readonly pb::MessageParser<PrivateShieldedTRC20ParametersWithoutAsk> _parser = new pb::MessageParser<PrivateShieldedTRC20ParametersWithoutAsk>(() => new PrivateShieldedTRC20ParametersWithoutAsk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrivateShieldedTRC20ParametersWithoutAsk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateShieldedTRC20ParametersWithoutAsk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateShieldedTRC20ParametersWithoutAsk(PrivateShieldedTRC20ParametersWithoutAsk other) : this() {
      ak_ = other.ak_;
      nsk_ = other.nsk_;
      ovk_ = other.ovk_;
      fromAmount_ = other.fromAmount_;
      shieldedSpends_ = other.shieldedSpends_.Clone();
      shieldedReceives_ = other.shieldedReceives_.Clone();
      transparentToAddress_ = other.transparentToAddress_;
      toAmount_ = other.toAmount_;
      shieldedTRC20ContractAddress_ = other.shieldedTRC20ContractAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrivateShieldedTRC20ParametersWithoutAsk Clone() {
      return new PrivateShieldedTRC20ParametersWithoutAsk(this);
    }

    /// <summary>Field number for the "ak" field.</summary>
    public const int AkFieldNumber = 1;
    private pb::ByteString ak_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ak {
      get { return ak_; }
      set {
        ak_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nsk" field.</summary>
    public const int NskFieldNumber = 2;
    private pb::ByteString nsk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nsk {
      get { return nsk_; }
      set {
        nsk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ovk" field.</summary>
    public const int OvkFieldNumber = 3;
    private pb::ByteString ovk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ovk {
      get { return ovk_; }
      set {
        ovk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from_amount" field.</summary>
    public const int FromAmountFieldNumber = 4;
    private string fromAmount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromAmount {
      get { return fromAmount_; }
      set {
        fromAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shielded_spends" field.</summary>
    public const int ShieldedSpendsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.SpendNoteTRC20> _repeated_shieldedSpends_codec
        = pb::FieldCodec.ForMessage(42, global::Tron.Net.Protocol.SpendNoteTRC20.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.SpendNoteTRC20> shieldedSpends_ = new pbc::RepeatedField<global::Tron.Net.Protocol.SpendNoteTRC20>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.SpendNoteTRC20> ShieldedSpends {
      get { return shieldedSpends_; }
    }

    /// <summary>Field number for the "shielded_receives" field.</summary>
    public const int ShieldedReceivesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.ReceiveNote> _repeated_shieldedReceives_codec
        = pb::FieldCodec.ForMessage(50, global::Tron.Net.Protocol.ReceiveNote.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote> shieldedReceives_ = new pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveNote> ShieldedReceives {
      get { return shieldedReceives_; }
    }

    /// <summary>Field number for the "transparent_to_address" field.</summary>
    public const int TransparentToAddressFieldNumber = 7;
    private pb::ByteString transparentToAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransparentToAddress {
      get { return transparentToAddress_; }
      set {
        transparentToAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to_amount" field.</summary>
    public const int ToAmountFieldNumber = 8;
    private string toAmount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToAmount {
      get { return toAmount_; }
      set {
        toAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shielded_TRC20_contract_address" field.</summary>
    public const int ShieldedTRC20ContractAddressFieldNumber = 9;
    private pb::ByteString shieldedTRC20ContractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ShieldedTRC20ContractAddress {
      get { return shieldedTRC20ContractAddress_; }
      set {
        shieldedTRC20ContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrivateShieldedTRC20ParametersWithoutAsk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrivateShieldedTRC20ParametersWithoutAsk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ak != other.Ak) return false;
      if (Nsk != other.Nsk) return false;
      if (Ovk != other.Ovk) return false;
      if (FromAmount != other.FromAmount) return false;
      if(!shieldedSpends_.Equals(other.shieldedSpends_)) return false;
      if(!shieldedReceives_.Equals(other.shieldedReceives_)) return false;
      if (TransparentToAddress != other.TransparentToAddress) return false;
      if (ToAmount != other.ToAmount) return false;
      if (ShieldedTRC20ContractAddress != other.ShieldedTRC20ContractAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ak.Length != 0) hash ^= Ak.GetHashCode();
      if (Nsk.Length != 0) hash ^= Nsk.GetHashCode();
      if (Ovk.Length != 0) hash ^= Ovk.GetHashCode();
      if (FromAmount.Length != 0) hash ^= FromAmount.GetHashCode();
      hash ^= shieldedSpends_.GetHashCode();
      hash ^= shieldedReceives_.GetHashCode();
      if (TransparentToAddress.Length != 0) hash ^= TransparentToAddress.GetHashCode();
      if (ToAmount.Length != 0) hash ^= ToAmount.GetHashCode();
      if (ShieldedTRC20ContractAddress.Length != 0) hash ^= ShieldedTRC20ContractAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ak.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Ak);
      }
      if (Nsk.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Nsk);
      }
      if (Ovk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Ovk);
      }
      if (FromAmount.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FromAmount);
      }
      shieldedSpends_.WriteTo(output, _repeated_shieldedSpends_codec);
      shieldedReceives_.WriteTo(output, _repeated_shieldedReceives_codec);
      if (TransparentToAddress.Length != 0) {
        output.WriteRawTag(58);
        output.WriteBytes(TransparentToAddress);
      }
      if (ToAmount.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ToAmount);
      }
      if (ShieldedTRC20ContractAddress.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(ShieldedTRC20ContractAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ak.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ak);
      }
      if (Nsk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nsk);
      }
      if (Ovk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ovk);
      }
      if (FromAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromAmount);
      }
      size += shieldedSpends_.CalculateSize(_repeated_shieldedSpends_codec);
      size += shieldedReceives_.CalculateSize(_repeated_shieldedReceives_codec);
      if (TransparentToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransparentToAddress);
      }
      if (ToAmount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToAmount);
      }
      if (ShieldedTRC20ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShieldedTRC20ContractAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrivateShieldedTRC20ParametersWithoutAsk other) {
      if (other == null) {
        return;
      }
      if (other.Ak.Length != 0) {
        Ak = other.Ak;
      }
      if (other.Nsk.Length != 0) {
        Nsk = other.Nsk;
      }
      if (other.Ovk.Length != 0) {
        Ovk = other.Ovk;
      }
      if (other.FromAmount.Length != 0) {
        FromAmount = other.FromAmount;
      }
      shieldedSpends_.Add(other.shieldedSpends_);
      shieldedReceives_.Add(other.shieldedReceives_);
      if (other.TransparentToAddress.Length != 0) {
        TransparentToAddress = other.TransparentToAddress;
      }
      if (other.ToAmount.Length != 0) {
        ToAmount = other.ToAmount;
      }
      if (other.ShieldedTRC20ContractAddress.Length != 0) {
        ShieldedTRC20ContractAddress = other.ShieldedTRC20ContractAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ak = input.ReadBytes();
            break;
          }
          case 18: {
            Nsk = input.ReadBytes();
            break;
          }
          case 26: {
            Ovk = input.ReadBytes();
            break;
          }
          case 34: {
            FromAmount = input.ReadString();
            break;
          }
          case 42: {
            shieldedSpends_.AddEntriesFrom(input, _repeated_shieldedSpends_codec);
            break;
          }
          case 50: {
            shieldedReceives_.AddEntriesFrom(input, _repeated_shieldedReceives_codec);
            break;
          }
          case 58: {
            TransparentToAddress = input.ReadBytes();
            break;
          }
          case 66: {
            ToAmount = input.ReadString();
            break;
          }
          case 74: {
            ShieldedTRC20ContractAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShieldedTRC20Parameters : pb::IMessage<ShieldedTRC20Parameters> {
    private static readonly pb::MessageParser<ShieldedTRC20Parameters> _parser = new pb::MessageParser<ShieldedTRC20Parameters>(() => new ShieldedTRC20Parameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShieldedTRC20Parameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedTRC20Parameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedTRC20Parameters(ShieldedTRC20Parameters other) : this() {
      spendDescription_ = other.spendDescription_.Clone();
      receiveDescription_ = other.receiveDescription_.Clone();
      bindingSignature_ = other.bindingSignature_;
      messageHash_ = other.messageHash_;
      triggerContractInput_ = other.triggerContractInput_;
      parameterType_ = other.parameterType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedTRC20Parameters Clone() {
      return new ShieldedTRC20Parameters(this);
    }

    /// <summary>Field number for the "spend_description" field.</summary>
    public const int SpendDescriptionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.SpendDescription> _repeated_spendDescription_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.SpendDescription.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.SpendDescription> spendDescription_ = new pbc::RepeatedField<global::Tron.Net.Protocol.SpendDescription>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.SpendDescription> SpendDescription {
      get { return spendDescription_; }
    }

    /// <summary>Field number for the "receive_description" field.</summary>
    public const int ReceiveDescriptionFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.ReceiveDescription> _repeated_receiveDescription_codec
        = pb::FieldCodec.ForMessage(18, global::Tron.Net.Protocol.ReceiveDescription.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveDescription> receiveDescription_ = new pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveDescription>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.ReceiveDescription> ReceiveDescription {
      get { return receiveDescription_; }
    }

    /// <summary>Field number for the "binding_signature" field.</summary>
    public const int BindingSignatureFieldNumber = 3;
    private pb::ByteString bindingSignature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BindingSignature {
      get { return bindingSignature_; }
      set {
        bindingSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message_hash" field.</summary>
    public const int MessageHashFieldNumber = 4;
    private pb::ByteString messageHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MessageHash {
      get { return messageHash_; }
      set {
        messageHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_contract_input" field.</summary>
    public const int TriggerContractInputFieldNumber = 5;
    private string triggerContractInput_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TriggerContractInput {
      get { return triggerContractInput_; }
      set {
        triggerContractInput_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameter_type" field.</summary>
    public const int ParameterTypeFieldNumber = 6;
    private string parameterType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParameterType {
      get { return parameterType_; }
      set {
        parameterType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShieldedTRC20Parameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShieldedTRC20Parameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!spendDescription_.Equals(other.spendDescription_)) return false;
      if(!receiveDescription_.Equals(other.receiveDescription_)) return false;
      if (BindingSignature != other.BindingSignature) return false;
      if (MessageHash != other.MessageHash) return false;
      if (TriggerContractInput != other.TriggerContractInput) return false;
      if (ParameterType != other.ParameterType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= spendDescription_.GetHashCode();
      hash ^= receiveDescription_.GetHashCode();
      if (BindingSignature.Length != 0) hash ^= BindingSignature.GetHashCode();
      if (MessageHash.Length != 0) hash ^= MessageHash.GetHashCode();
      if (TriggerContractInput.Length != 0) hash ^= TriggerContractInput.GetHashCode();
      if (ParameterType.Length != 0) hash ^= ParameterType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      spendDescription_.WriteTo(output, _repeated_spendDescription_codec);
      receiveDescription_.WriteTo(output, _repeated_receiveDescription_codec);
      if (BindingSignature.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(BindingSignature);
      }
      if (MessageHash.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(MessageHash);
      }
      if (TriggerContractInput.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TriggerContractInput);
      }
      if (ParameterType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ParameterType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += spendDescription_.CalculateSize(_repeated_spendDescription_codec);
      size += receiveDescription_.CalculateSize(_repeated_receiveDescription_codec);
      if (BindingSignature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BindingSignature);
      }
      if (MessageHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MessageHash);
      }
      if (TriggerContractInput.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerContractInput);
      }
      if (ParameterType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParameterType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShieldedTRC20Parameters other) {
      if (other == null) {
        return;
      }
      spendDescription_.Add(other.spendDescription_);
      receiveDescription_.Add(other.receiveDescription_);
      if (other.BindingSignature.Length != 0) {
        BindingSignature = other.BindingSignature;
      }
      if (other.MessageHash.Length != 0) {
        MessageHash = other.MessageHash;
      }
      if (other.TriggerContractInput.Length != 0) {
        TriggerContractInput = other.TriggerContractInput;
      }
      if (other.ParameterType.Length != 0) {
        ParameterType = other.ParameterType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            spendDescription_.AddEntriesFrom(input, _repeated_spendDescription_codec);
            break;
          }
          case 18: {
            receiveDescription_.AddEntriesFrom(input, _repeated_receiveDescription_codec);
            break;
          }
          case 26: {
            BindingSignature = input.ReadBytes();
            break;
          }
          case 34: {
            MessageHash = input.ReadBytes();
            break;
          }
          case 42: {
            TriggerContractInput = input.ReadString();
            break;
          }
          case 50: {
            ParameterType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IvkDecryptTRC20Parameters : pb::IMessage<IvkDecryptTRC20Parameters> {
    private static readonly pb::MessageParser<IvkDecryptTRC20Parameters> _parser = new pb::MessageParser<IvkDecryptTRC20Parameters>(() => new IvkDecryptTRC20Parameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IvkDecryptTRC20Parameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IvkDecryptTRC20Parameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IvkDecryptTRC20Parameters(IvkDecryptTRC20Parameters other) : this() {
      startBlockIndex_ = other.startBlockIndex_;
      endBlockIndex_ = other.endBlockIndex_;
      shieldedTRC20ContractAddress_ = other.shieldedTRC20ContractAddress_;
      ivk_ = other.ivk_;
      ak_ = other.ak_;
      nk_ = other.nk_;
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IvkDecryptTRC20Parameters Clone() {
      return new IvkDecryptTRC20Parameters(this);
    }

    /// <summary>Field number for the "start_block_index" field.</summary>
    public const int StartBlockIndexFieldNumber = 1;
    private long startBlockIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartBlockIndex {
      get { return startBlockIndex_; }
      set {
        startBlockIndex_ = value;
      }
    }

    /// <summary>Field number for the "end_block_index" field.</summary>
    public const int EndBlockIndexFieldNumber = 2;
    private long endBlockIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndBlockIndex {
      get { return endBlockIndex_; }
      set {
        endBlockIndex_ = value;
      }
    }

    /// <summary>Field number for the "shielded_TRC20_contract_address" field.</summary>
    public const int ShieldedTRC20ContractAddressFieldNumber = 3;
    private pb::ByteString shieldedTRC20ContractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ShieldedTRC20ContractAddress {
      get { return shieldedTRC20ContractAddress_; }
      set {
        shieldedTRC20ContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ivk" field.</summary>
    public const int IvkFieldNumber = 4;
    private pb::ByteString ivk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ivk {
      get { return ivk_; }
      set {
        ivk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ak" field.</summary>
    public const int AkFieldNumber = 5;
    private pb::ByteString ak_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ak {
      get { return ak_; }
      set {
        ak_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nk" field.</summary>
    public const int NkFieldNumber = 6;
    private pb::ByteString nk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nk {
      get { return nk_; }
      set {
        nk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_events_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> events_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IvkDecryptTRC20Parameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IvkDecryptTRC20Parameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartBlockIndex != other.StartBlockIndex) return false;
      if (EndBlockIndex != other.EndBlockIndex) return false;
      if (ShieldedTRC20ContractAddress != other.ShieldedTRC20ContractAddress) return false;
      if (Ivk != other.Ivk) return false;
      if (Ak != other.Ak) return false;
      if (Nk != other.Nk) return false;
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartBlockIndex != 0L) hash ^= StartBlockIndex.GetHashCode();
      if (EndBlockIndex != 0L) hash ^= EndBlockIndex.GetHashCode();
      if (ShieldedTRC20ContractAddress.Length != 0) hash ^= ShieldedTRC20ContractAddress.GetHashCode();
      if (Ivk.Length != 0) hash ^= Ivk.GetHashCode();
      if (Ak.Length != 0) hash ^= Ak.GetHashCode();
      if (Nk.Length != 0) hash ^= Nk.GetHashCode();
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartBlockIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartBlockIndex);
      }
      if (EndBlockIndex != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndBlockIndex);
      }
      if (ShieldedTRC20ContractAddress.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(ShieldedTRC20ContractAddress);
      }
      if (Ivk.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Ivk);
      }
      if (Ak.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Ak);
      }
      if (Nk.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Nk);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartBlockIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartBlockIndex);
      }
      if (EndBlockIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndBlockIndex);
      }
      if (ShieldedTRC20ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShieldedTRC20ContractAddress);
      }
      if (Ivk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ivk);
      }
      if (Ak.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ak);
      }
      if (Nk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nk);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IvkDecryptTRC20Parameters other) {
      if (other == null) {
        return;
      }
      if (other.StartBlockIndex != 0L) {
        StartBlockIndex = other.StartBlockIndex;
      }
      if (other.EndBlockIndex != 0L) {
        EndBlockIndex = other.EndBlockIndex;
      }
      if (other.ShieldedTRC20ContractAddress.Length != 0) {
        ShieldedTRC20ContractAddress = other.ShieldedTRC20ContractAddress;
      }
      if (other.Ivk.Length != 0) {
        Ivk = other.Ivk;
      }
      if (other.Ak.Length != 0) {
        Ak = other.Ak;
      }
      if (other.Nk.Length != 0) {
        Nk = other.Nk;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartBlockIndex = input.ReadInt64();
            break;
          }
          case 16: {
            EndBlockIndex = input.ReadInt64();
            break;
          }
          case 26: {
            ShieldedTRC20ContractAddress = input.ReadBytes();
            break;
          }
          case 34: {
            Ivk = input.ReadBytes();
            break;
          }
          case 42: {
            Ak = input.ReadBytes();
            break;
          }
          case 50: {
            Nk = input.ReadBytes();
            break;
          }
          case 58: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OvkDecryptTRC20Parameters : pb::IMessage<OvkDecryptTRC20Parameters> {
    private static readonly pb::MessageParser<OvkDecryptTRC20Parameters> _parser = new pb::MessageParser<OvkDecryptTRC20Parameters>(() => new OvkDecryptTRC20Parameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OvkDecryptTRC20Parameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OvkDecryptTRC20Parameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OvkDecryptTRC20Parameters(OvkDecryptTRC20Parameters other) : this() {
      startBlockIndex_ = other.startBlockIndex_;
      endBlockIndex_ = other.endBlockIndex_;
      ovk_ = other.ovk_;
      shieldedTRC20ContractAddress_ = other.shieldedTRC20ContractAddress_;
      events_ = other.events_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OvkDecryptTRC20Parameters Clone() {
      return new OvkDecryptTRC20Parameters(this);
    }

    /// <summary>Field number for the "start_block_index" field.</summary>
    public const int StartBlockIndexFieldNumber = 1;
    private long startBlockIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartBlockIndex {
      get { return startBlockIndex_; }
      set {
        startBlockIndex_ = value;
      }
    }

    /// <summary>Field number for the "end_block_index" field.</summary>
    public const int EndBlockIndexFieldNumber = 2;
    private long endBlockIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndBlockIndex {
      get { return endBlockIndex_; }
      set {
        endBlockIndex_ = value;
      }
    }

    /// <summary>Field number for the "ovk" field.</summary>
    public const int OvkFieldNumber = 3;
    private pb::ByteString ovk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ovk {
      get { return ovk_; }
      set {
        ovk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shielded_TRC20_contract_address" field.</summary>
    public const int ShieldedTRC20ContractAddressFieldNumber = 4;
    private pb::ByteString shieldedTRC20ContractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ShieldedTRC20ContractAddress {
      get { return shieldedTRC20ContractAddress_; }
      set {
        shieldedTRC20ContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_events_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> events_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Events {
      get { return events_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OvkDecryptTRC20Parameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OvkDecryptTRC20Parameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StartBlockIndex != other.StartBlockIndex) return false;
      if (EndBlockIndex != other.EndBlockIndex) return false;
      if (Ovk != other.Ovk) return false;
      if (ShieldedTRC20ContractAddress != other.ShieldedTRC20ContractAddress) return false;
      if(!events_.Equals(other.events_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StartBlockIndex != 0L) hash ^= StartBlockIndex.GetHashCode();
      if (EndBlockIndex != 0L) hash ^= EndBlockIndex.GetHashCode();
      if (Ovk.Length != 0) hash ^= Ovk.GetHashCode();
      if (ShieldedTRC20ContractAddress.Length != 0) hash ^= ShieldedTRC20ContractAddress.GetHashCode();
      hash ^= events_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StartBlockIndex != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(StartBlockIndex);
      }
      if (EndBlockIndex != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(EndBlockIndex);
      }
      if (Ovk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Ovk);
      }
      if (ShieldedTRC20ContractAddress.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(ShieldedTRC20ContractAddress);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StartBlockIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartBlockIndex);
      }
      if (EndBlockIndex != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndBlockIndex);
      }
      if (Ovk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ovk);
      }
      if (ShieldedTRC20ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShieldedTRC20ContractAddress);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OvkDecryptTRC20Parameters other) {
      if (other == null) {
        return;
      }
      if (other.StartBlockIndex != 0L) {
        StartBlockIndex = other.StartBlockIndex;
      }
      if (other.EndBlockIndex != 0L) {
        EndBlockIndex = other.EndBlockIndex;
      }
      if (other.Ovk.Length != 0) {
        Ovk = other.Ovk;
      }
      if (other.ShieldedTRC20ContractAddress.Length != 0) {
        ShieldedTRC20ContractAddress = other.ShieldedTRC20ContractAddress;
      }
      events_.Add(other.events_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StartBlockIndex = input.ReadInt64();
            break;
          }
          case 16: {
            EndBlockIndex = input.ReadInt64();
            break;
          }
          case 26: {
            Ovk = input.ReadBytes();
            break;
          }
          case 34: {
            ShieldedTRC20ContractAddress = input.ReadBytes();
            break;
          }
          case 42: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DecryptNotesTRC20 : pb::IMessage<DecryptNotesTRC20> {
    private static readonly pb::MessageParser<DecryptNotesTRC20> _parser = new pb::MessageParser<DecryptNotesTRC20>(() => new DecryptNotesTRC20());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DecryptNotesTRC20> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptNotesTRC20() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptNotesTRC20(DecryptNotesTRC20 other) : this() {
      noteTxs_ = other.noteTxs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DecryptNotesTRC20 Clone() {
      return new DecryptNotesTRC20(this);
    }

    /// <summary>Field number for the "noteTxs" field.</summary>
    public const int NoteTxsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.DecryptNotesTRC20.Types.NoteTx> _repeated_noteTxs_codec
        = pb::FieldCodec.ForMessage(10, global::Tron.Net.Protocol.DecryptNotesTRC20.Types.NoteTx.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.DecryptNotesTRC20.Types.NoteTx> noteTxs_ = new pbc::RepeatedField<global::Tron.Net.Protocol.DecryptNotesTRC20.Types.NoteTx>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.DecryptNotesTRC20.Types.NoteTx> NoteTxs {
      get { return noteTxs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DecryptNotesTRC20);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DecryptNotesTRC20 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!noteTxs_.Equals(other.noteTxs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= noteTxs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      noteTxs_.WriteTo(output, _repeated_noteTxs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += noteTxs_.CalculateSize(_repeated_noteTxs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DecryptNotesTRC20 other) {
      if (other == null) {
        return;
      }
      noteTxs_.Add(other.noteTxs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            noteTxs_.AddEntriesFrom(input, _repeated_noteTxs_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DecryptNotesTRC20 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class NoteTx : pb::IMessage<NoteTx> {
        private static readonly pb::MessageParser<NoteTx> _parser = new pb::MessageParser<NoteTx>(() => new NoteTx());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NoteTx> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tron.Net.Protocol.DecryptNotesTRC20.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoteTx() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoteTx(NoteTx other) : this() {
          note_ = other.note_ != null ? other.note_.Clone() : null;
          position_ = other.position_;
          isSpent_ = other.isSpent_;
          txid_ = other.txid_;
          index_ = other.index_;
          toAmount_ = other.toAmount_;
          transparentToAddress_ = other.transparentToAddress_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NoteTx Clone() {
          return new NoteTx(this);
        }

        /// <summary>Field number for the "note" field.</summary>
        public const int NoteFieldNumber = 1;
        private global::Tron.Net.Protocol.Note note_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Tron.Net.Protocol.Note Note {
          get { return note_; }
          set {
            note_ = value;
          }
        }

        /// <summary>Field number for the "position" field.</summary>
        public const int PositionFieldNumber = 2;
        private long position_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Position {
          get { return position_; }
          set {
            position_ = value;
          }
        }

        /// <summary>Field number for the "is_spent" field.</summary>
        public const int IsSpentFieldNumber = 3;
        private bool isSpent_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsSpent {
          get { return isSpent_; }
          set {
            isSpent_ = value;
          }
        }

        /// <summary>Field number for the "txid" field.</summary>
        public const int TxidFieldNumber = 4;
        private pb::ByteString txid_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Txid {
          get { return txid_; }
          set {
            txid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 5;
        private int index_;
        /// <summary>
        ///the index of note in txid
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        /// <summary>Field number for the "to_amount" field.</summary>
        public const int ToAmountFieldNumber = 6;
        private string toAmount_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ToAmount {
          get { return toAmount_; }
          set {
            toAmount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "transparent_to_address" field.</summary>
        public const int TransparentToAddressFieldNumber = 7;
        private pb::ByteString transparentToAddress_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString TransparentToAddress {
          get { return transparentToAddress_; }
          set {
            transparentToAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NoteTx);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NoteTx other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Note, other.Note)) return false;
          if (Position != other.Position) return false;
          if (IsSpent != other.IsSpent) return false;
          if (Txid != other.Txid) return false;
          if (Index != other.Index) return false;
          if (ToAmount != other.ToAmount) return false;
          if (TransparentToAddress != other.TransparentToAddress) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (note_ != null) hash ^= Note.GetHashCode();
          if (Position != 0L) hash ^= Position.GetHashCode();
          if (IsSpent != false) hash ^= IsSpent.GetHashCode();
          if (Txid.Length != 0) hash ^= Txid.GetHashCode();
          if (Index != 0) hash ^= Index.GetHashCode();
          if (ToAmount.Length != 0) hash ^= ToAmount.GetHashCode();
          if (TransparentToAddress.Length != 0) hash ^= TransparentToAddress.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (note_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Note);
          }
          if (Position != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Position);
          }
          if (IsSpent != false) {
            output.WriteRawTag(24);
            output.WriteBool(IsSpent);
          }
          if (Txid.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(Txid);
          }
          if (Index != 0) {
            output.WriteRawTag(40);
            output.WriteInt32(Index);
          }
          if (ToAmount.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(ToAmount);
          }
          if (TransparentToAddress.Length != 0) {
            output.WriteRawTag(58);
            output.WriteBytes(TransparentToAddress);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (note_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Note);
          }
          if (Position != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Position);
          }
          if (IsSpent != false) {
            size += 1 + 1;
          }
          if (Txid.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Txid);
          }
          if (Index != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
          }
          if (ToAmount.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ToAmount);
          }
          if (TransparentToAddress.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransparentToAddress);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NoteTx other) {
          if (other == null) {
            return;
          }
          if (other.note_ != null) {
            if (note_ == null) {
              Note = new global::Tron.Net.Protocol.Note();
            }
            Note.MergeFrom(other.Note);
          }
          if (other.Position != 0L) {
            Position = other.Position;
          }
          if (other.IsSpent != false) {
            IsSpent = other.IsSpent;
          }
          if (other.Txid.Length != 0) {
            Txid = other.Txid;
          }
          if (other.Index != 0) {
            Index = other.Index;
          }
          if (other.ToAmount.Length != 0) {
            ToAmount = other.ToAmount;
          }
          if (other.TransparentToAddress.Length != 0) {
            TransparentToAddress = other.TransparentToAddress;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (note_ == null) {
                  Note = new global::Tron.Net.Protocol.Note();
                }
                input.ReadMessage(Note);
                break;
              }
              case 16: {
                Position = input.ReadInt64();
                break;
              }
              case 24: {
                IsSpent = input.ReadBool();
                break;
              }
              case 34: {
                Txid = input.ReadBytes();
                break;
              }
              case 40: {
                Index = input.ReadInt32();
                break;
              }
              case 50: {
                ToAmount = input.ReadString();
                break;
              }
              case 58: {
                TransparentToAddress = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class NfTRC20Parameters : pb::IMessage<NfTRC20Parameters> {
    private static readonly pb::MessageParser<NfTRC20Parameters> _parser = new pb::MessageParser<NfTRC20Parameters>(() => new NfTRC20Parameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NfTRC20Parameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NfTRC20Parameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NfTRC20Parameters(NfTRC20Parameters other) : this() {
      note_ = other.note_ != null ? other.note_.Clone() : null;
      ak_ = other.ak_;
      nk_ = other.nk_;
      position_ = other.position_;
      shieldedTRC20ContractAddress_ = other.shieldedTRC20ContractAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NfTRC20Parameters Clone() {
      return new NfTRC20Parameters(this);
    }

    /// <summary>Field number for the "note" field.</summary>
    public const int NoteFieldNumber = 1;
    private global::Tron.Net.Protocol.Note note_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.Note Note {
      get { return note_; }
      set {
        note_ = value;
      }
    }

    /// <summary>Field number for the "ak" field.</summary>
    public const int AkFieldNumber = 2;
    private pb::ByteString ak_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Ak {
      get { return ak_; }
      set {
        ak_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nk" field.</summary>
    public const int NkFieldNumber = 3;
    private pb::ByteString nk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Nk {
      get { return nk_; }
      set {
        nk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private long position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "shielded_TRC20_contract_address" field.</summary>
    public const int ShieldedTRC20ContractAddressFieldNumber = 5;
    private pb::ByteString shieldedTRC20ContractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ShieldedTRC20ContractAddress {
      get { return shieldedTRC20ContractAddress_; }
      set {
        shieldedTRC20ContractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NfTRC20Parameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NfTRC20Parameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Note, other.Note)) return false;
      if (Ak != other.Ak) return false;
      if (Nk != other.Nk) return false;
      if (Position != other.Position) return false;
      if (ShieldedTRC20ContractAddress != other.ShieldedTRC20ContractAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (note_ != null) hash ^= Note.GetHashCode();
      if (Ak.Length != 0) hash ^= Ak.GetHashCode();
      if (Nk.Length != 0) hash ^= Nk.GetHashCode();
      if (Position != 0L) hash ^= Position.GetHashCode();
      if (ShieldedTRC20ContractAddress.Length != 0) hash ^= ShieldedTRC20ContractAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (note_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Note);
      }
      if (Ak.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Ak);
      }
      if (Nk.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Nk);
      }
      if (Position != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Position);
      }
      if (ShieldedTRC20ContractAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(ShieldedTRC20ContractAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (note_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Note);
      }
      if (Ak.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Ak);
      }
      if (Nk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Nk);
      }
      if (Position != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Position);
      }
      if (ShieldedTRC20ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ShieldedTRC20ContractAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NfTRC20Parameters other) {
      if (other == null) {
        return;
      }
      if (other.note_ != null) {
        if (note_ == null) {
          Note = new global::Tron.Net.Protocol.Note();
        }
        Note.MergeFrom(other.Note);
      }
      if (other.Ak.Length != 0) {
        Ak = other.Ak;
      }
      if (other.Nk.Length != 0) {
        Nk = other.Nk;
      }
      if (other.Position != 0L) {
        Position = other.Position;
      }
      if (other.ShieldedTRC20ContractAddress.Length != 0) {
        ShieldedTRC20ContractAddress = other.ShieldedTRC20ContractAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (note_ == null) {
              Note = new global::Tron.Net.Protocol.Note();
            }
            input.ReadMessage(Note);
            break;
          }
          case 18: {
            Ak = input.ReadBytes();
            break;
          }
          case 26: {
            Nk = input.ReadBytes();
            break;
          }
          case 32: {
            Position = input.ReadInt64();
            break;
          }
          case 42: {
            ShieldedTRC20ContractAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NullifierResult : pb::IMessage<NullifierResult> {
    private static readonly pb::MessageParser<NullifierResult> _parser = new pb::MessageParser<NullifierResult>(() => new NullifierResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NullifierResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullifierResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullifierResult(NullifierResult other) : this() {
      isSpent_ = other.isSpent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NullifierResult Clone() {
      return new NullifierResult(this);
    }

    /// <summary>Field number for the "is_spent" field.</summary>
    public const int IsSpentFieldNumber = 1;
    private bool isSpent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSpent {
      get { return isSpent_; }
      set {
        isSpent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NullifierResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NullifierResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSpent != other.IsSpent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSpent != false) hash ^= IsSpent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSpent != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSpent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSpent != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NullifierResult other) {
      if (other == null) {
        return;
      }
      if (other.IsSpent != false) {
        IsSpent = other.IsSpent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSpent = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShieldedTRC20TriggerContractParameters : pb::IMessage<ShieldedTRC20TriggerContractParameters> {
    private static readonly pb::MessageParser<ShieldedTRC20TriggerContractParameters> _parser = new pb::MessageParser<ShieldedTRC20TriggerContractParameters>(() => new ShieldedTRC20TriggerContractParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShieldedTRC20TriggerContractParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tron.Net.Protocol.ApiReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedTRC20TriggerContractParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedTRC20TriggerContractParameters(ShieldedTRC20TriggerContractParameters other) : this() {
      shieldedTRC20Parameters_ = other.shieldedTRC20Parameters_ != null ? other.shieldedTRC20Parameters_.Clone() : null;
      spendAuthoritySignature_ = other.spendAuthoritySignature_.Clone();
      amount_ = other.amount_;
      transparentToAddress_ = other.transparentToAddress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShieldedTRC20TriggerContractParameters Clone() {
      return new ShieldedTRC20TriggerContractParameters(this);
    }

    /// <summary>Field number for the "shielded_TRC20_Parameters" field.</summary>
    public const int ShieldedTRC20ParametersFieldNumber = 1;
    private global::Tron.Net.Protocol.ShieldedTRC20Parameters shieldedTRC20Parameters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Tron.Net.Protocol.ShieldedTRC20Parameters ShieldedTRC20Parameters {
      get { return shieldedTRC20Parameters_; }
      set {
        shieldedTRC20Parameters_ = value;
      }
    }

    /// <summary>Field number for the "spend_authority_signature" field.</summary>
    public const int SpendAuthoritySignatureFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tron.Net.Protocol.BytesMessage> _repeated_spendAuthoritySignature_codec
        = pb::FieldCodec.ForMessage(18, global::Tron.Net.Protocol.BytesMessage.Parser);
    private readonly pbc::RepeatedField<global::Tron.Net.Protocol.BytesMessage> spendAuthoritySignature_ = new pbc::RepeatedField<global::Tron.Net.Protocol.BytesMessage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Tron.Net.Protocol.BytesMessage> SpendAuthoritySignature {
      get { return spendAuthoritySignature_; }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private string amount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Amount {
      get { return amount_; }
      set {
        amount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transparent_to_address" field.</summary>
    public const int TransparentToAddressFieldNumber = 4;
    private pb::ByteString transparentToAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransparentToAddress {
      get { return transparentToAddress_; }
      set {
        transparentToAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShieldedTRC20TriggerContractParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShieldedTRC20TriggerContractParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ShieldedTRC20Parameters, other.ShieldedTRC20Parameters)) return false;
      if(!spendAuthoritySignature_.Equals(other.spendAuthoritySignature_)) return false;
      if (Amount != other.Amount) return false;
      if (TransparentToAddress != other.TransparentToAddress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (shieldedTRC20Parameters_ != null) hash ^= ShieldedTRC20Parameters.GetHashCode();
      hash ^= spendAuthoritySignature_.GetHashCode();
      if (Amount.Length != 0) hash ^= Amount.GetHashCode();
      if (TransparentToAddress.Length != 0) hash ^= TransparentToAddress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (shieldedTRC20Parameters_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ShieldedTRC20Parameters);
      }
      spendAuthoritySignature_.WriteTo(output, _repeated_spendAuthoritySignature_codec);
      if (Amount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Amount);
      }
      if (TransparentToAddress.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(TransparentToAddress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (shieldedTRC20Parameters_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShieldedTRC20Parameters);
      }
      size += spendAuthoritySignature_.CalculateSize(_repeated_spendAuthoritySignature_codec);
      if (Amount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Amount);
      }
      if (TransparentToAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransparentToAddress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShieldedTRC20TriggerContractParameters other) {
      if (other == null) {
        return;
      }
      if (other.shieldedTRC20Parameters_ != null) {
        if (shieldedTRC20Parameters_ == null) {
          ShieldedTRC20Parameters = new global::Tron.Net.Protocol.ShieldedTRC20Parameters();
        }
        ShieldedTRC20Parameters.MergeFrom(other.ShieldedTRC20Parameters);
      }
      spendAuthoritySignature_.Add(other.spendAuthoritySignature_);
      if (other.Amount.Length != 0) {
        Amount = other.Amount;
      }
      if (other.TransparentToAddress.Length != 0) {
        TransparentToAddress = other.TransparentToAddress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (shieldedTRC20Parameters_ == null) {
              ShieldedTRC20Parameters = new global::Tron.Net.Protocol.ShieldedTRC20Parameters();
            }
            input.ReadMessage(ShieldedTRC20Parameters);
            break;
          }
          case 18: {
            spendAuthoritySignature_.AddEntriesFrom(input, _repeated_spendAuthoritySignature_codec);
            break;
          }
          case 26: {
            Amount = input.ReadString();
            break;
          }
          case 34: {
            TransparentToAddress = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
